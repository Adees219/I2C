

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Aug 09 13:22:28 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Version 2.40
    43                           ; Generated 17/11/2021 GMT
    44                           ; 
    45                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0011                     	;# 
    96     0012                     	;# 
    97     0013                     	;# 
    98     0014                     	;# 
    99     0015                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0017                     	;# 
   103     0018                     	;# 
   104     0019                     	;# 
   105     001A                     	;# 
   106     001B                     	;# 
   107     001B                     	;# 
   108     001C                     	;# 
   109     001D                     	;# 
   110     001E                     	;# 
   111     001F                     	;# 
   112     0081                     	;# 
   113     0085                     	;# 
   114     0086                     	;# 
   115     0087                     	;# 
   116     0088                     	;# 
   117     0089                     	;# 
   118     008C                     	;# 
   119     008D                     	;# 
   120     008E                     	;# 
   121     008F                     	;# 
   122     0090                     	;# 
   123     0091                     	;# 
   124     0092                     	;# 
   125     0093                     	;# 
   126     0093                     	;# 
   127     0093                     	;# 
   128     0094                     	;# 
   129     0095                     	;# 
   130     0096                     	;# 
   131     0097                     	;# 
   132     0098                     	;# 
   133     0099                     	;# 
   134     009A                     	;# 
   135     009B                     	;# 
   136     009C                     	;# 
   137     009D                     	;# 
   138     009E                     	;# 
   139     009F                     	;# 
   140     0105                     	;# 
   141     0107                     	;# 
   142     0108                     	;# 
   143     0109                     	;# 
   144     010C                     	;# 
   145     010C                     	;# 
   146     010D                     	;# 
   147     010E                     	;# 
   148     010F                     	;# 
   149     0185                     	;# 
   150     0187                     	;# 
   151     0188                     	;# 
   152     0189                     	;# 
   153     018C                     	;# 
   154     018D                     	;# 
   155     0000                     	;# 
   156     0001                     	;# 
   157     0002                     	;# 
   158     0003                     	;# 
   159     0004                     	;# 
   160     0005                     	;# 
   161     0006                     	;# 
   162     0007                     	;# 
   163     0008                     	;# 
   164     0009                     	;# 
   165     000A                     	;# 
   166     000B                     	;# 
   167     000C                     	;# 
   168     000D                     	;# 
   169     000E                     	;# 
   170     000E                     	;# 
   171     000F                     	;# 
   172     0010                     	;# 
   173     0011                     	;# 
   174     0012                     	;# 
   175     0013                     	;# 
   176     0014                     	;# 
   177     0015                     	;# 
   178     0015                     	;# 
   179     0016                     	;# 
   180     0017                     	;# 
   181     0018                     	;# 
   182     0019                     	;# 
   183     001A                     	;# 
   184     001B                     	;# 
   185     001B                     	;# 
   186     001C                     	;# 
   187     001D                     	;# 
   188     001E                     	;# 
   189     001F                     	;# 
   190     0081                     	;# 
   191     0085                     	;# 
   192     0086                     	;# 
   193     0087                     	;# 
   194     0088                     	;# 
   195     0089                     	;# 
   196     008C                     	;# 
   197     008D                     	;# 
   198     008E                     	;# 
   199     008F                     	;# 
   200     0090                     	;# 
   201     0091                     	;# 
   202     0092                     	;# 
   203     0093                     	;# 
   204     0093                     	;# 
   205     0093                     	;# 
   206     0094                     	;# 
   207     0095                     	;# 
   208     0096                     	;# 
   209     0097                     	;# 
   210     0098                     	;# 
   211     0099                     	;# 
   212     009A                     	;# 
   213     009B                     	;# 
   214     009C                     	;# 
   215     009D                     	;# 
   216     009E                     	;# 
   217     009F                     	;# 
   218     0105                     	;# 
   219     0107                     	;# 
   220     0108                     	;# 
   221     0109                     	;# 
   222     010C                     	;# 
   223     010C                     	;# 
   224     010D                     	;# 
   225     010E                     	;# 
   226     010F                     	;# 
   227     0185                     	;# 
   228     0187                     	;# 
   229     0188                     	;# 
   230     0189                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233     0000                     	;# 
   234     0001                     	;# 
   235     0002                     	;# 
   236     0003                     	;# 
   237     0004                     	;# 
   238     0005                     	;# 
   239     0006                     	;# 
   240     0007                     	;# 
   241     0008                     	;# 
   242     0009                     	;# 
   243     000A                     	;# 
   244     000B                     	;# 
   245     000C                     	;# 
   246     000D                     	;# 
   247     000E                     	;# 
   248     000E                     	;# 
   249     000F                     	;# 
   250     0010                     	;# 
   251     0011                     	;# 
   252     0012                     	;# 
   253     0013                     	;# 
   254     0014                     	;# 
   255     0015                     	;# 
   256     0015                     	;# 
   257     0016                     	;# 
   258     0017                     	;# 
   259     0018                     	;# 
   260     0019                     	;# 
   261     001A                     	;# 
   262     001B                     	;# 
   263     001B                     	;# 
   264     001C                     	;# 
   265     001D                     	;# 
   266     001E                     	;# 
   267     001F                     	;# 
   268     0081                     	;# 
   269     0085                     	;# 
   270     0086                     	;# 
   271     0087                     	;# 
   272     0088                     	;# 
   273     0089                     	;# 
   274     008C                     	;# 
   275     008D                     	;# 
   276     008E                     	;# 
   277     008F                     	;# 
   278     0090                     	;# 
   279     0091                     	;# 
   280     0092                     	;# 
   281     0093                     	;# 
   282     0093                     	;# 
   283     0093                     	;# 
   284     0094                     	;# 
   285     0095                     	;# 
   286     0096                     	;# 
   287     0097                     	;# 
   288     0098                     	;# 
   289     0099                     	;# 
   290     009A                     	;# 
   291     009B                     	;# 
   292     009C                     	;# 
   293     009D                     	;# 
   294     009E                     	;# 
   295     009F                     	;# 
   296     0105                     	;# 
   297     0107                     	;# 
   298     0108                     	;# 
   299     0109                     	;# 
   300     010C                     	;# 
   301     010C                     	;# 
   302     010D                     	;# 
   303     010E                     	;# 
   304     010F                     	;# 
   305     0185                     	;# 
   306     0187                     	;# 
   307     0188                     	;# 
   308     0189                     	;# 
   309     018C                     	;# 
   310     018D                     	;# 
   311     0000                     	;# 
   312     0001                     	;# 
   313     0002                     	;# 
   314     0003                     	;# 
   315     0004                     	;# 
   316     0005                     	;# 
   317     0006                     	;# 
   318     0007                     	;# 
   319     0008                     	;# 
   320     0009                     	;# 
   321     000A                     	;# 
   322     000B                     	;# 
   323     000C                     	;# 
   324     000D                     	;# 
   325     000E                     	;# 
   326     000E                     	;# 
   327     000F                     	;# 
   328     0010                     	;# 
   329     0011                     	;# 
   330     0012                     	;# 
   331     0013                     	;# 
   332     0014                     	;# 
   333     0015                     	;# 
   334     0015                     	;# 
   335     0016                     	;# 
   336     0017                     	;# 
   337     0018                     	;# 
   338     0019                     	;# 
   339     001A                     	;# 
   340     001B                     	;# 
   341     001B                     	;# 
   342     001C                     	;# 
   343     001D                     	;# 
   344     001E                     	;# 
   345     001F                     	;# 
   346     0081                     	;# 
   347     0085                     	;# 
   348     0086                     	;# 
   349     0087                     	;# 
   350     0088                     	;# 
   351     0089                     	;# 
   352     008C                     	;# 
   353     008D                     	;# 
   354     008E                     	;# 
   355     008F                     	;# 
   356     0090                     	;# 
   357     0091                     	;# 
   358     0092                     	;# 
   359     0093                     	;# 
   360     0093                     	;# 
   361     0093                     	;# 
   362     0094                     	;# 
   363     0095                     	;# 
   364     0096                     	;# 
   365     0097                     	;# 
   366     0098                     	;# 
   367     0099                     	;# 
   368     009A                     	;# 
   369     009B                     	;# 
   370     009C                     	;# 
   371     009D                     	;# 
   372     009E                     	;# 
   373     009F                     	;# 
   374     0105                     	;# 
   375     0107                     	;# 
   376     0108                     	;# 
   377     0109                     	;# 
   378     010C                     	;# 
   379     010C                     	;# 
   380     010D                     	;# 
   381     010E                     	;# 
   382     010F                     	;# 
   383     0185                     	;# 
   384     0187                     	;# 
   385     0188                     	;# 
   386     0189                     	;# 
   387     018C                     	;# 
   388     018D                     	;# 
   389     0000                     	;# 
   390     0001                     	;# 
   391     0002                     	;# 
   392     0003                     	;# 
   393     0004                     	;# 
   394     0005                     	;# 
   395     0006                     	;# 
   396     0007                     	;# 
   397     0008                     	;# 
   398     0009                     	;# 
   399     000A                     	;# 
   400     000B                     	;# 
   401     000C                     	;# 
   402     000D                     	;# 
   403     000E                     	;# 
   404     000E                     	;# 
   405     000F                     	;# 
   406     0010                     	;# 
   407     0011                     	;# 
   408     0012                     	;# 
   409     0013                     	;# 
   410     0014                     	;# 
   411     0015                     	;# 
   412     0015                     	;# 
   413     0016                     	;# 
   414     0017                     	;# 
   415     0018                     	;# 
   416     0019                     	;# 
   417     001A                     	;# 
   418     001B                     	;# 
   419     001B                     	;# 
   420     001C                     	;# 
   421     001D                     	;# 
   422     001E                     	;# 
   423     001F                     	;# 
   424     0081                     	;# 
   425     0085                     	;# 
   426     0086                     	;# 
   427     0087                     	;# 
   428     0088                     	;# 
   429     0089                     	;# 
   430     008C                     	;# 
   431     008D                     	;# 
   432     008E                     	;# 
   433     008F                     	;# 
   434     0090                     	;# 
   435     0091                     	;# 
   436     0092                     	;# 
   437     0093                     	;# 
   438     0093                     	;# 
   439     0093                     	;# 
   440     0094                     	;# 
   441     0095                     	;# 
   442     0096                     	;# 
   443     0097                     	;# 
   444     0098                     	;# 
   445     0099                     	;# 
   446     009A                     	;# 
   447     009B                     	;# 
   448     009C                     	;# 
   449     009D                     	;# 
   450     009E                     	;# 
   451     009F                     	;# 
   452     0105                     	;# 
   453     0107                     	;# 
   454     0108                     	;# 
   455     0109                     	;# 
   456     010C                     	;# 
   457     010C                     	;# 
   458     010D                     	;# 
   459     010E                     	;# 
   460     010F                     	;# 
   461     0185                     	;# 
   462     0187                     	;# 
   463     0188                     	;# 
   464     0189                     	;# 
   465     018C                     	;# 
   466     018D                     	;# 
   467                           
   468                           	psect	strings
   469     0733                     __pstrings:
   470     0733                     stringtab:
   471     0733                     __stringtab:
   472                           
   473                           ;	String table - string pointers are 1 byte each
   474     0733  1BFF               	btfsc	btemp+1,7
   475     0734  2F3D               	ljmp	stringcode
   476     0735  1383               	bcf	3,7
   477     0736  187F               	btfsc	btemp+1,0
   478     0737  1783               	bsf	3,7
   479     0738  0800               	movf	0,w
   480     0739  0A84               	incf	4,f
   481     073A  1903               	skipnz
   482     073B  0AFF               	incf	btemp+1,f
   483     073C  0008               	return
   484     073D                     stringcode:
   485     073D                     stringdir:
   486     073D  3007               	movlw	high stringdir
   487     073E  008A               	movwf	10
   488     073F  0804               	movf	4,w
   489     0740  0A84               	incf	4,f
   490     0741  0782               	addwf	2,f
   491     0742                     __stringbase:
   492     0742  3400               	retlw	0
   493     0743                     __end_of__stringtab:
   494     0743                     _dpowers:
   495     0743  3401               	retlw	1
   496     0744  3400               	retlw	0
   497     0745  340A               	retlw	10
   498     0746  3400               	retlw	0
   499     0747  3464               	retlw	100
   500     0748  3400               	retlw	0
   501     0749  34E8               	retlw	232
   502     074A  3403               	retlw	3
   503     074B  3410               	retlw	16
   504     074C  3427               	retlw	39
   505     074D                     __end_of_dpowers:
   506     0013                     _SSPBUF	set	19
   507     0014                     _SSPCON	set	20
   508     000B                     _INTCONbits	set	11
   509     0009                     _PORTE	set	9
   510     0008                     _PORTD	set	8
   511     0007                     _PORTC	set	7
   512     0006                     _PORTB	set	6
   513     0005                     _PORTA	set	5
   514     0049                     _RE1	set	73
   515     0048                     _RE0	set	72
   516     0063                     _SSPIF	set	99
   517     005E                     _PEIE	set	94
   518     005F                     _GIE	set	95
   519     0033                     _RB3	set	51
   520     0032                     _RB2	set	50
   521     0031                     _RB1	set	49
   522     0030                     _RB0	set	48
   523     0091                     _SSPCON2bits	set	145
   524     0087                     _TRISCbits	set	135
   525     0094                     _SSPSTAT	set	148
   526     0093                     _SSPADD	set	147
   527     0091                     _SSPCON2	set	145
   528     0096                     _IOCBbits	set	150
   529     008F                     _OSCCONbits	set	143
   530     0095                     _WPUBbits	set	149
   531     0081                     _OPTION_REGbits	set	129
   532     0089                     _TRISE	set	137
   533     0088                     _TRISD	set	136
   534     0087                     _TRISC	set	135
   535     0086                     _TRISB	set	134
   536     0085                     _TRISA	set	133
   537     0463                     _SSPIE	set	1123
   538     043C                     _TRISC4	set	1084
   539     043B                     _TRISC3	set	1083
   540     0189                     _ANSELH	set	393
   541     0188                     _ANSEL	set	392
   542     074D                     STR_2:
   543     074D  3425               	retlw	37	;'%'
   544     074E  3464               	retlw	100	;'d'
   545     074F  342F               	retlw	47	;'/'
   546     0750  3425               	retlw	37	;'%'
   547     0751  3464               	retlw	100	;'d'
   548     0752  342F               	retlw	47	;'/'
   549     0753  3425               	retlw	37	;'%'
   550     0754  3464               	retlw	100	;'d'
   551     0755  3400               	retlw	0
   552     0756                     STR_1:
   553     0756  3425               	retlw	37	;'%'
   554     0757  3464               	retlw	100	;'d'
   555     0758  343A               	retlw	58	;':'
   556     0759  3425               	retlw	37	;'%'
   557     075A  3464               	retlw	100	;'d'
   558     075B  343A               	retlw	58	;':'
   559     075C  3425               	retlw	37	;'%'
   560     075D  3464               	retlw	100	;'d'
   561     075E  3400               	retlw	0
   562     075F                     STR_3:
   563     075F  3453               	retlw	83	;'S'
   564     0760  3431               	retlw	49	;'1'
   565     0761  343A               	retlw	58	;':'
   566     0762  3400               	retlw	0
   567     0753                     
   568                           	psect	cinit
   569     000F                     start_initialization:	
   570                           ; #config settings
   571                           
   572     000F                     __initialization:
   573                           
   574                           ; Clear objects allocated to BANK0
   575     000F  1383               	bcf	3,7	;select IRP bank0
   576     0010  3049               	movlw	low __pbssBANK0
   577     0011  0084               	movwf	4
   578     0012  3067               	movlw	low (__pbssBANK0+30)
   579     0013  120A  118A  27F8  120A  118A  	fcall	clear_ram0
   580     0018                     end_of_initialization:	
   581                           ;End of C runtime variable initialization code
   582                           
   583     0018                     __end_of__initialization:
   584     0018  0183               	clrf	3
   585     0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   586                           
   587                           	psect	bssBANK0
   588     0049                     __pbssBANK0:
   589     0049                     _temp1:
   590     0049                     	ds	2
   591     004B                     _year:
   592     004B                     	ds	1
   593     004C                     _month:
   594     004C                     	ds	1
   595     004D                     _day:
   596     004D                     	ds	1
   597     004E                     _hour:
   598     004E                     	ds	1
   599     004F                     _min:
   600     004F                     	ds	1
   601     0050                     _sec:
   602     0050                     	ds	1
   603     0051                     _fecha:
   604     0051                     	ds	9
   605     005A                     _hora:
   606     005A                     	ds	9
   607     0063                     _Resadc:
   608     0063                     	ds	4
   609                           
   610                           	psect	clrtext
   611     07F8                     clear_ram0:	
   612                           ;	Called with FSR containing the base address, and
   613                           ;	W with the last address+1
   614                           
   615     07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   616     07F9                     clrloop0:
   617     07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   618     07FA  0A84               	incf	4,f	;increment pointer
   619     07FB  0604               	xorwf	4,w	;XOR with final address
   620     07FC  1903               	btfsc	3,2	;have we reached the end yet?
   621     07FD  3400               	retlw	0	;all done for this memory range, return
   622     07FE  0604               	xorwf	4,w	;XOR again to restore value
   623     07FF  2FF9               	goto	clrloop0	;do the next byte
   624                           
   625                           	psect	cstackCOMMON
   626     0070                     __pcstackCOMMON:
   627     0070                     ?_setup:
   628     0070                     ?_I2C_Master_Start:	
   629                           ; 1 bytes @ 0x0
   630                           
   631     0070                     ?_bcd_to_decimal:	
   632                           ; 1 bytes @ 0x0
   633                           
   634     0070                     ?_I2C_Master_RepeatedStart:	
   635                           ; 1 bytes @ 0x0
   636                           
   637     0070                     ?_I2C_Master_Stop:	
   638                           ; 1 bytes @ 0x0
   639                           
   640     0070                     ?_pantalla:	
   641                           ; 1 bytes @ 0x0
   642                           
   643     0070                     ?_Lcd_Init:	
   644                           ; 1 bytes @ 0x0
   645                           
   646     0070                     ?_configPort:	
   647                           ; 1 bytes @ 0x0
   648                           
   649     0070                     ?_pullup:	
   650                           ; 1 bytes @ 0x0
   651                           
   652     0070                     ?_configIntbits:	
   653                           ; 1 bytes @ 0x0
   654                           
   655     0070                     ?_isr:	
   656                           ; 1 bytes @ 0x0
   657                           
   658     0070                     ??_isr:	
   659                           ; 1 bytes @ 0x0
   660                           
   661     0070                     ?_main:	
   662                           ; 1 bytes @ 0x0
   663                           
   664     0070                     ?_I2C_Master_Wait:	
   665                           ; 1 bytes @ 0x0
   666                           
   667     0070                     ?_Lcd_Port:	
   668                           ; 1 bytes @ 0x0
   669                           
   670     0070                     ?_Lcd_Cmd:	
   671                           ; 1 bytes @ 0x0
   672                           
   673     0070                     ?_Lcd_Write_Char:	
   674                           ; 1 bytes @ 0x0
   675                           
   676                           
   677                           ; 1 bytes @ 0x0
   678     0070                     	ds	2
   679     0072                     ??_I2C_Master_Start:
   680     0072                     ?_I2C_Master_Write:	
   681                           ; 1 bytes @ 0x2
   682                           
   683     0072                     ??_I2C_Master_RepeatedStart:	
   684                           ; 1 bytes @ 0x2
   685                           
   686     0072                     ??_I2C_Master_Stop:	
   687                           ; 1 bytes @ 0x2
   688                           
   689     0072                     ??_configPort:	
   690                           ; 1 bytes @ 0x2
   691                           
   692     0072                     ??_pullup:	
   693                           ; 1 bytes @ 0x2
   694                           
   695     0072                     ??_configIntbits:	
   696                           ; 1 bytes @ 0x2
   697                           
   698     0072                     ?_configOsc:	
   699                           ; 1 bytes @ 0x2
   700                           
   701     0072                     ??_I2C_Master_Wait:	
   702                           ; 1 bytes @ 0x2
   703                           
   704     0072                     ??_Lcd_Port:	
   705                           ; 1 bytes @ 0x2
   706                           
   707     0072                     ?___bmul:	
   708                           ; 1 bytes @ 0x2
   709                           
   710     0072                     ?_I2C_Master_Read:	
   711                           ; 1 bytes @ 0x2
   712                           
   713     0072                     ?___lwdiv:	
   714                           ; 2 bytes @ 0x2
   715                           
   716     0072                     ?___lldiv:	
   717                           ; 2 bytes @ 0x2
   718                           
   719     0072                     Lcd_Port@a:	
   720                           ; 4 bytes @ 0x2
   721                           
   722     0072                     ___bmul@multiplicand:	
   723                           ; 1 bytes @ 0x2
   724                           
   725     0072                     configOsc@freq:	
   726                           ; 1 bytes @ 0x2
   727                           
   728     0072                     I2C_Master_Write@d:	
   729                           ; 2 bytes @ 0x2
   730                           
   731     0072                     I2C_Master_Read@a:	
   732                           ; 2 bytes @ 0x2
   733                           
   734     0072                     ___lwdiv@divisor:	
   735                           ; 2 bytes @ 0x2
   736                           
   737     0072                     ___lldiv@divisor:	
   738                           ; 2 bytes @ 0x2
   739                           
   740                           
   741                           ; 4 bytes @ 0x2
   742     0072                     	ds	1
   743     0073                     ??_Lcd_Cmd:
   744     0073                     ??_Lcd_Write_Char:	
   745                           ; 1 bytes @ 0x3
   746                           
   747     0073                     ??___bmul:	
   748                           ; 1 bytes @ 0x3
   749                           
   750                           
   751                           ; 1 bytes @ 0x3
   752     0073                     	ds	1
   753     0074                     ??_I2C_Master_Write:
   754     0074                     ??_I2C_Master_Read:	
   755                           ; 1 bytes @ 0x4
   756                           
   757     0074                     ??_configOsc:	
   758                           ; 1 bytes @ 0x4
   759                           
   760     0074                     Lcd_Write_Char@a:	
   761                           ; 1 bytes @ 0x4
   762                           
   763     0074                     ___bmul@product:	
   764                           ; 1 bytes @ 0x4
   765                           
   766     0074                     ___lwdiv@dividend:	
   767                           ; 1 bytes @ 0x4
   768                           
   769                           
   770                           ; 2 bytes @ 0x4
   771     0074                     	ds	1
   772     0075                     ?_Lcd_Write_String:
   773     0075                     Lcd_Cmd@a:	
   774                           ; 1 bytes @ 0x5
   775                           
   776     0075                     ___bmul@multiplier:	
   777                           ; 1 bytes @ 0x5
   778                           
   779     0075                     Lcd_Write_String@a:	
   780                           ; 1 bytes @ 0x5
   781                           
   782                           
   783                           ; 2 bytes @ 0x5
   784     0075                     	ds	1
   785     0076                     ??_bcd_to_decimal:
   786     0076                     ??_Lcd_Init:	
   787                           ; 1 bytes @ 0x6
   788                           
   789     0076                     ?_Lcd_Set_Cursor:	
   790                           ; 1 bytes @ 0x6
   791                           
   792     0076                     ??___lwdiv:	
   793                           ; 1 bytes @ 0x6
   794                           
   795     0076                     Lcd_Set_Cursor@b:	
   796                           ; 1 bytes @ 0x6
   797                           
   798     0076                     I2C_Master_Read@temp:	
   799                           ; 1 bytes @ 0x6
   800                           
   801     0076                     ___lldiv@dividend:	
   802                           ; 2 bytes @ 0x6
   803                           
   804                           
   805                           ; 4 bytes @ 0x6
   806     0076                     	ds	1
   807     0077                     ??_Lcd_Set_Cursor:
   808     0077                     ??_Lcd_Write_String:	
   809                           ; 1 bytes @ 0x7
   810                           
   811     0077                     Lcd_Set_Cursor@a:	
   812                           ; 1 bytes @ 0x7
   813                           
   814     0077                     ___lwdiv@quotient:	
   815                           ; 1 bytes @ 0x7
   816                           
   817                           
   818                           ; 2 bytes @ 0x7
   819     0077                     	ds	1
   820     0078                     bcd_to_decimal@bcd:
   821     0078                     Lcd_Set_Cursor@direccion:	
   822                           ; 1 bytes @ 0x8
   823                           
   824                           
   825                           ; 1 bytes @ 0x8
   826     0078                     	ds	1
   827     0079                     ___lwdiv@counter:
   828                           
   829                           ; 1 bytes @ 0x9
   830     0079                     	ds	1
   831     007A                     ??___lldiv:
   832     007A                     ??___lwmod:	
   833                           ; 1 bytes @ 0xA
   834                           
   835     007A                     Lcd_Write_String@i:	
   836                           ; 1 bytes @ 0xA
   837                           
   838                           
   839                           ; 2 bytes @ 0xA
   840     007A                     	ds	1
   841     007B                     ??_setup:
   842     007B                     ___lwmod@counter:	
   843                           ; 1 bytes @ 0xB
   844                           
   845                           
   846                           ; 1 bytes @ 0xB
   847     007B                     	ds	1
   848     007C                     ??_pantalla:
   849                           
   850                           	psect	cstackBANK0
   851     0020                     __pcstackBANK0:	
   852                           ; 1 bytes @ 0xC
   853                           
   854     0020                     ?___lwmod:
   855     0020                     ___lwmod@divisor:	
   856                           ; 2 bytes @ 0x0
   857                           
   858     0020                     ___lldiv@quotient:	
   859                           ; 2 bytes @ 0x0
   860                           
   861                           
   862                           ; 4 bytes @ 0x0
   863     0020                     	ds	2
   864     0022                     ___lwmod@dividend:
   865                           
   866                           ; 2 bytes @ 0x2
   867     0022                     	ds	2
   868     0024                     ?_sprintf:
   869     0024                     sprintf@f:	
   870                           ; 2 bytes @ 0x4
   871                           
   872     0024                     ___lldiv@counter:	
   873                           ; 1 bytes @ 0x4
   874                           
   875                           
   876                           ; 1 bytes @ 0x4
   877     0024                     	ds	1
   878     0025                     ?_I2C_Master_Init:
   879     0025                     I2C_Master_Init@c:	
   880                           ; 1 bytes @ 0x5
   881                           
   882                           
   883                           ; 4 bytes @ 0x5
   884     0025                     	ds	4
   885     0029                     ??_I2C_Master_Init:
   886                           
   887                           ; 1 bytes @ 0x9
   888     0029                     	ds	2
   889     002B                     ??_sprintf:
   890                           
   891                           ; 1 bytes @ 0xB
   892     002B                     	ds	3
   893     002E                     sprintf@ap:
   894                           
   895                           ; 1 bytes @ 0xE
   896     002E                     	ds	1
   897     002F                     sprintf@flag:
   898                           
   899                           ; 1 bytes @ 0xF
   900     002F                     	ds	1
   901     0030                     sprintf@prec:
   902                           
   903                           ; 1 bytes @ 0x10
   904     0030                     	ds	1
   905     0031                     sprintf@val:
   906                           
   907                           ; 2 bytes @ 0x11
   908     0031                     	ds	2
   909     0033                     sprintf@sp:
   910                           
   911                           ; 1 bytes @ 0x13
   912     0033                     	ds	1
   913     0034                     sprintf@c:
   914                           
   915                           ; 1 bytes @ 0x14
   916     0034                     	ds	1
   917     0035                     ??_main:
   918                           
   919                           ; 1 bytes @ 0x15
   920     0035                     	ds	6
   921     003B                     main@hora_decimal:
   922                           
   923                           ; 1 bytes @ 0x1B
   924     003B                     	ds	1
   925     003C                     main@dia_decimal:
   926                           
   927                           ; 1 bytes @ 0x1C
   928     003C                     	ds	1
   929     003D                     main@mes_decimal:
   930                           
   931                           ; 1 bytes @ 0x1D
   932     003D                     	ds	1
   933     003E                     main@an_decimal:
   934                           
   935                           ; 1 bytes @ 0x1E
   936     003E                     	ds	1
   937     003F                     main@seconds_decimal:
   938                           
   939                           ; 1 bytes @ 0x1F
   940     003F                     	ds	1
   941     0040                     main@minutes_decimal:
   942                           
   943                           ; 1 bytes @ 0x20
   944     0040                     	ds	1
   945     0041                     main@hours_decimal:
   946                           
   947                           ; 1 bytes @ 0x21
   948     0041                     	ds	1
   949     0042                     main@days_decimal:
   950                           
   951                           ; 1 bytes @ 0x22
   952     0042                     	ds	1
   953     0043                     main@months_decimal:
   954                           
   955                           ; 1 bytes @ 0x23
   956     0043                     	ds	1
   957     0044                     main@years_decimal:
   958                           
   959                           ; 1 bytes @ 0x24
   960     0044                     	ds	1
   961     0045                     main@yr:
   962                           
   963                           ; 1 bytes @ 0x25
   964     0045                     	ds	1
   965     0046                     main@mt:
   966                           
   967                           ; 1 bytes @ 0x26
   968     0046                     	ds	1
   969     0047                     main@hr:
   970                           
   971                           ; 1 bytes @ 0x27
   972     0047                     	ds	1
   973     0048                     main@d:
   974                           
   975                           ; 1 bytes @ 0x28
   976     0048                     	ds	1
   977                           
   978                           	psect	maintext
   979     001C                     __pmaintext:	
   980 ;;
   981 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   982 ;;
   983 ;; *************** function _main *****************
   984 ;; Defined at:
   985 ;;		line 78 in file "masterI2C.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  an_decimal      1   30[BANK0 ] unsigned char 
   990 ;;  mes_decimal     1   29[BANK0 ] unsigned char 
   991 ;;  dia_decimal     1   28[BANK0 ] unsigned char 
   992 ;;  hora_decimal    1   27[BANK0 ] unsigned char 
   993 ;;  years_decima    1   36[BANK0 ] unsigned char 
   994 ;;  months_decim    1   35[BANK0 ] unsigned char 
   995 ;;  days_decimal    1   34[BANK0 ] unsigned char 
   996 ;;  hours_decima    1   33[BANK0 ] unsigned char 
   997 ;;  minutes_deci    1   32[BANK0 ] unsigned char 
   998 ;;  seconds_deci    1   31[BANK0 ] unsigned char 
   999 ;;  d               1   40[BANK0 ] unsigned char 
  1000 ;;  hr              1   39[BANK0 ] unsigned char 
  1001 ;;  mt              1   38[BANK0 ] unsigned char 
  1002 ;;  yr              1   37[BANK0 ] unsigned char 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : B00/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1012 ;;      Params:         0       0       0       0       0
  1013 ;;      Locals:         0      14       0       0       0
  1014 ;;      Temps:          0       6       0       0       0
  1015 ;;      Totals:         0      20       0       0       0
  1016 ;;Total ram usage:       20 bytes
  1017 ;; Hardware stack levels required when called: 5
  1018 ;; This function calls:
  1019 ;;		_I2C_Master_Read
  1020 ;;		_I2C_Master_RepeatedStart
  1021 ;;		_I2C_Master_Start
  1022 ;;		_I2C_Master_Stop
  1023 ;;		_I2C_Master_Write
  1024 ;;		_bcd_to_decimal
  1025 ;;		_pantalla
  1026 ;;		_setup
  1027 ;;		_sprintf
  1028 ;; This function is called by:
  1029 ;;		Startup code after reset
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033     001C                     _main:	
  1034                           ;psect for function _main
  1035                           
  1036     001C                     l1807:	
  1037                           ;incstack = 0
  1038                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1039                           
  1040                           
  1041                           ;masterI2C.c: 79:     setup();
  1042     001C  120A  118A  2791  120A  118A  	fcall	_setup
  1043     0021                     l1809:
  1044                           
  1045                           ;masterI2C.c: 81:     char yr=00;
  1046     0021  1283               	bcf	3,5	;RP0=0, select bank0
  1047     0022  1303               	bcf	3,6	;RP1=0, select bank0
  1048     0023  01C5               	clrf	main@yr
  1049     0024                     l1811:
  1050                           
  1051                           ;masterI2C.c: 82:     char mt=01;
  1052     0024  01C6               	clrf	main@mt
  1053     0025  0AC6               	incf	main@mt,f
  1054     0026                     l1813:
  1055                           
  1056                           ;masterI2C.c: 83:     char hr=00;
  1057     0026  01C7               	clrf	main@hr
  1058     0027                     l1815:
  1059                           
  1060                           ;masterI2C.c: 84:     char d = 01;
  1061     0027  01C8               	clrf	main@d
  1062     0028  0AC8               	incf	main@d,f
  1063     0029                     l1817:
  1064                           
  1065                           ;masterI2C.c: 90:         if(RB0==0){
  1066     0029  1283               	bcf	3,5	;RP0=0, select bank0
  1067     002A  1303               	bcf	3,6	;RP1=0, select bank0
  1068     002B  1806               	btfsc	6,0	;volatile
  1069     002C  282E               	goto	u1031
  1070     002D  282F               	goto	u1030
  1071     002E                     u1031:
  1072     002E  2898               	goto	l1845
  1073     002F                     u1030:
  1074     002F                     l1819:
  1075                           
  1076                           ;masterI2C.c: 91:             hr++;
  1077     002F  3001               	movlw	1
  1078     0030  00B5               	movwf	??_main
  1079     0031  0835               	movf	??_main,w
  1080     0032  07C7               	addwf	main@hr,f
  1081     0033                     l1821:
  1082                           
  1083                           ;masterI2C.c: 92:             if(hr>=24){
  1084     0033  3018               	movlw	24
  1085     0034  0247               	subwf	main@hr,w
  1086     0035  1C03               	skipc
  1087     0036  2838               	goto	u1041
  1088     0037  2839               	goto	u1040
  1089     0038                     u1041:
  1090     0038  283A               	goto	l1825
  1091     0039                     u1040:
  1092     0039                     l1823:
  1093                           
  1094                           ;masterI2C.c: 93:                 hr=00;
  1095     0039  01C7               	clrf	main@hr
  1096     003A                     l1825:
  1097                           
  1098                           ;masterI2C.c: 96:             I2C_Master_Start();
  1099     003A  120A  158A  2780  120A  118A  	fcall	_I2C_Master_Start
  1100     003F                     l1827:
  1101                           
  1102                           ;masterI2C.c: 97:             uint8_t hora_decimal = bcd_to_decimal(hr);
  1103     003F  1283               	bcf	3,5	;RP0=0, select bank0
  1104     0040  1303               	bcf	3,6	;RP1=0, select bank0
  1105     0041  0847               	movf	main@hr,w
  1106     0042  120A  158A  27BE  120A  118A  	fcall	_bcd_to_decimal
  1107     0047  1283               	bcf	3,5	;RP0=0, select bank0
  1108     0048  1303               	bcf	3,6	;RP1=0, select bank0
  1109     0049  00BB               	movwf	main@hora_decimal
  1110     004A                     l1829:
  1111                           
  1112                           ;masterI2C.c: 98:             I2C_Master_Write(0xD0);
  1113     004A  30D0               	movlw	208
  1114     004B  00F2               	movwf	I2C_Master_Write@d
  1115     004C  3000               	movlw	0
  1116     004D  00F3               	movwf	I2C_Master_Write@d+1
  1117     004E  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1118     0053                     l1831:
  1119                           
  1120                           ;masterI2C.c: 99:             I2C_Master_Write(0X02);
  1121     0053  3002               	movlw	2
  1122     0054  00F2               	movwf	I2C_Master_Write@d
  1123     0055  3000               	movlw	0
  1124     0056  00F3               	movwf	I2C_Master_Write@d+1
  1125     0057  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1126     005C                     l1833:
  1127                           
  1128                           ;masterI2C.c: 100:             I2C_Master_Write(hora_decimal);
  1129     005C  1283               	bcf	3,5	;RP0=0, select bank0
  1130     005D  1303               	bcf	3,6	;RP1=0, select bank0
  1131     005E  083B               	movf	main@hora_decimal,w
  1132     005F  00B5               	movwf	??_main
  1133     0060  01B6               	clrf	??_main+1
  1134     0061  0835               	movf	??_main,w
  1135     0062  00F2               	movwf	I2C_Master_Write@d
  1136     0063  0836               	movf	??_main+1,w
  1137     0064  00F3               	movwf	I2C_Master_Write@d+1
  1138     0065  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1139     006A                     l1835:
  1140                           
  1141                           ;masterI2C.c: 101:             I2C_Master_RepeatedStart();
  1142     006A  120A  158A  2777  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1143     006F                     l1837:
  1144                           
  1145                           ;masterI2C.c: 102:             I2C_Master_Write(0xD1);
  1146     006F  30D1               	movlw	209
  1147     0070  00F2               	movwf	I2C_Master_Write@d
  1148     0071  3000               	movlw	0
  1149     0072  00F3               	movwf	I2C_Master_Write@d+1
  1150     0073  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1151     0078                     l1839:
  1152                           
  1153                           ;masterI2C.c: 103:             hour = I2C_Master_Read(0);
  1154     0078  3000               	movlw	0
  1155     0079  00F2               	movwf	I2C_Master_Read@a
  1156     007A  00F3               	movwf	I2C_Master_Read@a+1
  1157     007B  120A  118A  2763  120A  118A  	fcall	_I2C_Master_Read
  1158     0080  0872               	movf	?_I2C_Master_Read,w
  1159     0081  1283               	bcf	3,5	;RP0=0, select bank0
  1160     0082  1303               	bcf	3,6	;RP1=0, select bank0
  1161     0083  00CE               	movwf	_hour
  1162     0084                     l1841:
  1163                           
  1164                           ;masterI2C.c: 104:             I2C_Master_Stop();
  1165     0084  120A  158A  2789  120A  118A  	fcall	_I2C_Master_Stop
  1166     0089                     l1843:
  1167                           
  1168                           ;masterI2C.c: 105:              _delay((unsigned long)((200)*(8000000/4000.0)));
  1169     0089  3003               	movlw	3
  1170     008A  1283               	bcf	3,5	;RP0=0, select bank0
  1171     008B  1303               	bcf	3,6	;RP1=0, select bank0
  1172     008C  00B7               	movwf	??_main+2
  1173     008D  3008               	movlw	8
  1174     008E  00B6               	movwf	??_main+1
  1175     008F  3076               	movlw	118
  1176     0090  00B5               	movwf	??_main
  1177     0091                     u1117:
  1178     0091  0BB5               	decfsz	??_main,f
  1179     0092  2891               	goto	u1117
  1180     0093  0BB6               	decfsz	??_main+1,f
  1181     0094  2891               	goto	u1117
  1182     0095  0BB7               	decfsz	??_main+2,f
  1183     0096  2891               	goto	u1117
  1184     0097  0000               	nop
  1185     0098                     l1845:
  1186                           
  1187                           ;masterI2C.c: 108:          if(RB1==0){
  1188     0098  1283               	bcf	3,5	;RP0=0, select bank0
  1189     0099  1303               	bcf	3,6	;RP1=0, select bank0
  1190     009A  1886               	btfsc	6,1	;volatile
  1191     009B  289D               	goto	u1051
  1192     009C  289E               	goto	u1050
  1193     009D                     u1051:
  1194     009D  2908               	goto	l1857
  1195     009E                     u1050:
  1196     009E                     l1847:
  1197                           
  1198                           ;masterI2C.c: 109:             d++;
  1199     009E  3001               	movlw	1
  1200     009F  00B5               	movwf	??_main
  1201     00A0  0835               	movf	??_main,w
  1202     00A1  07C8               	addwf	main@d,f
  1203     00A2                     l1849:
  1204                           
  1205                           ;masterI2C.c: 110:             if(d>=31){
  1206     00A2  301F               	movlw	31
  1207     00A3  0248               	subwf	main@d,w
  1208     00A4  1C03               	skipc
  1209     00A5  28A7               	goto	u1061
  1210     00A6  28A8               	goto	u1060
  1211     00A7                     u1061:
  1212     00A7  28AA               	goto	l1853
  1213     00A8                     u1060:
  1214     00A8                     l1851:
  1215                           
  1216                           ;masterI2C.c: 111:                 d=01;
  1217     00A8  01C8               	clrf	main@d
  1218     00A9  0AC8               	incf	main@d,f
  1219     00AA                     l1853:
  1220                           
  1221                           ;masterI2C.c: 113:             I2C_Master_Start();
  1222     00AA  120A  158A  2780  120A  118A  	fcall	_I2C_Master_Start
  1223                           
  1224                           ;masterI2C.c: 114:             uint8_t dia_decimal = bcd_to_decimal(d);
  1225     00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1226     00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1227     00B1  0848               	movf	main@d,w
  1228     00B2  120A  158A  27BE  120A  118A  	fcall	_bcd_to_decimal
  1229     00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1230     00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1231     00B9  00BC               	movwf	main@dia_decimal
  1232                           
  1233                           ;masterI2C.c: 115:             I2C_Master_Write(0xD0);
  1234     00BA  30D0               	movlw	208
  1235     00BB  00F2               	movwf	I2C_Master_Write@d
  1236     00BC  3000               	movlw	0
  1237     00BD  00F3               	movwf	I2C_Master_Write@d+1
  1238     00BE  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1239                           
  1240                           ;masterI2C.c: 116:             I2C_Master_Write(0X03);
  1241     00C3  3003               	movlw	3
  1242     00C4  00F2               	movwf	I2C_Master_Write@d
  1243     00C5  3000               	movlw	0
  1244     00C6  00F3               	movwf	I2C_Master_Write@d+1
  1245     00C7  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1246                           
  1247                           ;masterI2C.c: 117:             I2C_Master_Write(dia_decimal);
  1248     00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1249     00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1250     00CE  083C               	movf	main@dia_decimal,w
  1251     00CF  00B5               	movwf	??_main
  1252     00D0  01B6               	clrf	??_main+1
  1253     00D1  0835               	movf	??_main,w
  1254     00D2  00F2               	movwf	I2C_Master_Write@d
  1255     00D3  0836               	movf	??_main+1,w
  1256     00D4  00F3               	movwf	I2C_Master_Write@d+1
  1257     00D5  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1258                           
  1259                           ;masterI2C.c: 118:             I2C_Master_RepeatedStart();
  1260     00DA  120A  158A  2777  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1261                           
  1262                           ;masterI2C.c: 119:             I2C_Master_Write(0xD1);
  1263     00DF  30D1               	movlw	209
  1264     00E0  00F2               	movwf	I2C_Master_Write@d
  1265     00E1  3000               	movlw	0
  1266     00E2  00F3               	movwf	I2C_Master_Write@d+1
  1267     00E3  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1268                           
  1269                           ;masterI2C.c: 120:             day = I2C_Master_Read(0);
  1270     00E8  3000               	movlw	0
  1271     00E9  00F2               	movwf	I2C_Master_Read@a
  1272     00EA  00F3               	movwf	I2C_Master_Read@a+1
  1273     00EB  120A  118A  2763  120A  118A  	fcall	_I2C_Master_Read
  1274     00F0  0872               	movf	?_I2C_Master_Read,w
  1275     00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1276     00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1277     00F3  00CD               	movwf	_day
  1278                           
  1279                           ;masterI2C.c: 121:             I2C_Master_Stop();
  1280     00F4  120A  158A  2789  120A  118A  	fcall	_I2C_Master_Stop
  1281     00F9                     l1855:
  1282                           
  1283                           ;masterI2C.c: 122:              _delay((unsigned long)((200)*(8000000/4000.0)));
  1284     00F9  3003               	movlw	3
  1285     00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1286     00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1287     00FC  00B7               	movwf	??_main+2
  1288     00FD  3008               	movlw	8
  1289     00FE  00B6               	movwf	??_main+1
  1290     00FF  3076               	movlw	118
  1291     0100  00B5               	movwf	??_main
  1292     0101                     u1127:
  1293     0101  0BB5               	decfsz	??_main,f
  1294     0102  2901               	goto	u1127
  1295     0103  0BB6               	decfsz	??_main+1,f
  1296     0104  2901               	goto	u1127
  1297     0105  0BB7               	decfsz	??_main+2,f
  1298     0106  2901               	goto	u1127
  1299     0107  0000               	nop
  1300     0108                     l1857:
  1301                           
  1302                           ;masterI2C.c: 125:         if(RB2==0){
  1303     0108  1283               	bcf	3,5	;RP0=0, select bank0
  1304     0109  1303               	bcf	3,6	;RP1=0, select bank0
  1305     010A  1906               	btfsc	6,2	;volatile
  1306     010B  290D               	goto	u1071
  1307     010C  290E               	goto	u1070
  1308     010D                     u1071:
  1309     010D  2978               	goto	l1869
  1310     010E                     u1070:
  1311     010E                     l1859:
  1312                           
  1313                           ;masterI2C.c: 126:             mt++;
  1314     010E  3001               	movlw	1
  1315     010F  00B5               	movwf	??_main
  1316     0110  0835               	movf	??_main,w
  1317     0111  07C6               	addwf	main@mt,f
  1318     0112                     l1861:
  1319                           
  1320                           ;masterI2C.c: 127:             if(mt>=12){
  1321     0112  300C               	movlw	12
  1322     0113  0246               	subwf	main@mt,w
  1323     0114  1C03               	skipc
  1324     0115  2917               	goto	u1081
  1325     0116  2918               	goto	u1080
  1326     0117                     u1081:
  1327     0117  291A               	goto	l1865
  1328     0118                     u1080:
  1329     0118                     l1863:
  1330                           
  1331                           ;masterI2C.c: 128:                 mt=01;
  1332     0118  01C6               	clrf	main@mt
  1333     0119  0AC6               	incf	main@mt,f
  1334     011A                     l1865:
  1335                           
  1336                           ;masterI2C.c: 130:             I2C_Master_Start();
  1337     011A  120A  158A  2780  120A  118A  	fcall	_I2C_Master_Start
  1338                           
  1339                           ;masterI2C.c: 131:             uint8_t mes_decimal = bcd_to_decimal(mt);
  1340     011F  1283               	bcf	3,5	;RP0=0, select bank0
  1341     0120  1303               	bcf	3,6	;RP1=0, select bank0
  1342     0121  0846               	movf	main@mt,w
  1343     0122  120A  158A  27BE  120A  118A  	fcall	_bcd_to_decimal
  1344     0127  1283               	bcf	3,5	;RP0=0, select bank0
  1345     0128  1303               	bcf	3,6	;RP1=0, select bank0
  1346     0129  00BD               	movwf	main@mes_decimal
  1347                           
  1348                           ;masterI2C.c: 132:             I2C_Master_Write(0xD0);
  1349     012A  30D0               	movlw	208
  1350     012B  00F2               	movwf	I2C_Master_Write@d
  1351     012C  3000               	movlw	0
  1352     012D  00F3               	movwf	I2C_Master_Write@d+1
  1353     012E  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1354                           
  1355                           ;masterI2C.c: 133:             I2C_Master_Write(0X05);
  1356     0133  3005               	movlw	5
  1357     0134  00F2               	movwf	I2C_Master_Write@d
  1358     0135  3000               	movlw	0
  1359     0136  00F3               	movwf	I2C_Master_Write@d+1
  1360     0137  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1361                           
  1362                           ;masterI2C.c: 134:             I2C_Master_Write(mes_decimal);
  1363     013C  1283               	bcf	3,5	;RP0=0, select bank0
  1364     013D  1303               	bcf	3,6	;RP1=0, select bank0
  1365     013E  083D               	movf	main@mes_decimal,w
  1366     013F  00B5               	movwf	??_main
  1367     0140  01B6               	clrf	??_main+1
  1368     0141  0835               	movf	??_main,w
  1369     0142  00F2               	movwf	I2C_Master_Write@d
  1370     0143  0836               	movf	??_main+1,w
  1371     0144  00F3               	movwf	I2C_Master_Write@d+1
  1372     0145  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1373                           
  1374                           ;masterI2C.c: 135:             I2C_Master_RepeatedStart();
  1375     014A  120A  158A  2777  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1376                           
  1377                           ;masterI2C.c: 136:             I2C_Master_Write(0xD1);
  1378     014F  30D1               	movlw	209
  1379     0150  00F2               	movwf	I2C_Master_Write@d
  1380     0151  3000               	movlw	0
  1381     0152  00F3               	movwf	I2C_Master_Write@d+1
  1382     0153  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1383                           
  1384                           ;masterI2C.c: 137:             month = I2C_Master_Read(0);
  1385     0158  3000               	movlw	0
  1386     0159  00F2               	movwf	I2C_Master_Read@a
  1387     015A  00F3               	movwf	I2C_Master_Read@a+1
  1388     015B  120A  118A  2763  120A  118A  	fcall	_I2C_Master_Read
  1389     0160  0872               	movf	?_I2C_Master_Read,w
  1390     0161  1283               	bcf	3,5	;RP0=0, select bank0
  1391     0162  1303               	bcf	3,6	;RP1=0, select bank0
  1392     0163  00CC               	movwf	_month
  1393                           
  1394                           ;masterI2C.c: 138:             I2C_Master_Stop();
  1395     0164  120A  158A  2789  120A  118A  	fcall	_I2C_Master_Stop
  1396     0169                     l1867:
  1397                           
  1398                           ;masterI2C.c: 139:              _delay((unsigned long)((200)*(8000000/4000.0)));
  1399     0169  3003               	movlw	3
  1400     016A  1283               	bcf	3,5	;RP0=0, select bank0
  1401     016B  1303               	bcf	3,6	;RP1=0, select bank0
  1402     016C  00B7               	movwf	??_main+2
  1403     016D  3008               	movlw	8
  1404     016E  00B6               	movwf	??_main+1
  1405     016F  3076               	movlw	118
  1406     0170  00B5               	movwf	??_main
  1407     0171                     u1137:
  1408     0171  0BB5               	decfsz	??_main,f
  1409     0172  2971               	goto	u1137
  1410     0173  0BB6               	decfsz	??_main+1,f
  1411     0174  2971               	goto	u1137
  1412     0175  0BB7               	decfsz	??_main+2,f
  1413     0176  2971               	goto	u1137
  1414     0177  0000               	nop
  1415     0178                     l1869:
  1416                           
  1417                           ;masterI2C.c: 141:         if(RB3==0){
  1418     0178  1283               	bcf	3,5	;RP0=0, select bank0
  1419     0179  1303               	bcf	3,6	;RP1=0, select bank0
  1420     017A  1986               	btfsc	6,3	;volatile
  1421     017B  297D               	goto	u1091
  1422     017C  297E               	goto	u1090
  1423     017D                     u1091:
  1424     017D  29E7               	goto	l1897
  1425     017E                     u1090:
  1426     017E                     l1871:
  1427                           
  1428                           ;masterI2C.c: 142:             yr++;
  1429     017E  3001               	movlw	1
  1430     017F  00B5               	movwf	??_main
  1431     0180  0835               	movf	??_main,w
  1432     0181  07C5               	addwf	main@yr,f
  1433     0182                     l1873:
  1434                           
  1435                           ;masterI2C.c: 143:             if(yr>=99){
  1436     0182  3063               	movlw	99
  1437     0183  0245               	subwf	main@yr,w
  1438     0184  1C03               	skipc
  1439     0185  2987               	goto	u1101
  1440     0186  2988               	goto	u1100
  1441     0187                     u1101:
  1442     0187  2989               	goto	l1877
  1443     0188                     u1100:
  1444     0188                     l1875:
  1445                           
  1446                           ;masterI2C.c: 144:                yr=00;
  1447     0188  01C5               	clrf	main@yr
  1448     0189                     l1877:
  1449                           
  1450                           ;masterI2C.c: 146:             I2C_Master_Start();
  1451     0189  120A  158A  2780  120A  118A  	fcall	_I2C_Master_Start
  1452     018E                     l1879:
  1453                           
  1454                           ;masterI2C.c: 147:             uint8_t an_decimal = bcd_to_decimal(yr);
  1455     018E  1283               	bcf	3,5	;RP0=0, select bank0
  1456     018F  1303               	bcf	3,6	;RP1=0, select bank0
  1457     0190  0845               	movf	main@yr,w
  1458     0191  120A  158A  27BE  120A  118A  	fcall	_bcd_to_decimal
  1459     0196  1283               	bcf	3,5	;RP0=0, select bank0
  1460     0197  1303               	bcf	3,6	;RP1=0, select bank0
  1461     0198  00BE               	movwf	main@an_decimal
  1462     0199                     l1881:
  1463                           
  1464                           ;masterI2C.c: 148:             I2C_Master_Write(0xD0);
  1465     0199  30D0               	movlw	208
  1466     019A  00F2               	movwf	I2C_Master_Write@d
  1467     019B  3000               	movlw	0
  1468     019C  00F3               	movwf	I2C_Master_Write@d+1
  1469     019D  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1470     01A2                     l1883:
  1471                           
  1472                           ;masterI2C.c: 149:             I2C_Master_Write(0X06);
  1473     01A2  3006               	movlw	6
  1474     01A3  00F2               	movwf	I2C_Master_Write@d
  1475     01A4  3000               	movlw	0
  1476     01A5  00F3               	movwf	I2C_Master_Write@d+1
  1477     01A6  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1478     01AB                     l1885:
  1479                           
  1480                           ;masterI2C.c: 150:             I2C_Master_Write(an_decimal);
  1481     01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1482     01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1483     01AD  083E               	movf	main@an_decimal,w
  1484     01AE  00B5               	movwf	??_main
  1485     01AF  01B6               	clrf	??_main+1
  1486     01B0  0835               	movf	??_main,w
  1487     01B1  00F2               	movwf	I2C_Master_Write@d
  1488     01B2  0836               	movf	??_main+1,w
  1489     01B3  00F3               	movwf	I2C_Master_Write@d+1
  1490     01B4  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1491     01B9                     l1887:
  1492                           
  1493                           ;masterI2C.c: 151:             I2C_Master_RepeatedStart();
  1494     01B9  120A  158A  2777  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1495     01BE                     l1889:
  1496                           
  1497                           ;masterI2C.c: 152:             I2C_Master_Write(0xD1);
  1498     01BE  30D1               	movlw	209
  1499     01BF  00F2               	movwf	I2C_Master_Write@d
  1500     01C0  3000               	movlw	0
  1501     01C1  00F3               	movwf	I2C_Master_Write@d+1
  1502     01C2  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1503     01C7                     l1891:
  1504                           
  1505                           ;masterI2C.c: 153:             year = I2C_Master_Read(0);
  1506     01C7  3000               	movlw	0
  1507     01C8  00F2               	movwf	I2C_Master_Read@a
  1508     01C9  00F3               	movwf	I2C_Master_Read@a+1
  1509     01CA  120A  118A  2763  120A  118A  	fcall	_I2C_Master_Read
  1510     01CF  0872               	movf	?_I2C_Master_Read,w
  1511     01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1512     01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1513     01D2  00CB               	movwf	_year
  1514     01D3                     l1893:
  1515                           
  1516                           ;masterI2C.c: 154:             I2C_Master_Stop();
  1517     01D3  120A  158A  2789  120A  118A  	fcall	_I2C_Master_Stop
  1518     01D8                     l1895:
  1519                           
  1520                           ;masterI2C.c: 155:              _delay((unsigned long)((200)*(8000000/4000.0)));
  1521     01D8  3003               	movlw	3
  1522     01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1523     01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1524     01DB  00B7               	movwf	??_main+2
  1525     01DC  3008               	movlw	8
  1526     01DD  00B6               	movwf	??_main+1
  1527     01DE  3076               	movlw	118
  1528     01DF  00B5               	movwf	??_main
  1529     01E0                     u1147:
  1530     01E0  0BB5               	decfsz	??_main,f
  1531     01E1  29E0               	goto	u1147
  1532     01E2  0BB6               	decfsz	??_main+1,f
  1533     01E3  29E0               	goto	u1147
  1534     01E4  0BB7               	decfsz	??_main+2,f
  1535     01E5  29E0               	goto	u1147
  1536     01E6  0000               	nop
  1537     01E7                     l1897:
  1538                           
  1539                           ;masterI2C.c: 162:         I2C_Master_Start();
  1540     01E7  120A  158A  2780  120A  118A  	fcall	_I2C_Master_Start
  1541     01EC                     l1899:
  1542                           
  1543                           ;masterI2C.c: 163:         I2C_Master_Write(0x51);
  1544     01EC  3051               	movlw	81
  1545     01ED  00F2               	movwf	I2C_Master_Write@d
  1546     01EE  3000               	movlw	0
  1547     01EF  00F3               	movwf	I2C_Master_Write@d+1
  1548     01F0  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1549     01F5                     l1901:
  1550                           
  1551                           ;masterI2C.c: 164:         temp1 = I2C_Master_Read(0);
  1552     01F5  3000               	movlw	0
  1553     01F6  00F2               	movwf	I2C_Master_Read@a
  1554     01F7  00F3               	movwf	I2C_Master_Read@a+1
  1555     01F8  120A  118A  2763  120A  118A  	fcall	_I2C_Master_Read
  1556     01FD  0873               	movf	?_I2C_Master_Read+1,w
  1557     01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1558     01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1559     0200  00CA               	movwf	_temp1+1
  1560     0201  0872               	movf	?_I2C_Master_Read,w
  1561     0202  00C9               	movwf	_temp1
  1562     0203                     l1903:
  1563                           
  1564                           ;masterI2C.c: 165:         I2C_Master_Stop();
  1565     0203  120A  158A  2789  120A  118A  	fcall	_I2C_Master_Stop
  1566     0208                     l1905:
  1567                           
  1568                           ;masterI2C.c: 166:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1569     0208  3003               	movlw	3
  1570     0209  1283               	bcf	3,5	;RP0=0, select bank0
  1571     020A  1303               	bcf	3,6	;RP1=0, select bank0
  1572     020B  00B7               	movwf	??_main+2
  1573     020C  3008               	movlw	8
  1574     020D  00B6               	movwf	??_main+1
  1575     020E  3076               	movlw	118
  1576     020F  00B5               	movwf	??_main
  1577     0210                     u1157:
  1578     0210  0BB5               	decfsz	??_main,f
  1579     0211  2A10               	goto	u1157
  1580     0212  0BB6               	decfsz	??_main+1,f
  1581     0213  2A10               	goto	u1157
  1582     0214  0BB7               	decfsz	??_main+2,f
  1583     0215  2A10               	goto	u1157
  1584     0216  0000               	nop
  1585     0217                     l1907:
  1586                           
  1587                           ;masterI2C.c: 170:         I2C_Master_Start();
  1588     0217  120A  158A  2780  120A  118A  	fcall	_I2C_Master_Start
  1589     021C                     l1909:
  1590                           
  1591                           ;masterI2C.c: 171:         I2C_Master_Write(0xD0);
  1592     021C  30D0               	movlw	208
  1593     021D  00F2               	movwf	I2C_Master_Write@d
  1594     021E  3000               	movlw	0
  1595     021F  00F3               	movwf	I2C_Master_Write@d+1
  1596     0220  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1597     0225                     l1911:
  1598                           
  1599                           ;masterI2C.c: 172:         I2C_Master_Write(0x00);
  1600     0225  3000               	movlw	0
  1601     0226  00F2               	movwf	I2C_Master_Write@d
  1602     0227  00F3               	movwf	I2C_Master_Write@d+1
  1603     0228  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1604     022D                     l1913:
  1605                           
  1606                           ;masterI2C.c: 173:         I2C_Master_RepeatedStart();
  1607     022D  120A  158A  2777  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1608     0232                     l1915:
  1609                           
  1610                           ;masterI2C.c: 174:         I2C_Master_Write(0xD1);
  1611     0232  30D1               	movlw	209
  1612     0233  00F2               	movwf	I2C_Master_Write@d
  1613     0234  3000               	movlw	0
  1614     0235  00F3               	movwf	I2C_Master_Write@d+1
  1615     0236  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1616     023B                     l1917:
  1617                           
  1618                           ;masterI2C.c: 175:         sec = I2C_Master_Read(0);
  1619     023B  3000               	movlw	0
  1620     023C  00F2               	movwf	I2C_Master_Read@a
  1621     023D  00F3               	movwf	I2C_Master_Read@a+1
  1622     023E  120A  118A  2763  120A  118A  	fcall	_I2C_Master_Read
  1623     0243  0872               	movf	?_I2C_Master_Read,w
  1624     0244  1283               	bcf	3,5	;RP0=0, select bank0
  1625     0245  1303               	bcf	3,6	;RP1=0, select bank0
  1626     0246  00D0               	movwf	_sec
  1627     0247                     l1919:
  1628                           
  1629                           ;masterI2C.c: 176:         I2C_Master_Stop();
  1630     0247  120A  158A  2789  120A  118A  	fcall	_I2C_Master_Stop
  1631     024C                     l1921:
  1632                           
  1633                           ;masterI2C.c: 179:         I2C_Master_Start();
  1634     024C  120A  158A  2780  120A  118A  	fcall	_I2C_Master_Start
  1635     0251                     l1923:
  1636                           
  1637                           ;masterI2C.c: 180:         I2C_Master_Write(0xD0);
  1638     0251  30D0               	movlw	208
  1639     0252  00F2               	movwf	I2C_Master_Write@d
  1640     0253  3000               	movlw	0
  1641     0254  00F3               	movwf	I2C_Master_Write@d+1
  1642     0255  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1643     025A                     l1925:
  1644                           
  1645                           ;masterI2C.c: 181:         I2C_Master_Write(0x01);
  1646     025A  3001               	movlw	1
  1647     025B  00F2               	movwf	I2C_Master_Write@d
  1648     025C  3000               	movlw	0
  1649     025D  00F3               	movwf	I2C_Master_Write@d+1
  1650     025E  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1651     0263                     l1927:
  1652                           
  1653                           ;masterI2C.c: 182:         I2C_Master_RepeatedStart();
  1654     0263  120A  158A  2777  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1655     0268                     l1929:
  1656                           
  1657                           ;masterI2C.c: 183:         I2C_Master_Write(0xD1);
  1658     0268  30D1               	movlw	209
  1659     0269  00F2               	movwf	I2C_Master_Write@d
  1660     026A  3000               	movlw	0
  1661     026B  00F3               	movwf	I2C_Master_Write@d+1
  1662     026C  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1663     0271                     l1931:
  1664                           
  1665                           ;masterI2C.c: 184:         min = I2C_Master_Read(0);
  1666     0271  3000               	movlw	0
  1667     0272  00F2               	movwf	I2C_Master_Read@a
  1668     0273  00F3               	movwf	I2C_Master_Read@a+1
  1669     0274  120A  118A  2763  120A  118A  	fcall	_I2C_Master_Read
  1670     0279  0872               	movf	?_I2C_Master_Read,w
  1671     027A  1283               	bcf	3,5	;RP0=0, select bank0
  1672     027B  1303               	bcf	3,6	;RP1=0, select bank0
  1673     027C  00CF               	movwf	_min
  1674     027D                     l1933:
  1675                           
  1676                           ;masterI2C.c: 185:         I2C_Master_Stop();
  1677     027D  120A  158A  2789  120A  118A  	fcall	_I2C_Master_Stop
  1678     0282                     l1935:
  1679                           
  1680                           ;masterI2C.c: 188:         I2C_Master_Start();
  1681     0282  120A  158A  2780  120A  118A  	fcall	_I2C_Master_Start
  1682     0287                     l1937:
  1683                           
  1684                           ;masterI2C.c: 189:         I2C_Master_Write(0xD0);
  1685     0287  30D0               	movlw	208
  1686     0288  00F2               	movwf	I2C_Master_Write@d
  1687     0289  3000               	movlw	0
  1688     028A  00F3               	movwf	I2C_Master_Write@d+1
  1689     028B  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1690     0290                     l1939:
  1691                           
  1692                           ;masterI2C.c: 190:         I2C_Master_Write(0x02);
  1693     0290  3002               	movlw	2
  1694     0291  00F2               	movwf	I2C_Master_Write@d
  1695     0292  3000               	movlw	0
  1696     0293  00F3               	movwf	I2C_Master_Write@d+1
  1697     0294  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1698     0299                     l1941:
  1699                           
  1700                           ;masterI2C.c: 191:         I2C_Master_RepeatedStart();
  1701     0299  120A  158A  2777  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1702     029E                     l1943:
  1703                           
  1704                           ;masterI2C.c: 192:         I2C_Master_Write(0xD1);
  1705     029E  30D1               	movlw	209
  1706     029F  00F2               	movwf	I2C_Master_Write@d
  1707     02A0  3000               	movlw	0
  1708     02A1  00F3               	movwf	I2C_Master_Write@d+1
  1709     02A2  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1710     02A7                     l1945:
  1711                           
  1712                           ;masterI2C.c: 193:         hour = I2C_Master_Read(0);
  1713     02A7  3000               	movlw	0
  1714     02A8  00F2               	movwf	I2C_Master_Read@a
  1715     02A9  00F3               	movwf	I2C_Master_Read@a+1
  1716     02AA  120A  118A  2763  120A  118A  	fcall	_I2C_Master_Read
  1717     02AF  0872               	movf	?_I2C_Master_Read,w
  1718     02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1719     02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1720     02B2  00CE               	movwf	_hour
  1721     02B3                     l1947:
  1722                           
  1723                           ;masterI2C.c: 194:         I2C_Master_Stop();
  1724     02B3  120A  158A  2789  120A  118A  	fcall	_I2C_Master_Stop
  1725     02B8                     l1949:
  1726                           
  1727                           ;masterI2C.c: 199:         I2C_Master_Start();
  1728     02B8  120A  158A  2780  120A  118A  	fcall	_I2C_Master_Start
  1729     02BD                     l1951:
  1730                           
  1731                           ;masterI2C.c: 200:         I2C_Master_Write(0xD0);
  1732     02BD  30D0               	movlw	208
  1733     02BE  00F2               	movwf	I2C_Master_Write@d
  1734     02BF  3000               	movlw	0
  1735     02C0  00F3               	movwf	I2C_Master_Write@d+1
  1736     02C1  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1737     02C6                     l1953:
  1738                           
  1739                           ;masterI2C.c: 201:         I2C_Master_Write(0x03);
  1740     02C6  3003               	movlw	3
  1741     02C7  00F2               	movwf	I2C_Master_Write@d
  1742     02C8  3000               	movlw	0
  1743     02C9  00F3               	movwf	I2C_Master_Write@d+1
  1744     02CA  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1745     02CF                     l1955:
  1746                           
  1747                           ;masterI2C.c: 202:         I2C_Master_RepeatedStart();
  1748     02CF  120A  158A  2777  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1749     02D4                     l1957:
  1750                           
  1751                           ;masterI2C.c: 203:         I2C_Master_Write(0xD1);
  1752     02D4  30D1               	movlw	209
  1753     02D5  00F2               	movwf	I2C_Master_Write@d
  1754     02D6  3000               	movlw	0
  1755     02D7  00F3               	movwf	I2C_Master_Write@d+1
  1756     02D8  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1757     02DD                     l1959:
  1758                           
  1759                           ;masterI2C.c: 204:         day = I2C_Master_Read(0);
  1760     02DD  3000               	movlw	0
  1761     02DE  00F2               	movwf	I2C_Master_Read@a
  1762     02DF  00F3               	movwf	I2C_Master_Read@a+1
  1763     02E0  120A  118A  2763  120A  118A  	fcall	_I2C_Master_Read
  1764     02E5  0872               	movf	?_I2C_Master_Read,w
  1765     02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1766     02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1767     02E8  00CD               	movwf	_day
  1768     02E9                     l1961:
  1769                           
  1770                           ;masterI2C.c: 205:         I2C_Master_Stop();
  1771     02E9  120A  158A  2789  120A  118A  	fcall	_I2C_Master_Stop
  1772     02EE                     l1963:
  1773                           
  1774                           ;masterI2C.c: 208:         I2C_Master_Start();
  1775     02EE  120A  158A  2780  120A  118A  	fcall	_I2C_Master_Start
  1776     02F3                     l1965:
  1777                           
  1778                           ;masterI2C.c: 209:         I2C_Master_Write(0xD0);
  1779     02F3  30D0               	movlw	208
  1780     02F4  00F2               	movwf	I2C_Master_Write@d
  1781     02F5  3000               	movlw	0
  1782     02F6  00F3               	movwf	I2C_Master_Write@d+1
  1783     02F7  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1784     02FC                     l1967:
  1785                           
  1786                           ;masterI2C.c: 210:         I2C_Master_Write(0x05);
  1787     02FC  3005               	movlw	5
  1788     02FD  00F2               	movwf	I2C_Master_Write@d
  1789     02FE  3000               	movlw	0
  1790     02FF  00F3               	movwf	I2C_Master_Write@d+1
  1791     0300  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1792     0305                     l1969:
  1793                           
  1794                           ;masterI2C.c: 211:         I2C_Master_RepeatedStart();
  1795     0305  120A  158A  2777  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1796     030A                     l1971:
  1797                           
  1798                           ;masterI2C.c: 212:         I2C_Master_Write(0xD1);
  1799     030A  30D1               	movlw	209
  1800     030B  00F2               	movwf	I2C_Master_Write@d
  1801     030C  3000               	movlw	0
  1802     030D  00F3               	movwf	I2C_Master_Write@d+1
  1803     030E  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1804     0313                     l1973:
  1805                           
  1806                           ;masterI2C.c: 213:         month = I2C_Master_Read(0);
  1807     0313  3000               	movlw	0
  1808     0314  00F2               	movwf	I2C_Master_Read@a
  1809     0315  00F3               	movwf	I2C_Master_Read@a+1
  1810     0316  120A  118A  2763  120A  118A  	fcall	_I2C_Master_Read
  1811     031B  0872               	movf	?_I2C_Master_Read,w
  1812     031C  1283               	bcf	3,5	;RP0=0, select bank0
  1813     031D  1303               	bcf	3,6	;RP1=0, select bank0
  1814     031E  00CC               	movwf	_month
  1815     031F                     l1975:
  1816                           
  1817                           ;masterI2C.c: 214:         I2C_Master_Stop();
  1818     031F  120A  158A  2789  120A  118A  	fcall	_I2C_Master_Stop
  1819     0324                     l1977:
  1820                           
  1821                           ;masterI2C.c: 217:         I2C_Master_Start();
  1822     0324  120A  158A  2780  120A  118A  	fcall	_I2C_Master_Start
  1823     0329                     l1979:
  1824                           
  1825                           ;masterI2C.c: 218:         I2C_Master_Write(0xD0);
  1826     0329  30D0               	movlw	208
  1827     032A  00F2               	movwf	I2C_Master_Write@d
  1828     032B  3000               	movlw	0
  1829     032C  00F3               	movwf	I2C_Master_Write@d+1
  1830     032D  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1831     0332                     l1981:
  1832                           
  1833                           ;masterI2C.c: 219:         I2C_Master_Write(0x06);
  1834     0332  3006               	movlw	6
  1835     0333  00F2               	movwf	I2C_Master_Write@d
  1836     0334  3000               	movlw	0
  1837     0335  00F3               	movwf	I2C_Master_Write@d+1
  1838     0336  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1839     033B                     l1983:
  1840                           
  1841                           ;masterI2C.c: 220:         I2C_Master_RepeatedStart();
  1842     033B  120A  158A  2777  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1843     0340                     l1985:
  1844                           
  1845                           ;masterI2C.c: 221:         I2C_Master_Write(0xD1);
  1846     0340  30D1               	movlw	209
  1847     0341  00F2               	movwf	I2C_Master_Write@d
  1848     0342  3000               	movlw	0
  1849     0343  00F3               	movwf	I2C_Master_Write@d+1
  1850     0344  120A  158A  2792  120A  118A  	fcall	_I2C_Master_Write
  1851     0349                     l1987:
  1852                           
  1853                           ;masterI2C.c: 222:         year = I2C_Master_Read(0);
  1854     0349  3000               	movlw	0
  1855     034A  00F2               	movwf	I2C_Master_Read@a
  1856     034B  00F3               	movwf	I2C_Master_Read@a+1
  1857     034C  120A  118A  2763  120A  118A  	fcall	_I2C_Master_Read
  1858     0351  0872               	movf	?_I2C_Master_Read,w
  1859     0352  1283               	bcf	3,5	;RP0=0, select bank0
  1860     0353  1303               	bcf	3,6	;RP1=0, select bank0
  1861     0354  00CB               	movwf	_year
  1862     0355                     l1989:
  1863                           
  1864                           ;masterI2C.c: 223:         I2C_Master_Stop();
  1865     0355  120A  158A  2789  120A  118A  	fcall	_I2C_Master_Stop
  1866     035A                     l1991:
  1867                           
  1868                           ;masterI2C.c: 229:         uint8_t seconds_decimal = bcd_to_decimal(sec);
  1869     035A  1283               	bcf	3,5	;RP0=0, select bank0
  1870     035B  1303               	bcf	3,6	;RP1=0, select bank0
  1871     035C  0850               	movf	_sec,w
  1872     035D  120A  158A  27BE  120A  118A  	fcall	_bcd_to_decimal
  1873     0362  1283               	bcf	3,5	;RP0=0, select bank0
  1874     0363  1303               	bcf	3,6	;RP1=0, select bank0
  1875     0364  00BF               	movwf	main@seconds_decimal
  1876     0365                     l1993:
  1877                           
  1878                           ;masterI2C.c: 230:         uint8_t minutes_decimal = bcd_to_decimal(min);
  1879     0365  084F               	movf	_min,w
  1880     0366  120A  158A  27BE  120A  118A  	fcall	_bcd_to_decimal
  1881     036B  1283               	bcf	3,5	;RP0=0, select bank0
  1882     036C  1303               	bcf	3,6	;RP1=0, select bank0
  1883     036D  00C0               	movwf	main@minutes_decimal
  1884     036E                     l1995:
  1885                           
  1886                           ;masterI2C.c: 231:         uint8_t hours_decimal = bcd_to_decimal(hour);
  1887     036E  084E               	movf	_hour,w
  1888     036F  120A  158A  27BE  120A  118A  	fcall	_bcd_to_decimal
  1889     0374  1283               	bcf	3,5	;RP0=0, select bank0
  1890     0375  1303               	bcf	3,6	;RP1=0, select bank0
  1891     0376  00C1               	movwf	main@hours_decimal
  1892     0377                     l1997:
  1893                           
  1894                           ;masterI2C.c: 232:         sprintf(hora,"%d:%d:%d",hours_decimal,minutes_decimal ,second
      +                          s_decimal);
  1895     0377  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1896     0378  00A4               	movwf	sprintf@f
  1897     0379  0841               	movf	main@hours_decimal,w
  1898     037A  00B5               	movwf	??_main
  1899     037B  01B6               	clrf	??_main+1
  1900     037C  0835               	movf	??_main,w
  1901     037D  00A5               	movwf	?_sprintf+1
  1902     037E  0836               	movf	??_main+1,w
  1903     037F  00A6               	movwf	?_sprintf+2
  1904     0380  0840               	movf	main@minutes_decimal,w
  1905     0381  00B7               	movwf	??_main+2
  1906     0382  01B8               	clrf	??_main+3
  1907     0383  0837               	movf	??_main+2,w
  1908     0384  00A7               	movwf	?_sprintf+3
  1909     0385  0838               	movf	??_main+3,w
  1910     0386  00A8               	movwf	?_sprintf+4
  1911     0387  083F               	movf	main@seconds_decimal,w
  1912     0388  00B9               	movwf	??_main+4
  1913     0389  01BA               	clrf	??_main+5
  1914     038A  0839               	movf	??_main+4,w
  1915     038B  00A9               	movwf	?_sprintf+5
  1916     038C  083A               	movf	??_main+5,w
  1917     038D  00AA               	movwf	?_sprintf+6
  1918     038E  305A               	movlw	(low (_hora| 0))& (0+255)
  1919     038F  120A  118A  23E6  120A  118A  	fcall	_sprintf
  1920     0394                     l1999:
  1921                           
  1922                           ;masterI2C.c: 234:         uint8_t days_decimal = bcd_to_decimal(day);
  1923     0394  1283               	bcf	3,5	;RP0=0, select bank0
  1924     0395  1303               	bcf	3,6	;RP1=0, select bank0
  1925     0396  084D               	movf	_day,w
  1926     0397  120A  158A  27BE  120A  118A  	fcall	_bcd_to_decimal
  1927     039C  1283               	bcf	3,5	;RP0=0, select bank0
  1928     039D  1303               	bcf	3,6	;RP1=0, select bank0
  1929     039E  00C2               	movwf	main@days_decimal
  1930     039F                     l2001:
  1931                           
  1932                           ;masterI2C.c: 235:         uint8_t months_decimal = bcd_to_decimal(month);
  1933     039F  084C               	movf	_month,w
  1934     03A0  120A  158A  27BE  120A  118A  	fcall	_bcd_to_decimal
  1935     03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1936     03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1937     03A7  00C3               	movwf	main@months_decimal
  1938     03A8                     l2003:
  1939                           
  1940                           ;masterI2C.c: 236:         uint8_t years_decimal = bcd_to_decimal(year);
  1941     03A8  084B               	movf	_year,w
  1942     03A9  120A  158A  27BE  120A  118A  	fcall	_bcd_to_decimal
  1943     03AE  1283               	bcf	3,5	;RP0=0, select bank0
  1944     03AF  1303               	bcf	3,6	;RP1=0, select bank0
  1945     03B0  00C4               	movwf	main@years_decimal
  1946     03B1                     l2005:
  1947                           
  1948                           ;masterI2C.c: 237:         sprintf(fecha,"%d/%d/%d",years_decimal,months_decimal,days_de
      +                          cimal);
  1949     03B1  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1950     03B2  00A4               	movwf	sprintf@f
  1951     03B3  0844               	movf	main@years_decimal,w
  1952     03B4  00B5               	movwf	??_main
  1953     03B5  01B6               	clrf	??_main+1
  1954     03B6  0835               	movf	??_main,w
  1955     03B7  00A5               	movwf	?_sprintf+1
  1956     03B8  0836               	movf	??_main+1,w
  1957     03B9  00A6               	movwf	?_sprintf+2
  1958     03BA  0843               	movf	main@months_decimal,w
  1959     03BB  00B7               	movwf	??_main+2
  1960     03BC  01B8               	clrf	??_main+3
  1961     03BD  0837               	movf	??_main+2,w
  1962     03BE  00A7               	movwf	?_sprintf+3
  1963     03BF  0838               	movf	??_main+3,w
  1964     03C0  00A8               	movwf	?_sprintf+4
  1965     03C1  0842               	movf	main@days_decimal,w
  1966     03C2  00B9               	movwf	??_main+4
  1967     03C3  01BA               	clrf	??_main+5
  1968     03C4  0839               	movf	??_main+4,w
  1969     03C5  00A9               	movwf	?_sprintf+5
  1970     03C6  083A               	movf	??_main+5,w
  1971     03C7  00AA               	movwf	?_sprintf+6
  1972     03C8  3051               	movlw	(low (_fecha| 0))& (0+255)
  1973     03C9  120A  118A  23E6  120A  118A  	fcall	_sprintf
  1974     03CE                     l2007:
  1975                           
  1976                           ;masterI2C.c: 240:         pantalla();
  1977     03CE  120A  118A  259B  120A  118A  	fcall	_pantalla
  1978     03D3                     l2009:
  1979                           
  1980                           ;masterI2C.c: 242:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1981     03D3  3003               	movlw	3
  1982     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1983     03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1984     03D6  00B7               	movwf	??_main+2
  1985     03D7  3008               	movlw	8
  1986     03D8  00B6               	movwf	??_main+1
  1987     03D9  3076               	movlw	118
  1988     03DA  00B5               	movwf	??_main
  1989     03DB                     u1167:
  1990     03DB  0BB5               	decfsz	??_main,f
  1991     03DC  2BDB               	goto	u1167
  1992     03DD  0BB6               	decfsz	??_main+1,f
  1993     03DE  2BDB               	goto	u1167
  1994     03DF  0BB7               	decfsz	??_main+2,f
  1995     03E0  2BDB               	goto	u1167
  1996     03E1  0000               	nop
  1997     03E2  2829               	goto	l1817
  1998     03E3  120A  118A  280C   	ljmp	start
  1999     03E6                     __end_of_main:
  2000                           
  2001                           	psect	text1
  2002     0791                     __ptext1:	
  2003 ;; *************** function _setup *****************
  2004 ;; Defined at:
  2005 ;;		line 252 in file "masterI2C.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;		None
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;		None
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  1    wreg      void 
  2012 ;; Registers used:
  2013 ;;		wreg, status,2, status,0, pclath, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2019 ;;      Params:         0       0       0       0       0
  2020 ;;      Locals:         0       0       0       0       0
  2021 ;;      Temps:          0       0       0       0       0
  2022 ;;      Totals:         0       0       0       0       0
  2023 ;;Total ram usage:        0 bytes
  2024 ;; Hardware stack levels used: 1
  2025 ;; Hardware stack levels required when called: 4
  2026 ;; This function calls:
  2027 ;;		_I2C_Master_Init
  2028 ;;		_Lcd_Init
  2029 ;;		_configIntbits
  2030 ;;		_configOsc
  2031 ;;		_configPort
  2032 ;;		_pullup
  2033 ;; This function is called by:
  2034 ;;		_main
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038     0791                     _setup:	
  2039                           ;psect for function _setup
  2040                           
  2041     0791                     l1749:	
  2042                           ;incstack = 0
  2043                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2044                           
  2045                           
  2046                           ;masterI2C.c: 254:     configOsc(8);
  2047     0791  3008               	movlw	8
  2048     0792  00F2               	movwf	configOsc@freq
  2049     0793  3000               	movlw	0
  2050     0794  00F3               	movwf	configOsc@freq+1
  2051     0795  120A  118A  24C2  120A  118A  	fcall	_configOsc
  2052                           
  2053                           ;masterI2C.c: 255:     configPort();
  2054     079A  120A  158A  27EA  120A  118A  	fcall	_configPort
  2055                           
  2056                           ;masterI2C.c: 256:     I2C_Master_Init(100000);
  2057     079F  3000               	movlw	0
  2058     07A0  1283               	bcf	3,5	;RP0=0, select bank0
  2059     07A1  1303               	bcf	3,6	;RP1=0, select bank0
  2060     07A2  00A8               	movwf	I2C_Master_Init@c+3
  2061     07A3  3001               	movlw	1
  2062     07A4  00A7               	movwf	I2C_Master_Init@c+2
  2063     07A5  3086               	movlw	134
  2064     07A6  00A6               	movwf	I2C_Master_Init@c+1
  2065     07A7  30A0               	movlw	160
  2066     07A8  00A5               	movwf	I2C_Master_Init@c
  2067     07A9  120A  118A  26FB  120A  118A  	fcall	_I2C_Master_Init
  2068                           
  2069                           ;masterI2C.c: 257:     Lcd_Init();
  2070     07AE  120A  118A  25EE  120A  118A  	fcall	_Lcd_Init
  2071     07B3                     l1751:
  2072                           
  2073                           ;masterI2C.c: 258:     configIntbits();
  2074     07B3  120A  158A  2761  120A  118A  	fcall	_configIntbits
  2075     07B8                     l1753:
  2076                           
  2077                           ;masterI2C.c: 259:     pullup();
  2078     07B8  120A  158A  276A  120A  118A  	fcall	_pullup
  2079     07BD                     l155:
  2080     07BD  0008               	return
  2081     07BE                     __end_of_setup:
  2082                           
  2083                           	psect	text2
  2084     0F6A                     __ptext2:	
  2085 ;; *************** function _pullup *****************
  2086 ;; Defined at:
  2087 ;;		line 25 in file "config.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;		None
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;		None
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		wreg
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2101 ;;      Params:         0       0       0       0       0
  2102 ;;      Locals:         0       0       0       0       0
  2103 ;;      Temps:          0       0       0       0       0
  2104 ;;      Totals:         0       0       0       0       0
  2105 ;;Total ram usage:        0 bytes
  2106 ;; Hardware stack levels used: 1
  2107 ;; Hardware stack levels required when called: 1
  2108 ;; This function calls:
  2109 ;;		Nothing
  2110 ;; This function is called by:
  2111 ;;		_setup
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115     0F6A                     _pullup:	
  2116                           ;psect for function _pullup
  2117                           
  2118     0F6A                     l1583:	
  2119                           ;incstack = 0
  2120                           ; Regs used in _pullup: [wreg]
  2121                           
  2122                           
  2123                           ;config.c: 26:     OPTION_REGbits.nRBPU = 0;
  2124     0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  2125     0F6B  1303               	bcf	3,6	;RP1=0, select bank1
  2126     0F6C  1381               	bcf	1,7	;volatile
  2127     0F6D                     l1585:
  2128                           
  2129                           ;config.c: 27:     WPUBbits.WPUB = 0b11111111;
  2130     0F6D  30FF               	movlw	255
  2131     0F6E  0095               	movwf	21	;volatile
  2132     0F6F                     l40:
  2133     0F6F  0008               	return
  2134     0F70                     __end_of_pullup:
  2135                           
  2136                           	psect	text3
  2137     0FEA                     __ptext3:	
  2138 ;; *************** function _configPort *****************
  2139 ;; Defined at:
  2140 ;;		line 3 in file "config.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;		None
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;		None
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      void 
  2147 ;; Registers used:
  2148 ;;		wreg, status,2
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2154 ;;      Params:         0       0       0       0       0
  2155 ;;      Locals:         0       0       0       0       0
  2156 ;;      Temps:          0       0       0       0       0
  2157 ;;      Totals:         0       0       0       0       0
  2158 ;;Total ram usage:        0 bytes
  2159 ;; Hardware stack levels used: 1
  2160 ;; Hardware stack levels required when called: 1
  2161 ;; This function calls:
  2162 ;;		Nothing
  2163 ;; This function is called by:
  2164 ;;		_setup
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168     0FEA                     _configPort:	
  2169                           ;psect for function _configPort
  2170                           
  2171     0FEA                     l1561:	
  2172                           ;incstack = 0
  2173                           ; Regs used in _configPort: [wreg+status,2]
  2174                           
  2175                           
  2176                           ;config.c: 5:     ANSEL = 0b00000001;
  2177     0FEA  3001               	movlw	1
  2178     0FEB  1683               	bsf	3,5	;RP0=1, select bank3
  2179     0FEC  1703               	bsf	3,6	;RP1=1, select bank3
  2180     0FED  0088               	movwf	8	;volatile
  2181     0FEE                     l1563:
  2182                           
  2183                           ;config.c: 6:     ANSELH = 0;
  2184     0FEE  0189               	clrf	9	;volatile
  2185     0FEF                     l1565:
  2186                           
  2187                           ;config.c: 8:     TRISA = 0b00000000;
  2188     0FEF  1683               	bsf	3,5	;RP0=1, select bank1
  2189     0FF0  1303               	bcf	3,6	;RP1=0, select bank1
  2190     0FF1  0185               	clrf	5	;volatile
  2191                           
  2192                           ;config.c: 9:     TRISB = 0b11111111;
  2193     0FF2  30FF               	movlw	255
  2194     0FF3  0086               	movwf	6	;volatile
  2195                           
  2196                           ;config.c: 10:     TRISC = 0b11111111;
  2197     0FF4  30FF               	movlw	255
  2198     0FF5  0087               	movwf	7	;volatile
  2199     0FF6                     l1567:
  2200                           
  2201                           ;config.c: 11:     TRISD = 0b00000000;
  2202     0FF6  0188               	clrf	8	;volatile
  2203     0FF7                     l1569:
  2204                           
  2205                           ;config.c: 12:     TRISE = 0b0000;
  2206     0FF7  0189               	clrf	9	;volatile
  2207     0FF8                     l1571:
  2208                           
  2209                           ;config.c: 14:     PORTA = 0;
  2210     0FF8  1283               	bcf	3,5	;RP0=0, select bank0
  2211     0FF9  1303               	bcf	3,6	;RP1=0, select bank0
  2212     0FFA  0185               	clrf	5	;volatile
  2213     0FFB                     l1573:
  2214                           
  2215                           ;config.c: 15:     PORTB = 0;
  2216     0FFB  0186               	clrf	6	;volatile
  2217     0FFC                     l1575:
  2218                           
  2219                           ;config.c: 16:     PORTC = 0;
  2220     0FFC  0187               	clrf	7	;volatile
  2221     0FFD                     l1577:
  2222                           
  2223                           ;config.c: 17:     PORTD = 0;
  2224     0FFD  0188               	clrf	8	;volatile
  2225     0FFE                     l1579:
  2226                           
  2227                           ;config.c: 18:     PORTE = 0;
  2228     0FFE  0189               	clrf	9	;volatile
  2229     0FFF                     l37:
  2230     0FFF  0008               	return
  2231     1000                     __end_of_configPort:
  2232                           
  2233                           	psect	text4
  2234     04C2                     __ptext4:	
  2235 ;; *************** function _configOsc *****************
  2236 ;; Defined at:
  2237 ;;		line 43 in file "config.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;  freq            2    2[COMMON] unsigned int 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2251 ;;      Params:         2       0       0       0       0
  2252 ;;      Locals:         0       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0
  2254 ;;      Totals:         2       0       0       0       0
  2255 ;;Total ram usage:        2 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; Hardware stack levels required when called: 1
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_setup
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265     04C2                     _configOsc:	
  2266                           ;psect for function _configOsc
  2267                           
  2268     04C2                     l1591:	
  2269                           ;incstack = 0
  2270                           ; Regs used in _configOsc: [wreg+status,2+status,0]
  2271                           
  2272                           
  2273                           ;config.c: 44:     if(freq == 8){
  2274     04C2  3008               	movlw	8
  2275     04C3  0672               	xorwf	configOsc@freq,w
  2276     04C4  0473               	iorwf	configOsc@freq+1,w
  2277     04C5  1D03               	btfss	3,2
  2278     04C6  2CC8               	goto	u761
  2279     04C7  2CC9               	goto	u760
  2280     04C8                     u761:
  2281     04C8  2CCE               	goto	l1595
  2282     04C9                     u760:
  2283     04C9                     l1593:
  2284                           
  2285                           ;config.c: 45:         OSCCONbits.IRCF = 0b111;
  2286     04C9  3070               	movlw	112
  2287     04CA  1683               	bsf	3,5	;RP0=1, select bank1
  2288     04CB  1303               	bcf	3,6	;RP1=0, select bank1
  2289     04CC  048F               	iorwf	15,f	;volatile
  2290                           
  2291                           ;config.c: 46:     }
  2292     04CD  2D2F               	goto	l1623
  2293     04CE                     l1595:
  2294     04CE  3004               	movlw	4
  2295     04CF  0672               	xorwf	configOsc@freq,w
  2296     04D0  0473               	iorwf	configOsc@freq+1,w
  2297     04D1  1D03               	btfss	3,2
  2298     04D2  2CD4               	goto	u771
  2299     04D3  2CD5               	goto	u770
  2300     04D4                     u771:
  2301     04D4  2CDC               	goto	l1599
  2302     04D5                     u770:
  2303     04D5                     l1597:
  2304                           
  2305                           ;config.c: 49:         OSCCONbits.IRCF = 0b110;
  2306     04D5  1683               	bsf	3,5	;RP0=1, select bank1
  2307     04D6  1303               	bcf	3,6	;RP1=0, select bank1
  2308     04D7  080F               	movf	15,w	;volatile
  2309     04D8  398F               	andlw	-113
  2310     04D9  3860               	iorlw	96
  2311     04DA  008F               	movwf	15	;volatile
  2312                           
  2313                           ;config.c: 50:     }
  2314     04DB  2D2F               	goto	l1623
  2315     04DC                     l1599:
  2316     04DC  3002               	movlw	2
  2317     04DD  0672               	xorwf	configOsc@freq,w
  2318     04DE  0473               	iorwf	configOsc@freq+1,w
  2319     04DF  1D03               	btfss	3,2
  2320     04E0  2CE2               	goto	u781
  2321     04E1  2CE3               	goto	u780
  2322     04E2                     u781:
  2323     04E2  2CEA               	goto	l1603
  2324     04E3                     u780:
  2325     04E3                     l1601:
  2326                           
  2327                           ;config.c: 53:         OSCCONbits.IRCF = 0b101;
  2328     04E3  1683               	bsf	3,5	;RP0=1, select bank1
  2329     04E4  1303               	bcf	3,6	;RP1=0, select bank1
  2330     04E5  080F               	movf	15,w	;volatile
  2331     04E6  398F               	andlw	-113
  2332     04E7  3850               	iorlw	80
  2333     04E8  008F               	movwf	15	;volatile
  2334                           
  2335                           ;config.c: 54:     }
  2336     04E9  2D2F               	goto	l1623
  2337     04EA                     l1603:
  2338     04EA  0372               	decf	configOsc@freq,w
  2339     04EB  0473               	iorwf	configOsc@freq+1,w
  2340     04EC  1D03               	btfss	3,2
  2341     04ED  2CEF               	goto	u791
  2342     04EE  2CF0               	goto	u790
  2343     04EF                     u791:
  2344     04EF  2CF7               	goto	l1607
  2345     04F0                     u790:
  2346     04F0                     l1605:
  2347                           
  2348                           ;config.c: 57:         OSCCONbits.IRCF = 0b100;
  2349     04F0  1683               	bsf	3,5	;RP0=1, select bank1
  2350     04F1  1303               	bcf	3,6	;RP1=0, select bank1
  2351     04F2  080F               	movf	15,w	;volatile
  2352     04F3  398F               	andlw	-113
  2353     04F4  3840               	iorlw	64
  2354     04F5  008F               	movwf	15	;volatile
  2355                           
  2356                           ;config.c: 58:     }
  2357     04F6  2D2F               	goto	l1623
  2358     04F7                     l1607:
  2359     04F7  30F4               	movlw	244
  2360     04F8  0672               	xorwf	configOsc@freq,w
  2361     04F9  1D03               	skipz
  2362     04FA  2CFF               	goto	u801
  2363     04FB  0373               	decf	configOsc@freq+1,w
  2364     04FC  1D03               	btfss	3,2
  2365     04FD  2CFF               	goto	u801
  2366     04FE  2D00               	goto	u800
  2367     04FF                     u801:
  2368     04FF  2D07               	goto	l1611
  2369     0500                     u800:
  2370     0500                     l1609:
  2371                           
  2372                           ;config.c: 61:         OSCCONbits.IRCF = 0b011;
  2373     0500  1683               	bsf	3,5	;RP0=1, select bank1
  2374     0501  1303               	bcf	3,6	;RP1=0, select bank1
  2375     0502  080F               	movf	15,w	;volatile
  2376     0503  398F               	andlw	-113
  2377     0504  3830               	iorlw	48
  2378     0505  008F               	movwf	15	;volatile
  2379                           
  2380                           ;config.c: 62:     }
  2381     0506  2D2F               	goto	l1623
  2382     0507                     l1611:
  2383     0507  30FA               	movlw	250
  2384     0508  0672               	xorwf	configOsc@freq,w
  2385     0509  0473               	iorwf	configOsc@freq+1,w
  2386     050A  1D03               	btfss	3,2
  2387     050B  2D0D               	goto	u811
  2388     050C  2D0E               	goto	u810
  2389     050D                     u811:
  2390     050D  2D15               	goto	l1615
  2391     050E                     u810:
  2392     050E                     l1613:
  2393                           
  2394                           ;config.c: 65:         OSCCONbits.IRCF = 0b010;
  2395     050E  1683               	bsf	3,5	;RP0=1, select bank1
  2396     050F  1303               	bcf	3,6	;RP1=0, select bank1
  2397     0510  080F               	movf	15,w	;volatile
  2398     0511  398F               	andlw	-113
  2399     0512  3820               	iorlw	32
  2400     0513  008F               	movwf	15	;volatile
  2401                           
  2402                           ;config.c: 66:     }
  2403     0514  2D2F               	goto	l1623
  2404     0515                     l1615:
  2405     0515  307D               	movlw	125
  2406     0516  0672               	xorwf	configOsc@freq,w
  2407     0517  0473               	iorwf	configOsc@freq+1,w
  2408     0518  1D03               	btfss	3,2
  2409     0519  2D1B               	goto	u821
  2410     051A  2D1C               	goto	u820
  2411     051B                     u821:
  2412     051B  2D23               	goto	l1619
  2413     051C                     u820:
  2414     051C                     l1617:
  2415                           
  2416                           ;config.c: 69:         OSCCONbits.IRCF = 0b001;
  2417     051C  1683               	bsf	3,5	;RP0=1, select bank1
  2418     051D  1303               	bcf	3,6	;RP1=0, select bank1
  2419     051E  080F               	movf	15,w	;volatile
  2420     051F  398F               	andlw	-113
  2421     0520  3810               	iorlw	16
  2422     0521  008F               	movwf	15	;volatile
  2423                           
  2424                           ;config.c: 70:     }
  2425     0522  2D2F               	goto	l1623
  2426     0523                     l1619:
  2427     0523  301F               	movlw	31
  2428     0524  0672               	xorwf	configOsc@freq,w
  2429     0525  0473               	iorwf	configOsc@freq+1,w
  2430     0526  1D03               	btfss	3,2
  2431     0527  2D29               	goto	u831
  2432     0528  2D2A               	goto	u830
  2433     0529                     u831:
  2434     0529  2D2F               	goto	l55
  2435     052A                     u830:
  2436     052A                     l1621:
  2437                           
  2438                           ;config.c: 73:         OSCCONbits.IRCF = 0b000;
  2439     052A  308F               	movlw	-113
  2440     052B  1683               	bsf	3,5	;RP0=1, select bank1
  2441     052C  1303               	bcf	3,6	;RP1=0, select bank1
  2442     052D  058F               	andwf	15,f	;volatile
  2443     052E  2D2F               	goto	l1623
  2444     052F                     l55:
  2445     052F                     l1623:
  2446                           
  2447                           ;config.c: 76:     OSCCONbits.SCS = 1;
  2448     052F  1683               	bsf	3,5	;RP0=1, select bank1
  2449     0530  1303               	bcf	3,6	;RP1=0, select bank1
  2450     0531  140F               	bsf	15,0	;volatile
  2451     0532                     l61:
  2452     0532  0008               	return
  2453     0533                     __end_of_configOsc:
  2454                           
  2455                           	psect	text5
  2456     0F61                     __ptext5:	
  2457 ;; *************** function _configIntbits *****************
  2458 ;; Defined at:
  2459 ;;		line 34 in file "config.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;		None
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;		None
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		None
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2473 ;;      Params:         0       0       0       0       0
  2474 ;;      Locals:         0       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0
  2476 ;;      Totals:         0       0       0       0       0
  2477 ;;Total ram usage:        0 bytes
  2478 ;; Hardware stack levels used: 1
  2479 ;; Hardware stack levels required when called: 1
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_setup
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487     0F61                     _configIntbits:	
  2488                           ;psect for function _configIntbits
  2489                           
  2490     0F61                     l1589:	
  2491                           ;incstack = 0
  2492                           ; Regs used in _configIntbits: []
  2493                           
  2494                           
  2495                           ;config.c: 35:     INTCONbits.GIE = 1;
  2496     0F61  178B               	bsf	11,7	;volatile
  2497                           
  2498                           ;config.c: 36:     INTCONbits.PEIE = 1;
  2499     0F62  170B               	bsf	11,6	;volatile
  2500     0F63                     l43:	
  2501                           ;config.c: 38:     return;
  2502                           
  2503     0F63  0008               	return
  2504     0F64                     __end_of_configIntbits:
  2505                           
  2506                           	psect	text6
  2507     05EE                     __ptext6:	
  2508 ;; *************** function _Lcd_Init *****************
  2509 ;; Defined at:
  2510 ;;		line 42 in file "LCD.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0, pclath, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         0       0       0       0       0
  2525 ;;      Locals:         0       0       0       0       0
  2526 ;;      Temps:          2       0       0       0       0
  2527 ;;      Totals:         2       0       0       0       0
  2528 ;;Total ram usage:        2 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 3
  2531 ;; This function calls:
  2532 ;;		_Lcd_Cmd
  2533 ;;		_Lcd_Port
  2534 ;; This function is called by:
  2535 ;;		_setup
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539     05EE                     _Lcd_Init:	
  2540                           ;psect for function _Lcd_Init
  2541                           
  2542     05EE                     l1701:	
  2543                           ;incstack = 0
  2544                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2545                           
  2546                           
  2547                           ;LCD.c: 43:     Lcd_Port(0x00);
  2548     05EE  3000               	movlw	0
  2549     05EF  120A  158A  2764  120A  118A  	fcall	_Lcd_Port
  2550     05F4                     l1703:
  2551                           
  2552                           ;LCD.c: 44:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2553     05F4  3034               	movlw	52
  2554     05F5  00F7               	movwf	??_Lcd_Init+1
  2555     05F6  30F1               	movlw	241
  2556     05F7  00F6               	movwf	??_Lcd_Init
  2557     05F8                     u1177:
  2558     05F8  0BF6               	decfsz	??_Lcd_Init,f
  2559     05F9  2DF8               	goto	u1177
  2560     05FA  0BF7               	decfsz	??_Lcd_Init+1,f
  2561     05FB  2DF8               	goto	u1177
  2562     05FC  2DFD               	nop2
  2563     05FD                     l1705:
  2564                           
  2565                           ;LCD.c: 45:     Lcd_Cmd(0x30);
  2566     05FD  3030               	movlw	48
  2567     05FE  120A  118A  27DE  120A  118A  	fcall	_Lcd_Cmd
  2568                           
  2569                           ;LCD.c: 46:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2570     0603  300D               	movlw	13
  2571     0604  00F7               	movwf	??_Lcd_Init+1
  2572     0605  30FB               	movlw	251
  2573     0606  00F6               	movwf	??_Lcd_Init
  2574     0607                     u1187:
  2575     0607  0BF6               	decfsz	??_Lcd_Init,f
  2576     0608  2E07               	goto	u1187
  2577     0609  0BF7               	decfsz	??_Lcd_Init+1,f
  2578     060A  2E07               	goto	u1187
  2579     060B  2E0C               	nop2
  2580     060C                     l1707:
  2581                           
  2582                           ;LCD.c: 47:     Lcd_Cmd(0x30);
  2583     060C  3030               	movlw	48
  2584     060D  120A  118A  27DE  120A  118A  	fcall	_Lcd_Cmd
  2585     0612                     l1709:
  2586                           
  2587                           ;LCD.c: 48:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2588     0612  301D               	movlw	29
  2589     0613  00F7               	movwf	??_Lcd_Init+1
  2590     0614  3091               	movlw	145
  2591     0615  00F6               	movwf	??_Lcd_Init
  2592     0616                     u1197:
  2593     0616  0BF6               	decfsz	??_Lcd_Init,f
  2594     0617  2E16               	goto	u1197
  2595     0618  0BF7               	decfsz	??_Lcd_Init+1,f
  2596     0619  2E16               	goto	u1197
  2597                           
  2598                           ;LCD.c: 49:     Lcd_Cmd(0x30);
  2599     061A  3030               	movlw	48
  2600     061B  120A  118A  27DE  120A  118A  	fcall	_Lcd_Cmd
  2601                           
  2602                           ;LCD.c: 51:     Lcd_Cmd(0x3C);
  2603     0620  303C               	movlw	60
  2604     0621  120A  118A  27DE  120A  118A  	fcall	_Lcd_Cmd
  2605                           
  2606                           ;LCD.c: 52:     Lcd_Cmd(0x0C);
  2607     0626  300C               	movlw	12
  2608     0627  120A  118A  27DE  120A  118A  	fcall	_Lcd_Cmd
  2609                           
  2610                           ;LCD.c: 53:     Lcd_Cmd(0x01);
  2611     062C  3001               	movlw	1
  2612     062D  120A  118A  27DE  120A  118A  	fcall	_Lcd_Cmd
  2613                           
  2614                           ;LCD.c: 54:     Lcd_Cmd(0x06);
  2615     0632  3006               	movlw	6
  2616     0633  120A  118A  27DE  120A  118A  	fcall	_Lcd_Cmd
  2617     0638                     l242:
  2618     0638  0008               	return
  2619     0639                     __end_of_Lcd_Init:
  2620                           
  2621                           	psect	text7
  2622     06FB                     __ptext7:	
  2623 ;; *************** function _I2C_Master_Init *****************
  2624 ;; Defined at:
  2625 ;;		line 16 in file "I2C.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  c               4    5[BANK0 ] const unsigned long 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;		None
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1    wreg      void 
  2632 ;; Registers used:
  2633 ;;		wreg, status,2, status,0, pclath, cstack
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2639 ;;      Params:         0       4       0       0       0
  2640 ;;      Locals:         0       0       0       0       0
  2641 ;;      Temps:          0       4       0       0       0
  2642 ;;      Totals:         0       8       0       0       0
  2643 ;;Total ram usage:        8 bytes
  2644 ;; Hardware stack levels used: 1
  2645 ;; Hardware stack levels required when called: 2
  2646 ;; This function calls:
  2647 ;;		___lldiv
  2648 ;; This function is called by:
  2649 ;;		_setup
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653     06FB                     _I2C_Master_Init:	
  2654                           ;psect for function _I2C_Master_Init
  2655                           
  2656     06FB                     l1689:	
  2657                           ;incstack = 0
  2658                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2659                           
  2660                           
  2661                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2662     06FB  3028               	movlw	40
  2663     06FC  1283               	bcf	3,5	;RP0=0, select bank0
  2664     06FD  1303               	bcf	3,6	;RP1=0, select bank0
  2665     06FE  0094               	movwf	20	;volatile
  2666     06FF                     l1691:
  2667                           
  2668                           ;I2C.c: 19:     SSPCON2 = 0;
  2669     06FF  1683               	bsf	3,5	;RP0=1, select bank1
  2670     0700  1303               	bcf	3,6	;RP1=0, select bank1
  2671     0701  0191               	clrf	17	;volatile
  2672     0702                     l1693:
  2673                           
  2674                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2675     0702  1283               	bcf	3,5	;RP0=0, select bank0
  2676     0703  1303               	bcf	3,6	;RP1=0, select bank0
  2677     0704  0825               	movf	I2C_Master_Init@c,w
  2678     0705  00A9               	movwf	??_I2C_Master_Init
  2679     0706  0826               	movf	I2C_Master_Init@c+1,w
  2680     0707  00AA               	movwf	??_I2C_Master_Init+1
  2681     0708  0827               	movf	I2C_Master_Init@c+2,w
  2682     0709  00AB               	movwf	??_I2C_Master_Init+2
  2683     070A  0828               	movf	I2C_Master_Init@c+3,w
  2684     070B  00AC               	movwf	??_I2C_Master_Init+3
  2685     070C  3002               	movlw	2
  2686     070D                     u915:
  2687     070D  1003               	clrc
  2688     070E  0DA9               	rlf	??_I2C_Master_Init,f
  2689     070F  0DAA               	rlf	??_I2C_Master_Init+1,f
  2690     0710  0DAB               	rlf	??_I2C_Master_Init+2,f
  2691     0711  0DAC               	rlf	??_I2C_Master_Init+3,f
  2692     0712                     u910:
  2693     0712  3EFF               	addlw	-1
  2694     0713  1D03               	skipz
  2695     0714  2F0D               	goto	u915
  2696     0715  082C               	movf	??_I2C_Master_Init+3,w
  2697     0716  00F5               	movwf	___lldiv@divisor+3
  2698     0717  082B               	movf	??_I2C_Master_Init+2,w
  2699     0718  00F4               	movwf	___lldiv@divisor+2
  2700     0719  082A               	movf	??_I2C_Master_Init+1,w
  2701     071A  00F3               	movwf	___lldiv@divisor+1
  2702     071B  0829               	movf	??_I2C_Master_Init,w
  2703     071C  00F2               	movwf	___lldiv@divisor
  2704     071D  3000               	movlw	0
  2705     071E  00F9               	movwf	___lldiv@dividend+3
  2706     071F  307A               	movlw	122
  2707     0720  00F8               	movwf	___lldiv@dividend+2
  2708     0721  3012               	movlw	18
  2709     0722  00F7               	movwf	___lldiv@dividend+1
  2710     0723  3000               	movlw	0
  2711     0724  00F6               	movwf	___lldiv@dividend
  2712     0725  120A  118A  2533  120A  118A  	fcall	___lldiv
  2713     072A  0872               	movf	?___lldiv,w
  2714     072B  3EFF               	addlw	255
  2715     072C  1683               	bsf	3,5	;RP0=1, select bank1
  2716     072D  1303               	bcf	3,6	;RP1=0, select bank1
  2717     072E  0093               	movwf	19	;volatile
  2718     072F                     l1695:
  2719                           
  2720                           ;I2C.c: 21:     SSPSTAT = 0;
  2721     072F  0194               	clrf	20	;volatile
  2722     0730                     l1697:
  2723                           
  2724                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2725     0730  1587               	bsf	7,3	;volatile
  2726     0731                     l1699:
  2727                           
  2728                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2729     0731  1607               	bsf	7,4	;volatile
  2730     0732                     l190:
  2731     0732  0008               	return
  2732     0733                     __end_of_I2C_Master_Init:
  2733                           
  2734                           	psect	text8
  2735     0533                     __ptext8:	
  2736 ;; *************** function ___lldiv *****************
  2737 ;; Defined at:
  2738 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  divisor         4    2[COMMON] unsigned long 
  2741 ;;  dividend        4    6[COMMON] unsigned long 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  quotient        4    0[BANK0 ] unsigned long 
  2744 ;;  counter         1    4[BANK0 ] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  4    2[COMMON] unsigned long 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2754 ;;      Params:         8       0       0       0       0
  2755 ;;      Locals:         0       5       0       0       0
  2756 ;;      Temps:          1       0       0       0       0
  2757 ;;      Totals:         9       5       0       0       0
  2758 ;;Total ram usage:       14 bytes
  2759 ;; Hardware stack levels used: 1
  2760 ;; Hardware stack levels required when called: 1
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_I2C_Master_Init
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768     0533                     ___lldiv:	
  2769                           ;psect for function ___lldiv
  2770                           
  2771     0533                     l1489:	
  2772                           ;incstack = 0
  2773                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2774                           
  2775     0533  3000               	movlw	0
  2776     0534  1283               	bcf	3,5	;RP0=0, select bank0
  2777     0535  1303               	bcf	3,6	;RP1=0, select bank0
  2778     0536  00A3               	movwf	___lldiv@quotient+3
  2779     0537  3000               	movlw	0
  2780     0538  00A2               	movwf	___lldiv@quotient+2
  2781     0539  3000               	movlw	0
  2782     053A  00A1               	movwf	___lldiv@quotient+1
  2783     053B  3000               	movlw	0
  2784     053C  00A0               	movwf	___lldiv@quotient
  2785     053D  0875               	movf	___lldiv@divisor+3,w
  2786     053E  0474               	iorwf	___lldiv@divisor+2,w
  2787     053F  0473               	iorwf	___lldiv@divisor+1,w
  2788     0540  0472               	iorwf	___lldiv@divisor,w
  2789     0541  1903               	skipnz
  2790     0542  2D44               	goto	u561
  2791     0543  2D45               	goto	u560
  2792     0544                     u561:
  2793     0544  2D92               	goto	l1509
  2794     0545                     u560:
  2795     0545                     l1491:
  2796     0545  01A4               	clrf	___lldiv@counter
  2797     0546  0AA4               	incf	___lldiv@counter,f
  2798     0547  2D55               	goto	l1495
  2799     0548                     l1493:
  2800     0548  3001               	movlw	1
  2801     0549  00FA               	movwf	??___lldiv
  2802     054A                     u575:
  2803     054A  1003               	clrc
  2804     054B  0DF2               	rlf	___lldiv@divisor,f
  2805     054C  0DF3               	rlf	___lldiv@divisor+1,f
  2806     054D  0DF4               	rlf	___lldiv@divisor+2,f
  2807     054E  0DF5               	rlf	___lldiv@divisor+3,f
  2808     054F  0BFA               	decfsz	??___lldiv,f
  2809     0550  2D4A               	goto	u575
  2810     0551  3001               	movlw	1
  2811     0552  00FA               	movwf	??___lldiv
  2812     0553  087A               	movf	??___lldiv,w
  2813     0554  07A4               	addwf	___lldiv@counter,f
  2814     0555                     l1495:
  2815     0555  1FF5               	btfss	___lldiv@divisor+3,7
  2816     0556  2D58               	goto	u581
  2817     0557  2D59               	goto	u580
  2818     0558                     u581:
  2819     0558  2D48               	goto	l1493
  2820     0559                     u580:
  2821     0559                     l1497:
  2822     0559  3001               	movlw	1
  2823     055A  00FA               	movwf	??___lldiv
  2824     055B                     u595:
  2825     055B  1003               	clrc
  2826     055C  0DA0               	rlf	___lldiv@quotient,f
  2827     055D  0DA1               	rlf	___lldiv@quotient+1,f
  2828     055E  0DA2               	rlf	___lldiv@quotient+2,f
  2829     055F  0DA3               	rlf	___lldiv@quotient+3,f
  2830     0560  0BFA               	decfsz	??___lldiv,f
  2831     0561  2D5B               	goto	u595
  2832     0562                     l1499:
  2833     0562  0875               	movf	___lldiv@divisor+3,w
  2834     0563  0279               	subwf	___lldiv@dividend+3,w
  2835     0564  1D03               	skipz
  2836     0565  2D70               	goto	u605
  2837     0566  0874               	movf	___lldiv@divisor+2,w
  2838     0567  0278               	subwf	___lldiv@dividend+2,w
  2839     0568  1D03               	skipz
  2840     0569  2D70               	goto	u605
  2841     056A  0873               	movf	___lldiv@divisor+1,w
  2842     056B  0277               	subwf	___lldiv@dividend+1,w
  2843     056C  1D03               	skipz
  2844     056D  2D70               	goto	u605
  2845     056E  0872               	movf	___lldiv@divisor,w
  2846     056F  0276               	subwf	___lldiv@dividend,w
  2847     0570                     u605:
  2848     0570  1C03               	skipc
  2849     0571  2D73               	goto	u601
  2850     0572  2D74               	goto	u600
  2851     0573                     u601:
  2852     0573  2D83               	goto	l1505
  2853     0574                     u600:
  2854     0574                     l1501:
  2855     0574  0872               	movf	___lldiv@divisor,w
  2856     0575  02F6               	subwf	___lldiv@dividend,f
  2857     0576  0873               	movf	___lldiv@divisor+1,w
  2858     0577  1C03               	skipc
  2859     0578  0F73               	incfsz	___lldiv@divisor+1,w
  2860     0579  02F7               	subwf	___lldiv@dividend+1,f
  2861     057A  0874               	movf	___lldiv@divisor+2,w
  2862     057B  1C03               	skipc
  2863     057C  0F74               	incfsz	___lldiv@divisor+2,w
  2864     057D  02F8               	subwf	___lldiv@dividend+2,f
  2865     057E  0875               	movf	___lldiv@divisor+3,w
  2866     057F  1C03               	skipc
  2867     0580  0F75               	incfsz	___lldiv@divisor+3,w
  2868     0581  02F9               	subwf	___lldiv@dividend+3,f
  2869     0582                     l1503:
  2870     0582  1420               	bsf	___lldiv@quotient,0
  2871     0583                     l1505:
  2872     0583  3001               	movlw	1
  2873     0584                     u615:
  2874     0584  1003               	clrc
  2875     0585  0CF5               	rrf	___lldiv@divisor+3,f
  2876     0586  0CF4               	rrf	___lldiv@divisor+2,f
  2877     0587  0CF3               	rrf	___lldiv@divisor+1,f
  2878     0588  0CF2               	rrf	___lldiv@divisor,f
  2879     0589  3EFF               	addlw	-1
  2880     058A  1D03               	skipz
  2881     058B  2D84               	goto	u615
  2882     058C                     l1507:
  2883     058C  3001               	movlw	1
  2884     058D  02A4               	subwf	___lldiv@counter,f
  2885     058E  1D03               	btfss	3,2
  2886     058F  2D91               	goto	u621
  2887     0590  2D92               	goto	u620
  2888     0591                     u621:
  2889     0591  2D59               	goto	l1497
  2890     0592                     u620:
  2891     0592                     l1509:
  2892     0592  0823               	movf	___lldiv@quotient+3,w
  2893     0593  00F5               	movwf	?___lldiv+3
  2894     0594  0822               	movf	___lldiv@quotient+2,w
  2895     0595  00F4               	movwf	?___lldiv+2
  2896     0596  0821               	movf	___lldiv@quotient+1,w
  2897     0597  00F3               	movwf	?___lldiv+1
  2898     0598  0820               	movf	___lldiv@quotient,w
  2899     0599  00F2               	movwf	?___lldiv
  2900     059A                     l407:
  2901     059A  0008               	return
  2902     059B                     __end_of___lldiv:
  2903                           
  2904                           	psect	text9
  2905     059B                     __ptext9:	
  2906 ;; *************** function _pantalla *****************
  2907 ;; Defined at:
  2908 ;;		line 270 in file "masterI2C.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;		None
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2922 ;;      Params:         0       0       0       0       0
  2923 ;;      Locals:         0       0       0       0       0
  2924 ;;      Temps:          0       0       0       0       0
  2925 ;;      Totals:         0       0       0       0       0
  2926 ;;Total ram usage:        0 bytes
  2927 ;; Hardware stack levels used: 1
  2928 ;; Hardware stack levels required when called: 4
  2929 ;; This function calls:
  2930 ;;		_Lcd_Set_Cursor
  2931 ;;		_Lcd_Write_String
  2932 ;;		_sprintf
  2933 ;; This function is called by:
  2934 ;;		_main
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938     059B                     _pantalla:	
  2939                           ;psect for function _pantalla
  2940                           
  2941     059B                     l1793:	
  2942                           ;incstack = 0
  2943                           ; Regs used in _pantalla: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2944                           
  2945                           
  2946                           ;masterI2C.c: 273:     Lcd_Set_Cursor(1,1);
  2947     059B  01F6               	clrf	Lcd_Set_Cursor@b
  2948     059C  0AF6               	incf	Lcd_Set_Cursor@b,f
  2949     059D  3001               	movlw	1
  2950     059E  120A  118A  27BE  120A  118A  	fcall	_Lcd_Set_Cursor
  2951     05A3                     l1795:
  2952                           
  2953                           ;masterI2C.c: 274:     Lcd_Write_String("S1:");
  2954     05A3  301D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2955     05A4  00F5               	movwf	Lcd_Write_String@a
  2956     05A5  3080               	movlw	128
  2957     05A6  00F6               	movwf	Lcd_Write_String@a+1
  2958     05A7  120A  118A  267D  120A  118A  	fcall	_Lcd_Write_String
  2959     05AC                     l1797:
  2960                           
  2961                           ;masterI2C.c: 275:     Lcd_Set_Cursor(2,1);
  2962     05AC  01F6               	clrf	Lcd_Set_Cursor@b
  2963     05AD  0AF6               	incf	Lcd_Set_Cursor@b,f
  2964     05AE  3002               	movlw	2
  2965     05AF  120A  118A  27BE  120A  118A  	fcall	_Lcd_Set_Cursor
  2966                           
  2967                           ;masterI2C.c: 276:     sprintf(Resadc,"%d",temp1);
  2968     05B4  3011               	movlw	(low (((STR_2+6)-__stringbase)| (0+32768)))& (0+255)
  2969     05B5  1283               	bcf	3,5	;RP0=0, select bank0
  2970     05B6  1303               	bcf	3,6	;RP1=0, select bank0
  2971     05B7  00A4               	movwf	sprintf@f
  2972     05B8  084A               	movf	_temp1+1,w
  2973     05B9  00A6               	movwf	?_sprintf+2
  2974     05BA  0849               	movf	_temp1,w
  2975     05BB  00A5               	movwf	?_sprintf+1
  2976     05BC  3063               	movlw	(low (_Resadc| 0))& (0+255)
  2977     05BD  120A  118A  23E6  120A  118A  	fcall	_sprintf
  2978                           
  2979                           ;masterI2C.c: 277:     Lcd_Write_String(Resadc);
  2980     05C2  3063               	movlw	(low (_Resadc| 0))& (0+255)
  2981     05C3  00F5               	movwf	Lcd_Write_String@a
  2982     05C4  3000               	movlw	0
  2983     05C5  00F6               	movwf	Lcd_Write_String@a+1
  2984     05C6  120A  118A  267D  120A  118A  	fcall	_Lcd_Write_String
  2985     05CB                     l1799:
  2986                           
  2987                           ;masterI2C.c: 280:     Lcd_Set_Cursor(1,6);
  2988     05CB  3006               	movlw	6
  2989     05CC  00F6               	movwf	Lcd_Set_Cursor@b
  2990     05CD  3001               	movlw	1
  2991     05CE  120A  118A  27BE  120A  118A  	fcall	_Lcd_Set_Cursor
  2992     05D3                     l1801:
  2993                           
  2994                           ;masterI2C.c: 281:     Lcd_Write_String(hora);
  2995     05D3  305A               	movlw	(low (_hora| 0))& (0+255)
  2996     05D4  00F5               	movwf	Lcd_Write_String@a
  2997     05D5  3000               	movlw	0
  2998     05D6  00F6               	movwf	Lcd_Write_String@a+1
  2999     05D7  120A  118A  267D  120A  118A  	fcall	_Lcd_Write_String
  3000                           
  3001                           ;masterI2C.c: 285:     Lcd_Set_Cursor(2,6);
  3002     05DC  3006               	movlw	6
  3003     05DD  00F6               	movwf	Lcd_Set_Cursor@b
  3004     05DE  3002               	movlw	2
  3005     05DF  120A  118A  27BE  120A  118A  	fcall	_Lcd_Set_Cursor
  3006     05E4                     l1803:
  3007                           
  3008                           ;masterI2C.c: 286:     Lcd_Write_String(fecha);
  3009     05E4  3051               	movlw	(low (_fecha| 0))& (0+255)
  3010     05E5  00F5               	movwf	Lcd_Write_String@a
  3011     05E6  3000               	movlw	0
  3012     05E7  00F6               	movwf	Lcd_Write_String@a+1
  3013     05E8  120A  118A  267D  120A  118A  	fcall	_Lcd_Write_String
  3014     05ED                     l161:
  3015     05ED  0008               	return
  3016     05EE                     __end_of_pantalla:
  3017                           
  3018                           	psect	text10
  3019     03E6                     __ptext10:	
  3020 ;; *************** function _sprintf *****************
  3021 ;; Defined at:
  3022 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  sp              1    wreg     PTR unsigned char 
  3025 ;;		 -> Resadc(4), fecha(9), hora(9), 
  3026 ;;  f               1    4[BANK0 ] PTR const unsigned char 
  3027 ;;		 -> STR_4(3), STR_2(9), STR_1(9), 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  3030 ;;		 -> Resadc(4), fecha(9), hora(9), 
  3031 ;;  tmpval          4    0        struct .
  3032 ;;  val             2   17[BANK0 ] unsigned int 
  3033 ;;  cp              2    0        PTR const unsigned char 
  3034 ;;  len             2    0        unsigned int 
  3035 ;;  c               1   20[BANK0 ] unsigned char 
  3036 ;;  prec            1   16[BANK0 ] char 
  3037 ;;  flag            1   15[BANK0 ] unsigned char 
  3038 ;;  ap              1   14[BANK0 ] PTR void [1]
  3039 ;;		 -> ?_sprintf(2), 
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  2    4[BANK0 ] int 
  3042 ;; Registers used:
  3043 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3049 ;;      Params:         0       7       0       0       0
  3050 ;;      Locals:         0       7       0       0       0
  3051 ;;      Temps:          0       3       0       0       0
  3052 ;;      Totals:         0      17       0       0       0
  3053 ;;Total ram usage:       17 bytes
  3054 ;; Hardware stack levels used: 1
  3055 ;; Hardware stack levels required when called: 2
  3056 ;; This function calls:
  3057 ;;		___lwdiv
  3058 ;;		___lwmod
  3059 ;; This function is called by:
  3060 ;;		_main
  3061 ;;		_pantalla
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065     03E6                     _sprintf:	
  3066                           ;psect for function _sprintf
  3067                           
  3068                           
  3069                           ;incstack = 0
  3070                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3071                           ;sprintf@sp stored from wreg
  3072     03E6  1283               	bcf	3,5	;RP0=0, select bank0
  3073     03E7  1303               	bcf	3,6	;RP1=0, select bank0
  3074     03E8  00B3               	movwf	sprintf@sp
  3075     03E9                     l1627:
  3076                           
  3077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  3078     03E9  3025               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3079     03EA  00AE               	movwf	sprintf@ap
  3080                           
  3081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3082     03EB  2CAD               	goto	l1679
  3083     03EC                     l1629:
  3084                           
  3085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3086     03EC  3025               	movlw	37
  3087     03ED  0634               	xorwf	sprintf@c,w
  3088     03EE  1903               	btfsc	3,2
  3089     03EF  2BF1               	goto	u841
  3090     03F0  2BF2               	goto	u840
  3091     03F1                     u841:
  3092     03F1  2BFC               	goto	l1635
  3093     03F2                     u840:
  3094     03F2                     l1631:
  3095                           
  3096                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3097     03F2  0833               	movf	sprintf@sp,w
  3098     03F3  0084               	movwf	4
  3099     03F4  0834               	movf	sprintf@c,w
  3100     03F5  1383               	bcf	3,7	;select IRP bank0
  3101     03F6  0080               	movwf	0
  3102     03F7                     l1633:
  3103     03F7  3001               	movlw	1
  3104     03F8  00AB               	movwf	??_sprintf
  3105     03F9  082B               	movf	??_sprintf,w
  3106     03FA  07B3               	addwf	sprintf@sp,f
  3107                           
  3108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  3109     03FB  2CAD               	goto	l1679
  3110     03FC                     l1635:
  3111                           
  3112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3113     03FC  01AF               	clrf	sprintf@flag
  3114     03FD                     l1639:	
  3115                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3116                           
  3117     03FD  3001               	movlw	1
  3118     03FE  07A4               	addwf	sprintf@f,f
  3119     03FF  30FF               	movlw	-1
  3120     0400  0724               	addwf	sprintf@f,w
  3121     0401  0084               	movwf	4
  3122     0402  120A  118A  273D  120A  118A  	fcall	stringdir
  3123     0407  00B4               	movwf	sprintf@c
  3124     0408  00AB               	movwf	??_sprintf
  3125     0409  01AC               	clrf	??_sprintf+1
  3126                           
  3127                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3128                           ; Switch size 1, requested type "simple"
  3129                           ; Number of cases is 1, Range of values is 0 to 0
  3130                           ; switch strategies available:
  3131                           ; Name         Instructions Cycles
  3132                           ; simple_byte            4     3 (average)
  3133                           ; direct_byte           11     8 (fixed)
  3134                           ; jumptable            260     6 (fixed)
  3135                           ;	Chosen strategy is simple_byte
  3136     040A  082C               	movf	??_sprintf+1,w
  3137     040B  3A00               	xorlw	0	; case 0
  3138     040C  1903               	skipnz
  3139     040D  2C0F               	goto	l2037
  3140     040E  2CAD               	goto	l1679
  3141     040F                     l2037:
  3142                           
  3143                           ; Switch size 1, requested type "simple"
  3144                           ; Number of cases is 3, Range of values is 0 to 105
  3145                           ; switch strategies available:
  3146                           ; Name         Instructions Cycles
  3147                           ; simple_byte           10     6 (average)
  3148                           ; jumptable            260     6 (fixed)
  3149                           ;	Chosen strategy is simple_byte
  3150     040F  082B               	movf	??_sprintf,w
  3151     0410  3A00               	xorlw	0	; case 0
  3152     0411  1903               	skipnz
  3153     0412  2CBD               	goto	l1681
  3154     0413  3A64               	xorlw	100	; case 100
  3155     0414  1903               	skipnz
  3156     0415  2C1A               	goto	l1641
  3157     0416  3A0D               	xorlw	13	; case 105
  3158     0417  1903               	skipnz
  3159     0418  2C1A               	goto	l1641
  3160     0419  2CAD               	goto	l1679
  3161     041A                     l1641:
  3162                           
  3163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3164     041A  082E               	movf	sprintf@ap,w
  3165     041B  0084               	movwf	4
  3166     041C  1383               	bcf	3,7	;select IRP bank0
  3167     041D  0800               	movf	0,w
  3168     041E  00B1               	movwf	sprintf@val
  3169     041F  0A84               	incf	4,f
  3170     0420  0800               	movf	0,w
  3171     0421  00B2               	movwf	sprintf@val+1
  3172     0422                     l1643:
  3173     0422  3002               	movlw	2
  3174     0423  00AB               	movwf	??_sprintf
  3175     0424  082B               	movf	??_sprintf,w
  3176     0425  07AE               	addwf	sprintf@ap,f
  3177     0426                     l1645:
  3178                           
  3179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3180     0426  1FB2               	btfss	sprintf@val+1,7
  3181     0427  2C29               	goto	u851
  3182     0428  2C2A               	goto	u850
  3183     0429                     u851:
  3184     0429  2C33               	goto	l1651
  3185     042A                     u850:
  3186     042A                     l1647:
  3187                           
  3188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3189     042A  3003               	movlw	3
  3190     042B  00AB               	movwf	??_sprintf
  3191     042C  082B               	movf	??_sprintf,w
  3192     042D  04AF               	iorwf	sprintf@flag,f
  3193     042E                     l1649:
  3194                           
  3195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3196     042E  09B1               	comf	sprintf@val,f
  3197     042F  09B2               	comf	sprintf@val+1,f
  3198     0430  0AB1               	incf	sprintf@val,f
  3199     0431  1903               	skipnz
  3200     0432  0AB2               	incf	sprintf@val+1,f
  3201     0433                     l1651:
  3202                           
  3203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3204     0433  01B4               	clrf	sprintf@c
  3205     0434  0AB4               	incf	sprintf@c,f
  3206     0435                     l1657:
  3207                           
  3208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3209     0435  0834               	movf	sprintf@c,w
  3210     0436  00AB               	movwf	??_sprintf
  3211     0437  072B               	addwf	??_sprintf,w
  3212     0438  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3213     0439  0084               	movwf	4
  3214     043A  120A  118A  273D  120A  118A  	fcall	stringdir
  3215     043F  00AC               	movwf	??_sprintf+1
  3216     0440  120A  118A  273D  120A  118A  	fcall	stringdir
  3217     0445  00AD               	movwf	??_sprintf+2
  3218     0446  082D               	movf	??_sprintf+2,w
  3219     0447  0232               	subwf	sprintf@val+1,w
  3220     0448  1D03               	skipz
  3221     0449  2C4C               	goto	u865
  3222     044A  082C               	movf	??_sprintf+1,w
  3223     044B  0231               	subwf	sprintf@val,w
  3224     044C                     u865:
  3225     044C  1803               	skipnc
  3226     044D  2C4F               	goto	u861
  3227     044E  2C50               	goto	u860
  3228     044F                     u861:
  3229     044F  2C51               	goto	l1661
  3230     0450                     u860:
  3231     0450  2C5B               	goto	l1663
  3232     0451                     l1661:
  3233     0451  3001               	movlw	1
  3234     0452  00AB               	movwf	??_sprintf
  3235     0453  082B               	movf	??_sprintf,w
  3236     0454  07B4               	addwf	sprintf@c,f
  3237     0455  3005               	movlw	5
  3238     0456  0634               	xorwf	sprintf@c,w
  3239     0457  1D03               	btfss	3,2
  3240     0458  2C5A               	goto	u871
  3241     0459  2C5B               	goto	u870
  3242     045A                     u871:
  3243     045A  2C35               	goto	l1657
  3244     045B                     u870:
  3245     045B                     l1663:
  3246                           
  3247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3248     045B  082F               	movf	sprintf@flag,w
  3249     045C  3903               	andlw	3
  3250     045D  1903               	btfsc	3,2
  3251     045E  2C60               	goto	u881
  3252     045F  2C61               	goto	u880
  3253     0460                     u881:
  3254     0460  2C6A               	goto	l1669
  3255     0461                     u880:
  3256     0461                     l1665:
  3257                           
  3258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3259     0461  0833               	movf	sprintf@sp,w
  3260     0462  0084               	movwf	4
  3261     0463  302D               	movlw	45
  3262     0464  1383               	bcf	3,7	;select IRP bank0
  3263     0465  0080               	movwf	0
  3264     0466                     l1667:
  3265     0466  3001               	movlw	1
  3266     0467  00AB               	movwf	??_sprintf
  3267     0468  082B               	movf	??_sprintf,w
  3268     0469  07B3               	addwf	sprintf@sp,f
  3269     046A                     l1669:
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3272     046A  0834               	movf	sprintf@c,w
  3273     046B  00B0               	movwf	sprintf@prec
  3274                           
  3275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3276     046C  2CA4               	goto	l1677
  3277     046D                     l1671:
  3278                           
  3279                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3280     046D  300A               	movlw	10
  3281     046E  00A0               	movwf	___lwmod@divisor
  3282     046F  3000               	movlw	0
  3283     0470  00A1               	movwf	___lwmod@divisor+1
  3284     0471  0830               	movf	sprintf@prec,w
  3285     0472  00AB               	movwf	??_sprintf
  3286     0473  072B               	addwf	??_sprintf,w
  3287     0474  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3288     0475  0084               	movwf	4
  3289     0476  120A  118A  273D  120A  118A  	fcall	stringdir
  3290     047B  00F2               	movwf	___lwdiv@divisor
  3291     047C  120A  118A  273D  120A  118A  	fcall	stringdir
  3292     0481  00F3               	movwf	___lwdiv@divisor+1
  3293     0482  0832               	movf	sprintf@val+1,w
  3294     0483  00F5               	movwf	___lwdiv@dividend+1
  3295     0484  0831               	movf	sprintf@val,w
  3296     0485  00F4               	movwf	___lwdiv@dividend
  3297     0486  120A  118A  2639  120A  118A  	fcall	___lwdiv
  3298     048B  0873               	movf	?___lwdiv+1,w
  3299     048C  1283               	bcf	3,5	;RP0=0, select bank0
  3300     048D  1303               	bcf	3,6	;RP1=0, select bank0
  3301     048E  00A3               	movwf	___lwmod@dividend+1
  3302     048F  0872               	movf	?___lwdiv,w
  3303     0490  00A2               	movwf	___lwmod@dividend
  3304     0491  120A  118A  26BF  120A  118A  	fcall	___lwmod
  3305     0496  1283               	bcf	3,5	;RP0=0, select bank0
  3306     0497  1303               	bcf	3,6	;RP1=0, select bank0
  3307     0498  0820               	movf	?___lwmod,w
  3308     0499  3E30               	addlw	48
  3309     049A  00B4               	movwf	sprintf@c
  3310     049B                     l1673:
  3311                           
  3312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3313     049B  0833               	movf	sprintf@sp,w
  3314     049C  0084               	movwf	4
  3315     049D  0834               	movf	sprintf@c,w
  3316     049E  1383               	bcf	3,7	;select IRP bank0
  3317     049F  0080               	movwf	0
  3318     04A0                     l1675:
  3319     04A0  3001               	movlw	1
  3320     04A1  00AB               	movwf	??_sprintf
  3321     04A2  082B               	movf	??_sprintf,w
  3322     04A3  07B3               	addwf	sprintf@sp,f
  3323     04A4                     l1677:
  3324                           
  3325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3326     04A4  30FF               	movlw	255
  3327     04A5  00AB               	movwf	??_sprintf
  3328     04A6  082B               	movf	??_sprintf,w
  3329     04A7  07B0               	addwf	sprintf@prec,f
  3330     04A8  0A30               	incf	sprintf@prec,w
  3331     04A9  1D03               	btfss	3,2
  3332     04AA  2CAC               	goto	u891
  3333     04AB  2CAD               	goto	u890
  3334     04AC                     u891:
  3335     04AC  2C6D               	goto	l1671
  3336     04AD                     u890:
  3337     04AD                     l1679:
  3338                           
  3339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3340     04AD  3001               	movlw	1
  3341     04AE  07A4               	addwf	sprintf@f,f
  3342     04AF  30FF               	movlw	-1
  3343     04B0  0724               	addwf	sprintf@f,w
  3344     04B1  0084               	movwf	4
  3345     04B2  120A  118A  273D  120A  118A  	fcall	stringdir
  3346     04B7  00B4               	movwf	sprintf@c
  3347     04B8  0834               	movf	sprintf@c,w
  3348     04B9  1D03               	btfss	3,2
  3349     04BA  2CBC               	goto	u901
  3350     04BB  2CBD               	goto	u900
  3351     04BC                     u901:
  3352     04BC  2BEC               	goto	l1629
  3353     04BD                     u900:
  3354     04BD                     l1681:
  3355                           
  3356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3357     04BD  0833               	movf	sprintf@sp,w
  3358     04BE  0084               	movwf	4
  3359     04BF  1383               	bcf	3,7	;select IRP bank0
  3360     04C0  0180               	clrf	0
  3361     04C1                     l367:
  3362     04C1  0008               	return
  3363     04C2                     __end_of_sprintf:
  3364                           
  3365                           	psect	text11
  3366     06BF                     __ptext11:	
  3367 ;; *************** function ___lwmod *****************
  3368 ;; Defined at:
  3369 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  divisor         2    0[BANK0 ] unsigned int 
  3372 ;;  dividend        2    2[BANK0 ] unsigned int 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  counter         1   11[COMMON] unsigned char 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  2    0[BANK0 ] unsigned int 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3384 ;;      Params:         0       4       0       0       0
  3385 ;;      Locals:         1       0       0       0       0
  3386 ;;      Temps:          1       0       0       0       0
  3387 ;;      Totals:         2       4       0       0       0
  3388 ;;Total ram usage:        6 bytes
  3389 ;; Hardware stack levels used: 1
  3390 ;; Hardware stack levels required when called: 1
  3391 ;; This function calls:
  3392 ;;		Nothing
  3393 ;; This function is called by:
  3394 ;;		_sprintf
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398     06BF                     ___lwmod:	
  3399                           ;psect for function ___lwmod
  3400                           
  3401     06BF                     l1539:	
  3402                           ;incstack = 0
  3403                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3404                           
  3405     06BF  1283               	bcf	3,5	;RP0=0, select bank0
  3406     06C0  1303               	bcf	3,6	;RP1=0, select bank0
  3407     06C1  0820               	movf	___lwmod@divisor,w
  3408     06C2  0421               	iorwf	___lwmod@divisor+1,w
  3409     06C3  1903               	btfsc	3,2
  3410     06C4  2EC6               	goto	u701
  3411     06C5  2EC7               	goto	u700
  3412     06C6                     u701:
  3413     06C6  2EF6               	goto	l1557
  3414     06C7                     u700:
  3415     06C7                     l1541:
  3416     06C7  01FB               	clrf	___lwmod@counter
  3417     06C8  0AFB               	incf	___lwmod@counter,f
  3418     06C9  2ED5               	goto	l1547
  3419     06CA                     l1543:
  3420     06CA  3001               	movlw	1
  3421     06CB                     u715:
  3422     06CB  1003               	clrc
  3423     06CC  0DA0               	rlf	___lwmod@divisor,f
  3424     06CD  0DA1               	rlf	___lwmod@divisor+1,f
  3425     06CE  3EFF               	addlw	-1
  3426     06CF  1D03               	skipz
  3427     06D0  2ECB               	goto	u715
  3428     06D1                     l1545:
  3429     06D1  3001               	movlw	1
  3430     06D2  00FA               	movwf	??___lwmod
  3431     06D3  087A               	movf	??___lwmod,w
  3432     06D4  07FB               	addwf	___lwmod@counter,f
  3433     06D5                     l1547:
  3434     06D5  1FA1               	btfss	___lwmod@divisor+1,7
  3435     06D6  2ED8               	goto	u721
  3436     06D7  2ED9               	goto	u720
  3437     06D8                     u721:
  3438     06D8  2ECA               	goto	l1543
  3439     06D9                     u720:
  3440     06D9                     l1549:
  3441     06D9  0821               	movf	___lwmod@divisor+1,w
  3442     06DA  0223               	subwf	___lwmod@dividend+1,w
  3443     06DB  1D03               	skipz
  3444     06DC  2EDF               	goto	u735
  3445     06DD  0820               	movf	___lwmod@divisor,w
  3446     06DE  0222               	subwf	___lwmod@dividend,w
  3447     06DF                     u735:
  3448     06DF  1C03               	skipc
  3449     06E0  2EE2               	goto	u731
  3450     06E1  2EE3               	goto	u730
  3451     06E2                     u731:
  3452     06E2  2EE9               	goto	l1553
  3453     06E3                     u730:
  3454     06E3                     l1551:
  3455     06E3  0820               	movf	___lwmod@divisor,w
  3456     06E4  02A2               	subwf	___lwmod@dividend,f
  3457     06E5  0821               	movf	___lwmod@divisor+1,w
  3458     06E6  1C03               	skipc
  3459     06E7  03A3               	decf	___lwmod@dividend+1,f
  3460     06E8  02A3               	subwf	___lwmod@dividend+1,f
  3461     06E9                     l1553:
  3462     06E9  3001               	movlw	1
  3463     06EA                     u745:
  3464     06EA  1003               	clrc
  3465     06EB  0CA1               	rrf	___lwmod@divisor+1,f
  3466     06EC  0CA0               	rrf	___lwmod@divisor,f
  3467     06ED  3EFF               	addlw	-1
  3468     06EE  1D03               	skipz
  3469     06EF  2EEA               	goto	u745
  3470     06F0                     l1555:
  3471     06F0  3001               	movlw	1
  3472     06F1  02FB               	subwf	___lwmod@counter,f
  3473     06F2  1D03               	btfss	3,2
  3474     06F3  2EF5               	goto	u751
  3475     06F4  2EF6               	goto	u750
  3476     06F5                     u751:
  3477     06F5  2ED9               	goto	l1549
  3478     06F6                     u750:
  3479     06F6                     l1557:
  3480     06F6  0823               	movf	___lwmod@dividend+1,w
  3481     06F7  00A1               	movwf	?___lwmod+1
  3482     06F8  0822               	movf	___lwmod@dividend,w
  3483     06F9  00A0               	movwf	?___lwmod
  3484     06FA                     l653:
  3485     06FA  0008               	return
  3486     06FB                     __end_of___lwmod:
  3487                           
  3488                           	psect	text12
  3489     0639                     __ptext12:	
  3490 ;; *************** function ___lwdiv *****************
  3491 ;; Defined at:
  3492 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  divisor         2    2[COMMON] unsigned int 
  3495 ;;  dividend        2    4[COMMON] unsigned int 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  quotient        2    7[COMMON] unsigned int 
  3498 ;;  counter         1    9[COMMON] unsigned char 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  2    2[COMMON] unsigned int 
  3501 ;; Registers used:
  3502 ;;		wreg, status,2, status,0
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3508 ;;      Params:         4       0       0       0       0
  3509 ;;      Locals:         3       0       0       0       0
  3510 ;;      Temps:          1       0       0       0       0
  3511 ;;      Totals:         8       0       0       0       0
  3512 ;;Total ram usage:        8 bytes
  3513 ;; Hardware stack levels used: 1
  3514 ;; Hardware stack levels required when called: 1
  3515 ;; This function calls:
  3516 ;;		Nothing
  3517 ;; This function is called by:
  3518 ;;		_sprintf
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522     0639                     ___lwdiv:	
  3523                           ;psect for function ___lwdiv
  3524                           
  3525     0639                     l1513:	
  3526                           ;incstack = 0
  3527                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3528                           
  3529     0639  01F7               	clrf	___lwdiv@quotient
  3530     063A  01F8               	clrf	___lwdiv@quotient+1
  3531     063B                     l1515:
  3532     063B  0872               	movf	___lwdiv@divisor,w
  3533     063C  0473               	iorwf	___lwdiv@divisor+1,w
  3534     063D  1903               	btfsc	3,2
  3535     063E  2E40               	goto	u631
  3536     063F  2E41               	goto	u630
  3537     0640                     u631:
  3538     0640  2E78               	goto	l1535
  3539     0641                     u630:
  3540     0641                     l1517:
  3541     0641  01F9               	clrf	___lwdiv@counter
  3542     0642  0AF9               	incf	___lwdiv@counter,f
  3543     0643  2E4F               	goto	l1523
  3544     0644                     l1519:
  3545     0644  3001               	movlw	1
  3546     0645                     u645:
  3547     0645  1003               	clrc
  3548     0646  0DF2               	rlf	___lwdiv@divisor,f
  3549     0647  0DF3               	rlf	___lwdiv@divisor+1,f
  3550     0648  3EFF               	addlw	-1
  3551     0649  1D03               	skipz
  3552     064A  2E45               	goto	u645
  3553     064B                     l1521:
  3554     064B  3001               	movlw	1
  3555     064C  00F6               	movwf	??___lwdiv
  3556     064D  0876               	movf	??___lwdiv,w
  3557     064E  07F9               	addwf	___lwdiv@counter,f
  3558     064F                     l1523:
  3559     064F  1FF3               	btfss	___lwdiv@divisor+1,7
  3560     0650  2E52               	goto	u651
  3561     0651  2E53               	goto	u650
  3562     0652                     u651:
  3563     0652  2E44               	goto	l1519
  3564     0653                     u650:
  3565     0653                     l1525:
  3566     0653  3001               	movlw	1
  3567     0654                     u665:
  3568     0654  1003               	clrc
  3569     0655  0DF7               	rlf	___lwdiv@quotient,f
  3570     0656  0DF8               	rlf	___lwdiv@quotient+1,f
  3571     0657  3EFF               	addlw	-1
  3572     0658  1D03               	skipz
  3573     0659  2E54               	goto	u665
  3574     065A  0873               	movf	___lwdiv@divisor+1,w
  3575     065B  0275               	subwf	___lwdiv@dividend+1,w
  3576     065C  1D03               	skipz
  3577     065D  2E60               	goto	u675
  3578     065E  0872               	movf	___lwdiv@divisor,w
  3579     065F  0274               	subwf	___lwdiv@dividend,w
  3580     0660                     u675:
  3581     0660  1C03               	skipc
  3582     0661  2E63               	goto	u671
  3583     0662  2E64               	goto	u670
  3584     0663                     u671:
  3585     0663  2E6B               	goto	l1531
  3586     0664                     u670:
  3587     0664                     l1527:
  3588     0664  0872               	movf	___lwdiv@divisor,w
  3589     0665  02F4               	subwf	___lwdiv@dividend,f
  3590     0666  0873               	movf	___lwdiv@divisor+1,w
  3591     0667  1C03               	skipc
  3592     0668  03F5               	decf	___lwdiv@dividend+1,f
  3593     0669  02F5               	subwf	___lwdiv@dividend+1,f
  3594     066A                     l1529:
  3595     066A  1477               	bsf	___lwdiv@quotient,0
  3596     066B                     l1531:
  3597     066B  3001               	movlw	1
  3598     066C                     u685:
  3599     066C  1003               	clrc
  3600     066D  0CF3               	rrf	___lwdiv@divisor+1,f
  3601     066E  0CF2               	rrf	___lwdiv@divisor,f
  3602     066F  3EFF               	addlw	-1
  3603     0670  1D03               	skipz
  3604     0671  2E6C               	goto	u685
  3605     0672                     l1533:
  3606     0672  3001               	movlw	1
  3607     0673  02F9               	subwf	___lwdiv@counter,f
  3608     0674  1D03               	btfss	3,2
  3609     0675  2E77               	goto	u691
  3610     0676  2E78               	goto	u690
  3611     0677                     u691:
  3612     0677  2E53               	goto	l1525
  3613     0678                     u690:
  3614     0678                     l1535:
  3615     0678  0878               	movf	___lwdiv@quotient+1,w
  3616     0679  00F3               	movwf	?___lwdiv+1
  3617     067A  0877               	movf	___lwdiv@quotient,w
  3618     067B  00F2               	movwf	?___lwdiv
  3619     067C                     l643:
  3620     067C  0008               	return
  3621     067D                     __end_of___lwdiv:
  3622                           
  3623                           	psect	text13
  3624     067D                     __ptext13:	
  3625 ;; *************** function _Lcd_Write_String *****************
  3626 ;; Defined at:
  3627 ;;		line 66 in file "LCD.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;  a               2    5[COMMON] PTR unsigned char 
  3630 ;;		 -> Resadc(4), STR_3(4), fecha(9), hora(9), 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  i               2   10[COMMON] int 
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3642 ;;      Params:         2       0       0       0       0
  3643 ;;      Locals:         2       0       0       0       0
  3644 ;;      Temps:          3       0       0       0       0
  3645 ;;      Totals:         7       0       0       0       0
  3646 ;;Total ram usage:        7 bytes
  3647 ;; Hardware stack levels used: 1
  3648 ;; Hardware stack levels required when called: 3
  3649 ;; This function calls:
  3650 ;;		_Lcd_Write_Char
  3651 ;; This function is called by:
  3652 ;;		_pantalla
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656     067D                     _Lcd_Write_String:	
  3657                           ;psect for function _Lcd_Write_String
  3658                           
  3659     067D                     l1723:	
  3660                           ;incstack = 0
  3661                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3662                           
  3663                           
  3664                           ;LCD.c: 67:     int i;;LCD.c: 68:     for (i = 0; a[i] != '\0'; i++)
  3665     067D  01FA               	clrf	Lcd_Write_String@i
  3666     067E  01FB               	clrf	Lcd_Write_String@i+1
  3667     067F  2EA2               	goto	l1729
  3668     0680                     l1725:
  3669                           
  3670                           ;LCD.c: 69:         Lcd_Write_Char(a[i]);
  3671     0680  087A               	movf	Lcd_Write_String@i,w
  3672     0681  0775               	addwf	Lcd_Write_String@a,w
  3673     0682  00F8               	movwf	??_Lcd_Write_String+1
  3674     0683  0876               	movf	Lcd_Write_String@a+1,w
  3675     0684  00F7               	movwf	??_Lcd_Write_String
  3676     0685  1803               	skipnc
  3677     0686  0AF7               	incf	??_Lcd_Write_String,f
  3678     0687  1FFA               	btfss	Lcd_Write_String@i,7
  3679     0688  2E8A               	goto	u940
  3680     0689  03F7               	decf	??_Lcd_Write_String,f
  3681     068A                     u940:
  3682     068A  0877               	movf	??_Lcd_Write_String,w
  3683     068B  00F9               	movwf	??_Lcd_Write_String+2
  3684     068C  0879               	movf	??_Lcd_Write_String+2,w
  3685     068D  1283               	bcf	3,5	;RP0=0, select bank0
  3686     068E  1303               	bcf	3,6	;RP1=0, select bank0
  3687     068F  00FF               	movwf	btemp+1
  3688     0690  0878               	movf	??_Lcd_Write_String+1,w
  3689     0691  0084               	movwf	4
  3690     0692  120A  118A  2733  120A  118A  	fcall	stringtab
  3691     0697  120A  158A  27D4  120A  118A  	fcall	_Lcd_Write_Char
  3692     069C                     l1727:
  3693     069C  3001               	movlw	1
  3694     069D  07FA               	addwf	Lcd_Write_String@i,f
  3695     069E  1803               	skipnc
  3696     069F  0AFB               	incf	Lcd_Write_String@i+1,f
  3697     06A0  3000               	movlw	0
  3698     06A1  07FB               	addwf	Lcd_Write_String@i+1,f
  3699     06A2                     l1729:
  3700     06A2  087A               	movf	Lcd_Write_String@i,w
  3701     06A3  0775               	addwf	Lcd_Write_String@a,w
  3702     06A4  00F8               	movwf	??_Lcd_Write_String+1
  3703     06A5  0876               	movf	Lcd_Write_String@a+1,w
  3704     06A6  00F7               	movwf	??_Lcd_Write_String
  3705     06A7  1803               	skipnc
  3706     06A8  0AF7               	incf	??_Lcd_Write_String,f
  3707     06A9  1FFA               	btfss	Lcd_Write_String@i,7
  3708     06AA  2EAC               	goto	u950
  3709     06AB  03F7               	decf	??_Lcd_Write_String,f
  3710     06AC                     u950:
  3711     06AC  0877               	movf	??_Lcd_Write_String,w
  3712     06AD  00F9               	movwf	??_Lcd_Write_String+2
  3713     06AE  0879               	movf	??_Lcd_Write_String+2,w
  3714     06AF  1283               	bcf	3,5	;RP0=0, select bank0
  3715     06B0  1303               	bcf	3,6	;RP1=0, select bank0
  3716     06B1  00FF               	movwf	btemp+1
  3717     06B2  0878               	movf	??_Lcd_Write_String+1,w
  3718     06B3  0084               	movwf	4
  3719     06B4  120A  118A  2733  120A  118A  	fcall	stringtab
  3720     06B9  3A00               	xorlw	0
  3721     06BA  1D03               	skipz
  3722     06BB  2EBD               	goto	u961
  3723     06BC  2EBE               	goto	u960
  3724     06BD                     u961:
  3725     06BD  2E80               	goto	l1725
  3726     06BE                     u960:
  3727     06BE                     l251:
  3728     06BE  0008               	return
  3729     06BF                     __end_of_Lcd_Write_String:
  3730                           
  3731                           	psect	text14
  3732     0FD4                     __ptext14:	
  3733 ;; *************** function _Lcd_Write_Char *****************
  3734 ;; Defined at:
  3735 ;;		line 57 in file "LCD.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  a               1    wreg     unsigned char 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  a               1    4[COMMON] unsigned char 
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2, status,0, pclath, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3749 ;;      Params:         0       0       0       0       0
  3750 ;;      Locals:         1       0       0       0       0
  3751 ;;      Temps:          1       0       0       0       0
  3752 ;;      Totals:         2       0       0       0       0
  3753 ;;Total ram usage:        2 bytes
  3754 ;; Hardware stack levels used: 1
  3755 ;; Hardware stack levels required when called: 2
  3756 ;; This function calls:
  3757 ;;		_Lcd_Port
  3758 ;; This function is called by:
  3759 ;;		_Lcd_Write_String
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763     0FD4                     _Lcd_Write_Char:	
  3764                           ;psect for function _Lcd_Write_Char
  3765                           
  3766                           
  3767                           ;incstack = 0
  3768                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3769                           ;Lcd_Write_Char@a stored from wreg
  3770     0FD4  00F4               	movwf	Lcd_Write_Char@a
  3771     0FD5                     l1479:
  3772                           
  3773                           ;LCD.c: 58:     RE0 = 1;
  3774     0FD5  1283               	bcf	3,5	;RP0=0, select bank0
  3775     0FD6  1303               	bcf	3,6	;RP1=0, select bank0
  3776     0FD7  1409               	bsf	9,0	;volatile
  3777     0FD8                     l1481:
  3778                           
  3779                           ;LCD.c: 59:     Lcd_Port(a);
  3780     0FD8  0874               	movf	Lcd_Write_Char@a,w
  3781     0FD9  120A  158A  2764  120A  158A  	fcall	_Lcd_Port
  3782     0FDE                     l1483:
  3783                           
  3784                           ;LCD.c: 60:     RE1 = 1;
  3785     0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  3786     0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  3787     0FE0  1489               	bsf	9,1	;volatile
  3788     0FE1                     l1485:
  3789                           
  3790                           ;LCD.c: 61:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3791     0FE1  301A               	movlw	26
  3792     0FE2  00F3               	movwf	??_Lcd_Write_Char
  3793     0FE3                     u1207:
  3794     0FE3  0BF3               	decfsz	??_Lcd_Write_Char,f
  3795     0FE4  2FE3               	goto	u1207
  3796     0FE5  0000               	nop
  3797     0FE6                     l1487:
  3798                           
  3799                           ;LCD.c: 62:     RE1 = 0;
  3800     0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  3801     0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  3802     0FE8  1089               	bcf	9,1	;volatile
  3803     0FE9                     l245:
  3804     0FE9  0008               	return
  3805     0FEA                     __end_of_Lcd_Write_Char:
  3806                           
  3807                           	psect	text15
  3808     07BE                     __ptext15:	
  3809 ;; *************** function _Lcd_Set_Cursor *****************
  3810 ;; Defined at:
  3811 ;;		line 31 in file "LCD.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  a               1    wreg     unsigned char 
  3814 ;;  b               1    6[COMMON] unsigned char 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;  a               1    7[COMMON] unsigned char 
  3817 ;;  direccion       1    8[COMMON] unsigned char 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      void 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2, status,0, pclath, cstack
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3827 ;;      Params:         1       0       0       0       0
  3828 ;;      Locals:         2       0       0       0       0
  3829 ;;      Temps:          0       0       0       0       0
  3830 ;;      Totals:         3       0       0       0       0
  3831 ;;Total ram usage:        3 bytes
  3832 ;; Hardware stack levels used: 1
  3833 ;; Hardware stack levels required when called: 3
  3834 ;; This function calls:
  3835 ;;		_Lcd_Cmd
  3836 ;; This function is called by:
  3837 ;;		_pantalla
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841     07BE                     _Lcd_Set_Cursor:	
  3842                           ;psect for function _Lcd_Set_Cursor
  3843                           
  3844                           
  3845                           ;incstack = 0
  3846                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3847                           ;Lcd_Set_Cursor@a stored from wreg
  3848     07BE  00F7               	movwf	Lcd_Set_Cursor@a
  3849     07BF                     l1711:
  3850                           
  3851                           ;LCD.c: 32:     char direccion;;LCD.c: 33:     if (a == 1) {
  3852     07BF  0377               	decf	Lcd_Set_Cursor@a,w
  3853     07C0  1D03               	btfss	3,2
  3854     07C1  2FC3               	goto	u921
  3855     07C2  2FC4               	goto	u920
  3856     07C3                     u921:
  3857     07C3  2FCE               	goto	l1717
  3858     07C4                     u920:
  3859     07C4                     l1713:
  3860                           
  3861                           ;LCD.c: 34:         direccion = 0x80 + b - 1;
  3862     07C4  0876               	movf	Lcd_Set_Cursor@b,w
  3863     07C5  3E7F               	addlw	127
  3864     07C6  00F8               	movwf	Lcd_Set_Cursor@direccion
  3865     07C7                     l1715:
  3866                           
  3867                           ;LCD.c: 35:         Lcd_Cmd(direccion);
  3868     07C7  0878               	movf	Lcd_Set_Cursor@direccion,w
  3869     07C8  120A  118A  27DE  120A  118A  	fcall	_Lcd_Cmd
  3870                           
  3871                           ;LCD.c: 36:     } else if (a == 2) {
  3872     07CD  2FDD               	goto	l239
  3873     07CE                     l1717:
  3874     07CE  3002               	movlw	2
  3875     07CF  0677               	xorwf	Lcd_Set_Cursor@a,w
  3876     07D0  1D03               	btfss	3,2
  3877     07D1  2FD3               	goto	u931
  3878     07D2  2FD4               	goto	u930
  3879     07D3                     u931:
  3880     07D3  2FDD               	goto	l239
  3881     07D4                     u930:
  3882     07D4                     l1719:
  3883                           
  3884                           ;LCD.c: 37:         direccion = 0xC0 + b - 1;
  3885     07D4  0876               	movf	Lcd_Set_Cursor@b,w
  3886     07D5  3EBF               	addlw	191
  3887     07D6  00F8               	movwf	Lcd_Set_Cursor@direccion
  3888     07D7                     l1721:
  3889                           
  3890                           ;LCD.c: 38:         Lcd_Cmd(direccion);
  3891     07D7  0878               	movf	Lcd_Set_Cursor@direccion,w
  3892     07D8  120A  118A  27DE  120A  118A  	fcall	_Lcd_Cmd
  3893     07DD                     l239:
  3894     07DD  0008               	return
  3895     07DE                     __end_of_Lcd_Set_Cursor:
  3896                           
  3897                           	psect	text16
  3898     07DE                     __ptext16:	
  3899 ;; *************** function _Lcd_Cmd *****************
  3900 ;; Defined at:
  3901 ;;		line 17 in file "LCD.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  a               1    wreg     unsigned char 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;  a               1    5[COMMON] unsigned char 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, status,2, status,0, pclath, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3915 ;;      Params:         0       0       0       0       0
  3916 ;;      Locals:         1       0       0       0       0
  3917 ;;      Temps:          2       0       0       0       0
  3918 ;;      Totals:         3       0       0       0       0
  3919 ;;Total ram usage:        3 bytes
  3920 ;; Hardware stack levels used: 1
  3921 ;; Hardware stack levels required when called: 2
  3922 ;; This function calls:
  3923 ;;		_Lcd_Port
  3924 ;; This function is called by:
  3925 ;;		_Lcd_Set_Cursor
  3926 ;;		_Lcd_Init
  3927 ;;		_Lcd_Clear
  3928 ;;		_Lcd_Shift_Right
  3929 ;;		_Lcd_Shift_Left
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933     07DE                     _Lcd_Cmd:	
  3934                           ;psect for function _Lcd_Cmd
  3935                           
  3936                           
  3937                           ;incstack = 0
  3938                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3939                           ;Lcd_Cmd@a stored from wreg
  3940     07DE  00F5               	movwf	Lcd_Cmd@a
  3941     07DF                     l1469:
  3942                           
  3943                           ;LCD.c: 18:     RE0 = 0;
  3944     07DF  1283               	bcf	3,5	;RP0=0, select bank0
  3945     07E0  1303               	bcf	3,6	;RP1=0, select bank0
  3946     07E1  1009               	bcf	9,0	;volatile
  3947     07E2                     l1471:
  3948                           
  3949                           ;LCD.c: 19:     Lcd_Port(a);
  3950     07E2  0875               	movf	Lcd_Cmd@a,w
  3951     07E3  120A  158A  2764  120A  118A  	fcall	_Lcd_Port
  3952     07E8                     l1473:
  3953                           
  3954                           ;LCD.c: 20:     RE1 = 1;
  3955     07E8  1283               	bcf	3,5	;RP0=0, select bank0
  3956     07E9  1303               	bcf	3,6	;RP1=0, select bank0
  3957     07EA  1489               	bsf	9,1	;volatile
  3958     07EB                     l1475:
  3959                           
  3960                           ;LCD.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3961     07EB  300B               	movlw	11
  3962     07EC  00F4               	movwf	??_Lcd_Cmd+1
  3963     07ED  3062               	movlw	98
  3964     07EE  00F3               	movwf	??_Lcd_Cmd
  3965     07EF                     u1217:
  3966     07EF  0BF3               	decfsz	??_Lcd_Cmd,f
  3967     07F0  2FEF               	goto	u1217
  3968     07F1  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3969     07F2  2FEF               	goto	u1217
  3970     07F3  0000               	nop
  3971     07F4                     l1477:
  3972                           
  3973                           ;LCD.c: 23:     RE1 = 0;
  3974     07F4  1283               	bcf	3,5	;RP0=0, select bank0
  3975     07F5  1303               	bcf	3,6	;RP1=0, select bank0
  3976     07F6  1089               	bcf	9,1	;volatile
  3977     07F7                     l230:
  3978     07F7  0008               	return
  3979     07F8                     __end_of_Lcd_Cmd:
  3980                           
  3981                           	psect	text17
  3982     0F64                     __ptext17:	
  3983 ;; *************** function _Lcd_Port *****************
  3984 ;; Defined at:
  3985 ;;		line 13 in file "LCD.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  a               1    wreg     unsigned char 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  a               1    2[COMMON] unsigned char 
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      void 
  3992 ;; Registers used:
  3993 ;;		wreg
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3999 ;;      Params:         0       0       0       0       0
  4000 ;;      Locals:         1       0       0       0       0
  4001 ;;      Temps:          0       0       0       0       0
  4002 ;;      Totals:         1       0       0       0       0
  4003 ;;Total ram usage:        1 bytes
  4004 ;; Hardware stack levels used: 1
  4005 ;; Hardware stack levels required when called: 1
  4006 ;; This function calls:
  4007 ;;		Nothing
  4008 ;; This function is called by:
  4009 ;;		_Lcd_Cmd
  4010 ;;		_Lcd_Init
  4011 ;;		_Lcd_Write_Char
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015     0F64                     _Lcd_Port:	
  4016                           ;psect for function _Lcd_Port
  4017                           
  4018                           
  4019                           ;incstack = 0
  4020                           ; Regs used in _Lcd_Port: [wreg]
  4021                           ;Lcd_Port@a stored from wreg
  4022     0F64  00F2               	movwf	Lcd_Port@a
  4023     0F65                     l1467:
  4024                           
  4025                           ;LCD.c: 14:     PORTD = a;
  4026     0F65  0872               	movf	Lcd_Port@a,w
  4027     0F66  1283               	bcf	3,5	;RP0=0, select bank0
  4028     0F67  1303               	bcf	3,6	;RP1=0, select bank0
  4029     0F68  0088               	movwf	8	;volatile
  4030     0F69                     l227:
  4031     0F69  0008               	return
  4032     0F6A                     __end_of_Lcd_Port:
  4033                           
  4034                           	psect	text18
  4035     0FBE                     __ptext18:	
  4036 ;; *************** function _bcd_to_decimal *****************
  4037 ;; Defined at:
  4038 ;;		line 266 in file "masterI2C.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;  bcd             1    wreg     unsigned char 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;  bcd             1    8[COMMON] unsigned char 
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  1    wreg      unsigned char 
  4045 ;; Registers used:
  4046 ;;		wreg, status,2, status,0, pclath, cstack
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4052 ;;      Params:         0       0       0       0       0
  4053 ;;      Locals:         1       0       0       0       0
  4054 ;;      Temps:          2       0       0       0       0
  4055 ;;      Totals:         3       0       0       0       0
  4056 ;;Total ram usage:        3 bytes
  4057 ;; Hardware stack levels used: 1
  4058 ;; Hardware stack levels required when called: 2
  4059 ;; This function calls:
  4060 ;;		___bmul
  4061 ;; This function is called by:
  4062 ;;		_main
  4063 ;; This function uses a non-reentrant model
  4064 ;;
  4065                           
  4066     0FBE                     _bcd_to_decimal:	
  4067                           ;psect for function _bcd_to_decimal
  4068                           
  4069                           
  4070                           ;incstack = 0
  4071                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  4072                           ;bcd_to_decimal@bcd stored from wreg
  4073     0FBE  00F8               	movwf	bcd_to_decimal@bcd
  4074     0FBF                     l1761:
  4075                           
  4076                           ;masterI2C.c: 267:     return ((bcd >> 4) * 10) + (bcd & 0x0F);
  4077     0FBF  300F               	movlw	15
  4078     0FC0  0578               	andwf	bcd_to_decimal@bcd,w
  4079     0FC1  00F6               	movwf	??_bcd_to_decimal
  4080     0FC2  300A               	movlw	10
  4081     0FC3  00F2               	movwf	___bmul@multiplicand
  4082     0FC4  0878               	movf	bcd_to_decimal@bcd,w
  4083     0FC5  00F7               	movwf	??_bcd_to_decimal+1
  4084     0FC6  3004               	movlw	4
  4085     0FC7                     u1015:
  4086     0FC7  1003               	clrc
  4087     0FC8  0CF7               	rrf	??_bcd_to_decimal+1,f
  4088     0FC9  3EFF               	addlw	-1
  4089     0FCA  1D03               	skipz
  4090     0FCB  2FC7               	goto	u1015
  4091     0FCC  0877               	movf	??_bcd_to_decimal+1,w
  4092     0FCD  120A  158A  27A9  120A  158A  	fcall	___bmul
  4093     0FD2  0776               	addwf	??_bcd_to_decimal,w
  4094     0FD3                     l158:
  4095     0FD3  0008               	return
  4096     0FD4                     __end_of_bcd_to_decimal:
  4097                           
  4098                           	psect	text19
  4099     0FA9                     __ptext19:	
  4100 ;; *************** function ___bmul *****************
  4101 ;; Defined at:
  4102 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  multiplier      1    wreg     unsigned char 
  4105 ;;  multiplicand    1    2[COMMON] unsigned char 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  multiplier      1    5[COMMON] unsigned char 
  4108 ;;  product         1    4[COMMON] unsigned char 
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      unsigned char 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4118 ;;      Params:         1       0       0       0       0
  4119 ;;      Locals:         2       0       0       0       0
  4120 ;;      Temps:          1       0       0       0       0
  4121 ;;      Totals:         4       0       0       0       0
  4122 ;;Total ram usage:        4 bytes
  4123 ;; Hardware stack levels used: 1
  4124 ;; Hardware stack levels required when called: 1
  4125 ;; This function calls:
  4126 ;;		Nothing
  4127 ;; This function is called by:
  4128 ;;		_bcd_to_decimal
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132     0FA9                     ___bmul:	
  4133                           ;psect for function ___bmul
  4134                           
  4135                           
  4136                           ;incstack = 0
  4137                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4138                           ;___bmul@multiplier stored from wreg
  4139     0FA9  00F5               	movwf	___bmul@multiplier
  4140     0FAA                     l1735:
  4141     0FAA  01F4               	clrf	___bmul@product
  4142     0FAB                     l1737:
  4143     0FAB  1C75               	btfss	___bmul@multiplier,0
  4144     0FAC  2FAE               	goto	u991
  4145     0FAD  2FAF               	goto	u990
  4146     0FAE                     u991:
  4147     0FAE  2FB3               	goto	l1741
  4148     0FAF                     u990:
  4149     0FAF                     l1739:
  4150     0FAF  0872               	movf	___bmul@multiplicand,w
  4151     0FB0  00F3               	movwf	??___bmul
  4152     0FB1  0873               	movf	??___bmul,w
  4153     0FB2  07F4               	addwf	___bmul@product,f
  4154     0FB3                     l1741:
  4155     0FB3  1003               	clrc
  4156     0FB4  0DF2               	rlf	___bmul@multiplicand,f
  4157     0FB5                     l1743:
  4158     0FB5  1003               	clrc
  4159     0FB6  0CF5               	rrf	___bmul@multiplier,f
  4160     0FB7  0875               	movf	___bmul@multiplier,w
  4161     0FB8  1D03               	btfss	3,2
  4162     0FB9  2FBB               	goto	u1001
  4163     0FBA  2FBC               	goto	u1000
  4164     0FBB                     u1001:
  4165     0FBB  2FAB               	goto	l1737
  4166     0FBC                     u1000:
  4167     0FBC                     l1745:
  4168     0FBC  0874               	movf	___bmul@product,w
  4169     0FBD                     l397:
  4170     0FBD  0008               	return
  4171     0FBE                     __end_of___bmul:
  4172                           
  4173                           	psect	text20
  4174     0F92                     __ptext20:	
  4175 ;; *************** function _I2C_Master_Write *****************
  4176 ;; Defined at:
  4177 ;;		line 65 in file "I2C.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  d               2    2[COMMON] unsigned int 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;		None
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg, status,2, status,0, pclath, cstack
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4191 ;;      Params:         2       0       0       0       0
  4192 ;;      Locals:         0       0       0       0       0
  4193 ;;      Temps:          0       0       0       0       0
  4194 ;;      Totals:         2       0       0       0       0
  4195 ;;Total ram usage:        2 bytes
  4196 ;; Hardware stack levels used: 1
  4197 ;; Hardware stack levels required when called: 2
  4198 ;; This function calls:
  4199 ;;		_I2C_Master_Wait
  4200 ;; This function is called by:
  4201 ;;		_main
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205     0F92                     _I2C_Master_Write:	
  4206                           ;psect for function _I2C_Master_Write
  4207                           
  4208     0F92                     l1765:	
  4209                           ;incstack = 0
  4210                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4211                           
  4212                           
  4213                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  4214     0F92  120A  158A  279C  120A  158A  	fcall	_I2C_Master_Wait
  4215     0F97                     l1767:
  4216                           
  4217                           ;I2C.c: 68:     SSPBUF = d;
  4218     0F97  0872               	movf	I2C_Master_Write@d,w
  4219     0F98  1283               	bcf	3,5	;RP0=0, select bank0
  4220     0F99  1303               	bcf	3,6	;RP1=0, select bank0
  4221     0F9A  0093               	movwf	19	;volatile
  4222     0F9B                     l208:
  4223     0F9B  0008               	return
  4224     0F9C                     __end_of_I2C_Master_Write:
  4225                           
  4226                           	psect	text21
  4227     0F89                     __ptext21:	
  4228 ;; *************** function _I2C_Master_Stop *****************
  4229 ;; Defined at:
  4230 ;;		line 55 in file "I2C.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;		None
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;		None
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      void 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0, pclath, cstack
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4244 ;;      Params:         0       0       0       0       0
  4245 ;;      Locals:         0       0       0       0       0
  4246 ;;      Temps:          0       0       0       0       0
  4247 ;;      Totals:         0       0       0       0       0
  4248 ;;Total ram usage:        0 bytes
  4249 ;; Hardware stack levels used: 1
  4250 ;; Hardware stack levels required when called: 2
  4251 ;; This function calls:
  4252 ;;		_I2C_Master_Wait
  4253 ;; This function is called by:
  4254 ;;		_main
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258     0F89                     _I2C_Master_Stop:	
  4259                           ;psect for function _I2C_Master_Stop
  4260                           
  4261     0F89                     l1789:	
  4262                           ;incstack = 0
  4263                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4264                           
  4265                           
  4266                           ;I2C.c: 57:     I2C_Master_Wait();
  4267     0F89  120A  158A  279C  120A  158A  	fcall	_I2C_Master_Wait
  4268     0F8E                     l1791:
  4269                           
  4270                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  4271     0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  4272     0F8F  1303               	bcf	3,6	;RP1=0, select bank1
  4273     0F90  1511               	bsf	17,2	;volatile
  4274     0F91                     l205:
  4275     0F91  0008               	return
  4276     0F92                     __end_of_I2C_Master_Stop:
  4277                           
  4278                           	psect	text22
  4279     0F80                     __ptext22:	
  4280 ;; *************** function _I2C_Master_Start *****************
  4281 ;; Defined at:
  4282 ;;		line 39 in file "I2C.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;		None
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;		None
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  1    wreg      void 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0, pclath, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4296 ;;      Params:         0       0       0       0       0
  4297 ;;      Locals:         0       0       0       0       0
  4298 ;;      Temps:          0       0       0       0       0
  4299 ;;      Totals:         0       0       0       0       0
  4300 ;;Total ram usage:        0 bytes
  4301 ;; Hardware stack levels used: 1
  4302 ;; Hardware stack levels required when called: 2
  4303 ;; This function calls:
  4304 ;;		_I2C_Master_Wait
  4305 ;; This function is called by:
  4306 ;;		_main
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310     0F80                     _I2C_Master_Start:	
  4311                           ;psect for function _I2C_Master_Start
  4312                           
  4313     0F80                     l1757:	
  4314                           ;incstack = 0
  4315                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4316                           
  4317                           
  4318                           ;I2C.c: 41:     I2C_Master_Wait();
  4319     0F80  120A  158A  279C  120A  158A  	fcall	_I2C_Master_Wait
  4320     0F85                     l1759:
  4321                           
  4322                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  4323     0F85  1683               	bsf	3,5	;RP0=1, select bank1
  4324     0F86  1303               	bcf	3,6	;RP1=0, select bank1
  4325     0F87  1411               	bsf	17,0	;volatile
  4326     0F88                     l199:
  4327     0F88  0008               	return
  4328     0F89                     __end_of_I2C_Master_Start:
  4329                           
  4330                           	psect	text23
  4331     0F77                     __ptext23:	
  4332 ;; *************** function _I2C_Master_RepeatedStart *****************
  4333 ;; Defined at:
  4334 ;;		line 47 in file "I2C.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;		None
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;		None
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		wreg, status,2, status,0, pclath, cstack
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4348 ;;      Params:         0       0       0       0       0
  4349 ;;      Locals:         0       0       0       0       0
  4350 ;;      Temps:          0       0       0       0       0
  4351 ;;      Totals:         0       0       0       0       0
  4352 ;;Total ram usage:        0 bytes
  4353 ;; Hardware stack levels used: 1
  4354 ;; Hardware stack levels required when called: 2
  4355 ;; This function calls:
  4356 ;;		_I2C_Master_Wait
  4357 ;; This function is called by:
  4358 ;;		_main
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362     0F77                     _I2C_Master_RepeatedStart:	
  4363                           ;psect for function _I2C_Master_RepeatedStart
  4364                           
  4365     0F77                     l1769:	
  4366                           ;incstack = 0
  4367                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  4368                           
  4369                           
  4370                           ;I2C.c: 49:     I2C_Master_Wait();
  4371     0F77  120A  158A  279C  120A  158A  	fcall	_I2C_Master_Wait
  4372     0F7C                     l1771:
  4373                           
  4374                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  4375     0F7C  1683               	bsf	3,5	;RP0=1, select bank1
  4376     0F7D  1303               	bcf	3,6	;RP1=0, select bank1
  4377     0F7E  1491               	bsf	17,1	;volatile
  4378     0F7F                     l202:
  4379     0F7F  0008               	return
  4380     0F80                     __end_of_I2C_Master_RepeatedStart:
  4381                           
  4382                           	psect	text24
  4383     0763                     __ptext24:	
  4384 ;; *************** function _I2C_Master_Read *****************
  4385 ;; Defined at:
  4386 ;;		line 74 in file "I2C.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  a               2    2[COMMON] unsigned short 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  temp            2    6[COMMON] unsigned short 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  2    2[COMMON] unsigned short 
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0, pclath, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4400 ;;      Params:         2       0       0       0       0
  4401 ;;      Locals:         2       0       0       0       0
  4402 ;;      Temps:          2       0       0       0       0
  4403 ;;      Totals:         6       0       0       0       0
  4404 ;;Total ram usage:        6 bytes
  4405 ;; Hardware stack levels used: 1
  4406 ;; Hardware stack levels required when called: 2
  4407 ;; This function calls:
  4408 ;;		_I2C_Master_Wait
  4409 ;; This function is called by:
  4410 ;;		_main
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414     0763                     _I2C_Master_Read:	
  4415                           ;psect for function _I2C_Master_Read
  4416                           
  4417     0763                     l1773:	
  4418                           ;incstack = 0
  4419                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4420                           
  4421                           
  4422                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  4423     0763  120A  158A  279C  120A  118A  	fcall	_I2C_Master_Wait
  4424     0768                     l1775:
  4425                           
  4426                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  4427     0768  1683               	bsf	3,5	;RP0=1, select bank1
  4428     0769  1303               	bcf	3,6	;RP1=0, select bank1
  4429     076A  1591               	bsf	17,3	;volatile
  4430                           
  4431                           ;I2C.c: 79:     I2C_Master_Wait();
  4432     076B  120A  158A  279C  120A  118A  	fcall	_I2C_Master_Wait
  4433     0770                     l1777:
  4434                           
  4435                           ;I2C.c: 80:     temp = SSPBUF;
  4436     0770  1283               	bcf	3,5	;RP0=0, select bank0
  4437     0771  1303               	bcf	3,6	;RP1=0, select bank0
  4438     0772  0813               	movf	19,w	;volatile
  4439     0773  00F4               	movwf	??_I2C_Master_Read
  4440     0774  01F5               	clrf	??_I2C_Master_Read+1
  4441     0775  0874               	movf	??_I2C_Master_Read,w
  4442     0776  00F6               	movwf	I2C_Master_Read@temp
  4443     0777  0875               	movf	??_I2C_Master_Read+1,w
  4444     0778  00F7               	movwf	I2C_Master_Read@temp+1
  4445     0779                     l1779:
  4446                           
  4447                           ;I2C.c: 81:     I2C_Master_Wait();
  4448     0779  120A  158A  279C  120A  118A  	fcall	_I2C_Master_Wait
  4449     077E                     l1781:
  4450                           
  4451                           ;I2C.c: 82:     if(a == 1){
  4452     077E  0372               	decf	I2C_Master_Read@a,w
  4453     077F  0473               	iorwf	I2C_Master_Read@a+1,w
  4454     0780  1D03               	btfss	3,2
  4455     0781  2F83               	goto	u1021
  4456     0782  2F84               	goto	u1020
  4457     0783                     u1021:
  4458     0783  2F88               	goto	l211
  4459     0784                     u1020:
  4460     0784                     l1783:
  4461                           
  4462                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4463     0784  1683               	bsf	3,5	;RP0=1, select bank1
  4464     0785  1303               	bcf	3,6	;RP1=0, select bank1
  4465     0786  1291               	bcf	17,5	;volatile
  4466                           
  4467                           ;I2C.c: 84:     }else{
  4468     0787  2F8B               	goto	l212
  4469     0788                     l211:
  4470                           
  4471                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4472     0788  1683               	bsf	3,5	;RP0=1, select bank1
  4473     0789  1303               	bcf	3,6	;RP1=0, select bank1
  4474     078A  1691               	bsf	17,5	;volatile
  4475     078B                     l212:	
  4476                           ;I2C.c: 86:     }
  4477                           
  4478                           
  4479                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4480     078B  1611               	bsf	17,4	;volatile
  4481     078C                     l1785:
  4482                           
  4483                           ;I2C.c: 88:     return temp;
  4484     078C  0877               	movf	I2C_Master_Read@temp+1,w
  4485     078D  00F3               	movwf	?_I2C_Master_Read+1
  4486     078E  0876               	movf	I2C_Master_Read@temp,w
  4487     078F  00F2               	movwf	?_I2C_Master_Read
  4488     0790                     l213:
  4489     0790  0008               	return
  4490     0791                     __end_of_I2C_Master_Read:
  4491                           
  4492                           	psect	text25
  4493     0F9C                     __ptext25:	
  4494 ;; *************** function _I2C_Master_Wait *****************
  4495 ;; Defined at:
  4496 ;;		line 32 in file "I2C.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;		None
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;		None
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      void 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4510 ;;      Params:         0       0       0       0       0
  4511 ;;      Locals:         0       0       0       0       0
  4512 ;;      Temps:          0       0       0       0       0
  4513 ;;      Totals:         0       0       0       0       0
  4514 ;;Total ram usage:        0 bytes
  4515 ;; Hardware stack levels used: 1
  4516 ;; Hardware stack levels required when called: 1
  4517 ;; This function calls:
  4518 ;;		Nothing
  4519 ;; This function is called by:
  4520 ;;		_I2C_Master_Start
  4521 ;;		_I2C_Master_RepeatedStart
  4522 ;;		_I2C_Master_Stop
  4523 ;;		_I2C_Master_Write
  4524 ;;		_I2C_Master_Read
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528     0F9C                     _I2C_Master_Wait:	
  4529                           ;psect for function _I2C_Master_Wait
  4530                           
  4531     0F9C                     l1731:	
  4532                           ;incstack = 0
  4533                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4534                           
  4535     0F9C                     l193:	
  4536                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4537                           
  4538     0F9C  1683               	bsf	3,5	;RP0=1, select bank1
  4539     0F9D  1303               	bcf	3,6	;RP1=0, select bank1
  4540     0F9E  1914               	btfsc	20,2	;volatile
  4541     0F9F  2FA1               	goto	u971
  4542     0FA0  2FA2               	goto	u970
  4543     0FA1                     u971:
  4544     0FA1  2F9C               	goto	l193
  4545     0FA2                     u970:
  4546     0FA2                     l1733:
  4547     0FA2  0811               	movf	17,w	;volatile
  4548     0FA3  391F               	andlw	31
  4549     0FA4  1D03               	btfss	3,2
  4550     0FA5  2FA7               	goto	u981
  4551     0FA6  2FA8               	goto	u980
  4552     0FA7                     u981:
  4553     0FA7  2F9C               	goto	l193
  4554     0FA8                     u980:
  4555     0FA8                     l196:
  4556     0FA8  0008               	return
  4557     0FA9                     __end_of_I2C_Master_Wait:
  4558                           
  4559                           	psect	text26
  4560     0F70                     __ptext26:	
  4561 ;; *************** function _isr *****************
  4562 ;; Defined at:
  4563 ;;		line 69 in file "masterI2C.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;		None
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;		None
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      void 
  4570 ;; Registers used:
  4571 ;;		None
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4577 ;;      Params:         0       0       0       0       0
  4578 ;;      Locals:         0       0       0       0       0
  4579 ;;      Temps:          2       0       0       0       0
  4580 ;;      Totals:         2       0       0       0       0
  4581 ;;Total ram usage:        2 bytes
  4582 ;; Hardware stack levels used: 1
  4583 ;; This function calls:
  4584 ;;		Nothing
  4585 ;; This function is called by:
  4586 ;;		Interrupt level 1
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590     0F70                     _isr:	
  4591                           ;psect for function _isr
  4592                           
  4593     0F70                     i1l136:
  4594     0F70  0871               	movf	??_isr+1,w
  4595     0F71  008A               	movwf	10
  4596     0F72  0E70               	swapf	??_isr,w
  4597     0F73  0083               	movwf	3
  4598     0F74  0EFE               	swapf	btemp,f
  4599     0F75  0E7E               	swapf	btemp,w
  4600     0F76  0009               	retfie
  4601     0F77                     __end_of_isr:
  4602     007E                     btemp	set	126	;btemp
  4603     007E                     wtemp0	set	126
  4604                           
  4605                           	psect	intentry
  4606     0004                     __pintentry:	
  4607                           ;incstack = 0
  4608                           ; Regs used in _isr: []
  4609                           
  4610     0004                     interrupt_function:
  4611     007E                     saved_w	set	btemp
  4612     0004  00FE               	movwf	btemp
  4613     0005  0E03               	swapf	3,w
  4614     0006  00F0               	movwf	??_isr
  4615     0007  080A               	movf	10,w
  4616     0008  00F1               	movwf	??_isr+1
  4617     0009  120A  158A  2F70   	ljmp	_isr
  4618                           
  4619                           	psect	idloc
  4620                           
  4621                           ;Config register IDLOC0 @ 0x2000
  4622                           ;	unspecified, using default values
  4623     2000                     	org	8192
  4624     2000  3FFF               	dw	16383
  4625                           
  4626                           ;Config register IDLOC1 @ 0x2001
  4627                           ;	unspecified, using default values
  4628     2001                     	org	8193
  4629     2001  3FFF               	dw	16383
  4630                           
  4631                           ;Config register IDLOC2 @ 0x2002
  4632                           ;	unspecified, using default values
  4633     2002                     	org	8194
  4634     2002  3FFF               	dw	16383
  4635                           
  4636                           ;Config register IDLOC3 @ 0x2003
  4637                           ;	unspecified, using default values
  4638     2003                     	org	8195
  4639     2003  3FFF               	dw	16383
  4640                           
  4641                           	psect	config
  4642                           
  4643                           ;Config register CONFIG1 @ 0x2007
  4644                           ;	Oscillator Selection bits
  4645                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4646                           ;	Watchdog Timer Enable bit
  4647                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4648                           ;	Power-up Timer Enable bit
  4649                           ;	PWRTE = OFF, PWRT disabled
  4650                           ;	RE3/MCLR pin function select bit
  4651                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4652                           ;	Code Protection bit
  4653                           ;	CP = OFF, Program memory code protection is disabled
  4654                           ;	Data Code Protection bit
  4655                           ;	CPD = OFF, Data memory code protection is disabled
  4656                           ;	Brown Out Reset Selection bits
  4657                           ;	BOREN = OFF, BOR disabled
  4658                           ;	Internal External Switchover bit
  4659                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4660                           ;	Fail-Safe Clock Monitor Enabled bit
  4661                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4662                           ;	Low Voltage Programming Enable bit
  4663                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4664                           ;	In-Circuit Debugger Mode bit
  4665                           ;	DEBUG = 0x1, unprogramme  4666     2007                     	org	8199
  4667     2007  20D4               	dw	8404
  4668                           
  4669                           ;Config register CONFIG2 @ 0x2008
  4670                           ;	Brown-out Reset Selection bit
  4671                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4672                           ;	Flash Program Memory Self Write Enable bits
  4673                           ;	WRT = OFF, Write protection off
  4674     2008                     	org	8200
  4675     2008  3FFF               	dw	16383

Data Sizes:
    Strings     22
    Constant    10
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     41      71
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_4(CODE[3]), STR_2(CODE[9]), STR_1(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> Resadc(BANK0[4]), fecha(BANK0[9]), hora(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 9
		 -> Resadc(BANK0[4]), STR_3(CODE[4]), fecha(BANK0[9]), hora(BANK0[9]), 


Critical Paths under _main in COMMON

    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _pantalla->_Lcd_Write_String
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _bcd_to_decimal->___bmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _pantalla->_sprintf
    _sprintf->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0    8701
                                             21 BANK0     20    20      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _bcd_to_decimal
                           _pantalla
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     730
                    _I2C_Master_Init
                           _Lcd_Init
                      _configIntbits
                          _configOsc
                         _configPort
                             _pullup
 ---------------------------------------------------------------------------------
 (2) _pullup                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configPort                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configOsc                                            2     0      2     252
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _configIntbits                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      66
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _pantalla                                             0     0      0    2349
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    18      7    1429
                                              4 BANK0     17    10      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                             10 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     438
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      44
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       3     2      1     482
                                              6 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      44
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _bcd_to_decimal                                       3     3      0     212
                                              6 COMMON     3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    2682
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     881
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _bcd_to_decimal
     ___bmul
   _pantalla
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _configIntbits
     _configOsc
     _configPort
     _pullup
   _sprintf

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      53       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     29      47       5       88.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      53      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Aug 09 13:22:28 2023

                               pc 0002                    ___bmul@product 0074                                l40 0F6F  
                              l43 0F63                                l61 0532                                l37 0FFF  
                              l55 052F                                fsr 0004                               l202 0F7F  
                             l211 0788                               l212 078B                               l213 0790  
                             l205 0F91                               l230 07F7                               l208 0F9B  
                             l161 05ED                               l242 0638                               l227 0F69  
                             l251 06BE                               l155 07BD                               l245 0FE9  
                             l158 0FD3                               l190 0732                               l239 07DD  
                             l407 059A                               l193 0F9C                               l196 0FA8  
                             l199 0F88                               l367 04C1                               l643 067C  
                             l397 0FBD                               l653 06FA                               _GIE 005F  
                             _RB0 0030                               _RB1 0031                               _RB2 0032  
                             _RB3 0033                               _RE0 0048                               _RE1 0049  
                             u600 0574                               u601 0573                               u700 06C7  
                             u620 0592                               u701 06C6                               u621 0591  
                             u605 0570                               u630 0641                               u631 0640  
                             u615 0584                               u720 06D9                               u560 0545  
                             u800 0500                               u721 06D8                               u561 0544  
                             u801 04FF                               u650 0653                               u730 06E3  
                             u810 050E                               u651 0652                               u731 06E2  
                             u715 06CB                               u811 050D                               u900 04BD  
                             u580 0559                               u820 051C                               u645 0645  
                             u901 04BC                               u581 0558                               u821 051B  
                             u670 0664                               u750 06F6                               u910 0712  
                             u830 052A                               u671 0663                               u751 06F5  
                             u735 06DF                               u575 054A                               u831 0529  
                             u920 07C4                               u840 03F2                               u760 04C9  
                             u921 07C3                               u665 0654                               u745 06EA  
                             u841 03F1                               u761 04C8                               u930 07D4  
                             u690 0678                               u850 042A                               u770 04D5  
                             u931 07D3                               u691 0677                               u675 0660  
                             u851 0429                               u595 055B                               u915 070D  
                             u771 04D4                               u940 068A                               u860 0450  
                             u780 04E3                               u685 066C                               u861 044F  
                             u781 04E2                               u950 06AC                               u870 045B  
                             u790 04F0                               u871 045A                               u791 04EF  
                             u960 06BE                               u880 0461                               u961 06BD  
                             u881 0460                               u865 044C                               u970 0FA2  
                             u890 04AD                               u971 0FA1                               u891 04AC  
                             u980 0FA8                               u981 0FA7                               u990 0FAF  
                             u991 0FAE                               _day 004D                               _min 004F  
                             _sec 0050                               _isr 0F70                               fsr0 0004  
                             indf 0000                              l2001 039F                              l2003 03A8  
                            l2005 03B1                              l2007 03CE                              l2009 03D3  
                            l2037 040F                              l1501 0574                              l1503 0582  
                            l1521 064B                              l1513 0639                              l1505 0583  
                            l1601 04E3                              l1531 066B                              l1523 064F  
                            l1515 063B                              l1507 058C                              l1611 0507  
                            l1603 04EA                              l1533 0672                              l1525 0653  
                            l1517 0641                              l1541 06C7                              l1509 0592  
                            l1701 05EE                              l1621 052A                              l1613 050E  
                            l1605 04F0                              l1471 07E2                              l1711 07BF  
                            l1527 0664                              l1519 0644                              l1535 0678  
                            l1551 06E3                              l1543 06CA                              l1631 03F2  
                            l1703 05F4                              l1615 0515                              l1607 04F7  
                            l1623 052F                              l1473 07E8                              l1721 07D7  
                            l1713 07C4                              l1481 0FD8                              l1529 066A  
                            l1553 06E9                              l1545 06D1                              l1641 041A  
                            l1633 03F7                              l1801 05D3                              l1705 05FD  
                            l1617 051C                              l1609 0500                              l1561 0FEA  
                            l1731 0F9C                              l1467 0F65                              l1475 07EB  
                            l1715 07C7                              l1483 0FDE                              l1723 067D  
                            l1555 06F0                              l1547 06D5                              l1539 06BF  
                            l1651 0433                              l1643 0422                              l1635 03FC  
                            l1627 03E9                              l1803 05E4                              l1491 0545  
                            l1707 060C                              l1619 0523                              l1571 0FF8  
                            l1563 0FEE                              l1811 0024                              l1733 0FA2  
                            l1741 0FB3                              l1477 07F4                              l1469 07DF  
                            l1717 07CE                              l1485 0FE1                              l1725 0680  
                            l1549 06D9                              l1557 06F6                              l1661 0451  
                            l1645 0426                              l1629 03EC                              l1493 0548  
                            l1709 0612                              l1573 0FFB                              l1565 0FEF  
                            l1901 01F5                              l1821 0033                              l1813 0026  
                            l1743 0FB5                              l1735 0FAA                              l1719 07D4  
                            l1487 0FE6                              l1479 0FD5                              l1727 069C  
                            l1671 046D                              l1663 045B                              l1647 042A  
                            l1639 03FD                              l1495 0555                              l1591 04C2  
                            l1575 0FFC                              l1567 0FF6                              l1583 0F6A  
                            l1751 07B3                              l1911 0225                              l1903 0203  
                            l1831 0053                              l1823 0039                              l1815 0027  
                            l1807 001C                              l1745 0FBC                              l1737 0FAB  
                            l1761 0FBF                              l1729 06A2                              l1673 049B  
                            l1665 0461                              l1657 0435                              l1649 042E  
                            l1681 04BD                              l1497 0559                              l1489 0533  
                            l1593 04C9                              l1577 0FFD                              l1569 0FF7  
                            l1585 0F6D                              l1753 07B8                              l1921 024C  
                            l1913 022D                              l1905 0208                              l1841 0084  
                            l1833 005C                              l1825 003A                              l1817 0029  
                            l1809 0021                              l1771 0F7C                              l1739 0FAF  
                            l1675 04A0                              l1667 0466                              l1499 0562  
                            l1691 06FF                              l1595 04CE                              l1579 0FFE  
                            l1931 0271                              l1923 0251                              l1915 0232  
                            l1907 0217                              l1851 00A8                              l1843 0089  
                            l1835 006A                              l1827 003F                              l1819 002F  
                            l1781 077E                              l1773 0763                              l1757 0F80  
                            l1765 0F92                              l1677 04A4                              l1669 046A  
                            l1693 0702                              l1589 0F61                              l1597 04D5  
                            l1749 0791                              l1941 0299                              l1933 027D  
                            l1925 025A                              l1917 023B                              l1909 021C  
                            l1861 0112                              l1853 00AA                              l1837 006F  
                            l1829 004A                              l1845 0098                              l1783 0784  
                            l1775 0768                              l1759 0F85                              l1791 0F8E  
                            l1767 0F97                              l1679 04AD                              l1695 072F  
                            l1599 04DC                              l1951 02BD                              l1943 029E  
                            l1935 0282                              l1927 0263                              l1919 0247  
                            l1871 017E                              l1863 0118                              l1855 00F9  
                            l1847 009E                              l1839 0078                              l1785 078C  
                            l1777 0770                              l1769 0F77                              l1793 059B  
                            l1697 0730                              l1689 06FB                              l1961 02E9  
                            l1953 02C6                              l1945 02A7                              l1937 0287  
                            l1929 0268                              l1881 0199                              l1873 0182  
                            l1865 011A                              l1849 00A2                              l1857 0108  
                            l1779 0779                              l1795 05A3                              l1699 0731  
                            l1971 030A                              l1963 02EE                              l1955 02CF  
                            l1947 02B3                              l1939 0290                              l1891 01C7  
                            l1883 01A2                              l1875 0188                              l1867 0169  
                            l1859 010E                              l1789 0F89                              l1797 05AC  
                            l1981 0332                              l1973 0313                              l1965 02F3  
                            l1957 02D4                              l1949 02B8                              l1893 01D3  
                            l1885 01AB                              l1877 0189                              l1869 0178  
                            l1799 05CB                              l1991 035A                              l1983 033B  
                            l1975 031F                              l1967 02FC                              l1959 02DD  
                            l1895 01D8                              l1887 01B9                              l1879 018E  
                            l1993 0365                              l1985 0340                              l1977 0324  
                            l1969 0305                              l1889 01BE                              l1897 01E7  
                            l1995 036E                              l1987 0349                              l1979 0329  
                            l1899 01EC                              l1997 0377                              l1989 0355  
                            l1999 0394                              ?_isr 0070                              STR_1 0756  
                            STR_2 074D                              STR_3 075F                              STR_4 0753  
                            u1000 0FBC                              u1001 0FBB                              u1020 0784  
                            u1100 0188                              u1021 0783                              u1101 0187  
                            u1030 002F                              u1015 0FC7                              u1031 002E  
                            u1040 0039                              u1041 0038                              u1050 009E  
                            u1051 009D                              u1060 00A8                              u1061 00A7  
                            u1117 0091                              u1070 010E                              u1207 0FE3  
                            u1071 010D                              u1127 0101                              u1080 0118  
                            u1217 07EF                              u1137 0171                              u1081 0117  
                            u1090 017E                              u1147 01E0                              u1091 017D  
                            u1157 0210                              u1167 03DB                              u1177 05F8  
                            u1187 0607                              u1197 0616                              _PEIE 005E  
               ?_Lcd_Write_String 0075  __end_of_I2C_Master_RepeatedStart 0F80                              _main 001C  
                            _hora 005A                              _hour 004E                              _year 004B  
                            btemp 007E                              start 000C                ??_Lcd_Write_String 0077  
                 __end_of_Lcd_Cmd 07F8                 ___bmul@multiplier 0075                             ??_isr 0070  
                ?_I2C_Master_Init 0025                  ?_I2C_Master_Read 0072                  ?_I2C_Master_Wait 0070  
                ?_I2C_Master_Stop 0070                     configOsc@freq 0072                             ?_main 0070  
                           _ANSEL 0188                   __end_of___lldiv 059B                   __end_of___lwdiv 067D  
                           i1l136 0F70                   __end_of___lwmod 06FB                             _PORTA 0005  
                           _PORTB 0006                             _PORTC 0007                             _PORTD 0008  
                           _PORTE 0009                             _TRISA 0085                             _TRISB 0086  
                           _TRISC 0087                             _TRISD 0088                             _SSPIE 0463  
                           _TRISE 0089                             _SSPIF 0063                   ??_configIntbits 0072  
                           _fecha 0051                   __end_of_dpowers 074D                             _temp1 0049  
                           _month 004C                             _setup 0791                             main@d 0048  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 __end_of_sprintf 04C2                  __end_of_Lcd_Init 0639                  __end_of_Lcd_Port 0F6A  
                 __initialization 000F                      __end_of_main 03E6                            ??_main 0035  
               ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0072                ??_I2C_Master_Start 0072  
              ??_I2C_Master_Write 0074                            ?_setup 0070                            _ANSELH 0189  
                       ??_Lcd_Cmd 0073                            _SSPADD 0093                            _TRISC3 043B  
                          _TRISC4 043C                            _SSPCON 0014                            _SSPBUF 0013  
                          _Resadc 0063          _I2C_Master_RepeatedStart 0F77                            ___bmul 0FA9  
                       ??___lldiv 007A                         ??___lwdiv 0076                         ??___lwmod 007A  
                __end_of_pantalla 05EE                            _pullup 0F6A                            main@hr 0047  
                          main@mt 0046                            main@yr 0045                            saved_w 007E  
                       ??_sprintf 002B                 main@hours_decimal 0041                   Lcd_Set_Cursor@a 0077  
                 Lcd_Set_Cursor@b 0076                  main@days_decimal 0042           __end_of__initialization 0018  
             main@minutes_decimal 0040           Lcd_Set_Cursor@direccion 0078               ___bmul@multiplicand 0072  
                  __pcstackCOMMON 0070                    main@an_decimal 003E                     __end_of_setup 07BE  
             main@seconds_decimal 003F                    _Lcd_Set_Cursor 07BE                    _OPTION_REGbits 0081  
                       ?_Lcd_Init 0070                         ?_Lcd_Port 0070                           ??_setup 007B  
                      __pbssBANK0 0049                        __pmaintext 001C                           ?___bmul 0072  
               bcd_to_decimal@bcd 0078                        __pintentry 0004            __end_of_Lcd_Set_Cursor 07DE  
                         ?_pullup 0070                        _configPort 0FEA                        ??_Lcd_Init 0076  
                      ??_Lcd_Port 0072                           _SSPCON2 0091                           _SSPSTAT 0094  
                      __stringtab 0733                    _Lcd_Write_Char 0FD4                           _Lcd_Cmd 07DE  
                       ?_pantalla 0070                 __end_of_configOsc 0533                           ___lldiv 0533  
                         ___lwdiv 0639                           ___lwmod 06BF                   ?_Lcd_Set_Cursor 0076  
                         __ptext1 0791                           __ptext2 0F6A                           __ptext3 0FEA  
                         __ptext4 04C2                           __ptext5 0F61                           __ptext6 05EE  
                         __ptext7 06FB                           __ptext8 0533                           __ptext9 059B  
                         _dpowers 0743             __end_of_configIntbits 0F64                           _sprintf 03E6  
                         clrloop0 07F9            __end_of_Lcd_Write_Char 0FEA              end_of_initialization 0018  
      ??_I2C_Master_RepeatedStart 0072                        ??_pantalla 007C                   ___lldiv@divisor 0072  
                 ___lldiv@counter 0024                  I2C_Master_Init@c 0025                  I2C_Master_Read@a 0072  
                       Lcd_Port@a 0072                  main@hora_decimal 003B                       ?_configPort 0070  
                       _TRISCbits 0087                   ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0075  
               Lcd_Write_String@i 007A                    __end_of___bmul 0FBE                  _Lcd_Write_String 067D  
                 main@dia_decimal 003C                    __end_of_pullup 0F70               start_initialization 000F  
                  _bcd_to_decimal 0FBE                       __end_of_isr 0F77                 ??_I2C_Master_Init 0029  
               ??_I2C_Master_Read 0074                 ??_I2C_Master_Wait 0072                 ??_I2C_Master_Stop 0072  
                        ??___bmul 0073                   Lcd_Write_Char@a 0074                          ??_pullup 0072  
          __end_of_bcd_to_decimal 0FD4                         ___latbits 0002                     __pcstackBANK0 0020  
                        ?_Lcd_Cmd 0070                       sprintf@flag 002F                       sprintf@prec 0030  
                _I2C_Master_Start 0F80                  _I2C_Master_Write 0F92                  ___lwdiv@dividend 0074  
                ??_Lcd_Set_Cursor 0077                          ?___lldiv 0072                          ?___lwdiv 0072  
                        ?___lwmod 0020                         _configOsc 04C2                         __pstrings 0733  
                 ?_bcd_to_decimal 0070                  ___lwdiv@quotient 0077                          ?_sprintf 0024  
               main@years_decimal 0044                 interrupt_function 0004                          _IOCBbits 0096  
                       clear_ram0 07F8                          Lcd_Cmd@a 0075                        ?_configOsc 0072  
                 main@mes_decimal 003D                       __stringbase 0742                          _WPUBbits 0095  
                ??_Lcd_Write_Char 0073                      ??_configPort 0072                          _Lcd_Init 05EE  
                        _Lcd_Port 0F64               I2C_Master_Read@temp 0076          __end_of_Lcd_Write_String 06BF  
              __end_of_configPort 1000         ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0743  
                      sprintf@val 0031                   _I2C_Master_Init 06FB                   _I2C_Master_Read 0763  
                 _I2C_Master_Wait 0F9C                   _I2C_Master_Stop 0F89                   ___lwdiv@divisor 0072  
                 ___lwdiv@counter 0079                          __ptext10 03E6                          __ptext11 06BF  
                        __ptext20 0F92                          __ptext12 0639                          __ptext21 0F89  
                        __ptext13 067D                          __ptext22 0F80                          __ptext14 0FD4  
                        __ptext23 0F77                          __ptext15 07BE                          __ptext24 0763  
                        __ptext16 07DE                          __ptext25 0F9C                          __ptext17 0F64  
                        __ptext26 0F70                          __ptext18 0FBE                          __ptext19 0FA9  
                        _pantalla 059B                       ??_configOsc 0074          __end_of_I2C_Master_Start 0F89  
        __end_of_I2C_Master_Write 0F9C                        _INTCONbits 000B                     _configIntbits 0F61  
                        intlevel1 0000                         sprintf@ap 002E                         sprintf@sp 0033  
                ___lwmod@dividend 0022                  ___lldiv@dividend 0076                         stringcode 073D  
                      _OSCCONbits 008F                main@months_decimal 0043                  ??_bcd_to_decimal 0076  
         __end_of_I2C_Master_Init 0733           __end_of_I2C_Master_Read 0791           __end_of_I2C_Master_Wait 0FA9  
         __end_of_I2C_Master_Stop 0F92                          sprintf@c 0034                          sprintf@f 0024  
                ___lldiv@quotient 0020                 I2C_Master_Write@d 0072                   ___lwmod@divisor 0020  
                 ___lwmod@counter 007B                          stringdir 073D                          stringtab 0733  
                     _SSPCON2bits 0091                    ?_configIntbits 0070  
